Waiting now
attemping to hold lock in setToRefs
letting go hold lock in setToRefs
Sending url to channel...
Done
Sending url to channel...
Done
Sending url to channel...
Done
Sending url to channel...
Done
Sending url to channel...
Done
Sending url to channel...
Done
Sending url to channel...
Done
Recieved URL
Recieved URL
Recieved URL
Recieved URL
Recieved URL
Recieved URL
Recieved URL
Entering GoScrape
Entering GoScrape
Sending url to channel...
Done
Sending url to channel...
Done
Entering GoScrape
Entering GoScrape
Recieved URL
Recieved URL
Entering GoScrape
Entering GoScrape
Entering GoScrape
Entering GoScrape
Entering GoScrape
attemping to hold lock in setToRefs
letting go hold lock in setToRefs
attemping to hold lock in setToRefs
letting go hold lock in setToRefs
attemping to hold lock in setToRefs
letting go hold lock in setToRefs
attemping to hold lock in setToRefs
letting go hold lock in setToRefs
attemping to hold lock in setToRefs
letting go hold lock in setToRefs
attemping to hold lock in setToRefs
letting go hold lock in setToRefs
attemping to hold lock in setToRefs
letting go hold lock in setToRefs
attemping to hold lock in setToRefs
letting go hold lock in setToRefs
attemping to hold lock in setToRefs
letting go hold lock in setToRefs
Done waiting
Initial URL:  https://en.wikipedia.org/wiki/Go_(programming_language)
Size:  10

{https://en.wikipedia.org/wiki/Main_Page} Refers To:
	 0: {https://en.wikipedia.org/wiki/Main_Page}
	 1: {https://en.wikipedia.org/wiki/Main_Page}
	 2: {https://en.wikipedia.org/wiki/Main_Page}
	 3: {https://en.wikipedia.org/wiki/Main_Page}
	 4: {https://en.wikipedia.org/wiki/Main_Page}
	 5: {https://en.wikipedia.org/wiki/Wikipedia}
	 6: {https://en.wikipedia.org/wiki/Free_content}
	 7: {https://en.wikipedia.org/wiki/Encyclopedia}
	 8: {https://en.wikipedia.org/wiki/English_language}
	 9: {https://en.wikipedia.org/wiki/Donkey_Kong_Land}
	 10: {https://en.wikipedia.org/wiki/Platformer}
	 11: {https://en.wikipedia.org/wiki/Rare_(company)}
	 12: {https://en.wikipedia.org/wiki/Nintendo}
	 13: {https://en.wikipedia.org/wiki/Game_Boy}
	 14: {https://en.wikipedia.org/wiki/Side-scrolling_video_game}
	 15: {https://en.wikipedia.org/wiki/Donkey_Kong_Country}
	 16: {https://en.wikipedia.org/wiki/Donkey_Kong_(character)}
	 17: {https://en.wikipedia.org/wiki/Porting}
	 18: {https://en.wikipedia.org/wiki/Pre-rendering}
	 19: {https://en.wikipedia.org/wiki/Sprite_(computer_graphics)}
	 20: {https://en.wikipedia.org/wiki/Data_compression}
	 21: {https://en.wikipedia.org/wiki/David_Wise_(composer)}
	 22: {https://en.wikipedia.org/wiki/Graeme_Norgate}
	 23: {https://en.wikipedia.org/wiki/Sound_chip}
	 24: {https://en.wikipedia.org/wiki/Nintendo_3DS}
	 25: {https://en.wikipedia.org/wiki/Nintendo_Switch}
	 26: {https://en.wikipedia.org/wiki/Donkey_Kong_Land}
	 27: {https://en.wikipedia.org/wiki/History_of_education_in_Wales_(1701%E2%80%931870)}
	 28: {https://en.wikipedia.org/wiki/White_dwarf}
	 29: {https://en.wikipedia.org/wiki/Battle_of_Groix}
	 30: {https://en.wikipedia.org/wiki/Mendel_Catholic_High_School}
	 31: {https://en.wikipedia.org/wiki/Karin_Ann}
	 32: {https://en.wikipedia.org/wiki/Valley_Medical_Center_(Washington)}
	 33: {https://en.wikipedia.org/wiki/Roman_Catholic_Diocese_of_Pore%C4%8D_and_Pula}
	 34: {https://en.wikipedia.org/wiki/Benedictines}
	 35: {https://en.wikipedia.org/wiki/Dra%C5%BEen_Kutle%C5%A1a}
	 36: {https://en.wikipedia.org/wiki/Java-class_cruiser}
	 37: {https://en.wikipedia.org/wiki/Jack_Reardon_(politician)}
	 38: {https://en.wikipedia.org/wiki/Mayor_of_Kansas_City,_Kansas}
	 39: {https://en.wikipedia.org/wiki/Equality_(mathematics)}
	 40: {https://en.wikipedia.org/wiki/Dustin_Nickerson}
	 41: {https://en.wikipedia.org/wiki/Camille_Saint-Sa%C3%ABns}
	 42: {https://en.wikipedia.org/wiki/Pha%C3%A9ton_(Saint-Sa%C3%ABns)}
	 43: {https://en.wikipedia.org/wiki/Hack_(horse)}
	 44: {https://en.wikipedia.org/wiki/Montmartre}
	 45: {https://en.wikipedia.org/wiki/Trifid_Nebula}
	 46: {https://en.wikipedia.org/wiki/Lagoon_Nebula}
	 47: {https://en.wikipedia.org/wiki/Vera_C._Rubin_Observatory}
	 48: {https://en.wikipedia.org/wiki/First_light_(astronomy)}
	 49: {https://en.wikipedia.org/wiki/Oklahoma_City_Thunder}
	 50: {https://en.wikipedia.org/wiki/Indiana_Pacers}
	 51: {https://en.wikipedia.org/wiki/2025_NBA_Finals}
	 52: {https://en.wikipedia.org/wiki/Mar_Elias_Church_attack}
	 53: {https://en.wikipedia.org/wiki/Greek_Orthodox_Church}
	 54: {https://en.wikipedia.org/wiki/Damascus}
	 55: {https://en.wikipedia.org/wiki/United_States_strikes_on_Iranian_nuclear_sites}
	 56: {https://en.wikipedia.org/wiki/Crusaders_(rugby_union)}
	 57: {https://en.wikipedia.org/wiki/Chiefs_(Super_Rugby)}
	 58: {https://en.wikipedia.org/wiki/2025_Super_Rugby_Pacific_final}
	 59: {https://en.wikipedia.org/wiki/Gaza_war}
	 60: {https://en.wikipedia.org/wiki/Iran%E2%80%93Israel_war}
	 61: {https://en.wikipedia.org/wiki/Russian_invasion_of_Ukraine}
	 62: {https://en.wikipedia.org/wiki/Timeline_of_the_Russian_invasion_of_Ukraine_(1_June_2025_%E2%80%93_present)}
	 63: {https://en.wikipedia.org/wiki/Sudanese_civil_war_(2023%E2%80%93present)}
	 64: {https://en.wikipedia.org/wiki/Timeline_of_the_Sudanese_civil_war_(2025)}
	 65: {https://en.wikipedia.org/wiki/Deaths_in_2025}
	 66: {https://en.wikipedia.org/wiki/Maria_Voce}
	 67: {https://en.wikipedia.org/wiki/Wes_Hildreth}
	 68: {https://en.wikipedia.org/wiki/Lucien_Nedzi}
	 69: {https://en.wikipedia.org/wiki/Anne_Burrell}
	 70: {https://en.wikipedia.org/wiki/Frederick_W._Smith}
	 71: {https://en.wikipedia.org/wiki/Ron_Taylor_(baseball)}
	 72: {https://en.wikipedia.org/wiki/June_26}
	 73: {https://en.wikipedia.org/wiki/1740}
	 74: {https://en.wikipedia.org/wiki/War_of_Jenkins%27_Ear}
	 75: {https://en.wikipedia.org/wiki/Siege_of_Fort_Mose}
	 76: {https://en.wikipedia.org/wiki/Fort_Mose}
	 77: {https://en.wikipedia.org/wiki/Spanish_Florida}
	 78: {https://en.wikipedia.org/wiki/1945}
	 79: {https://en.wikipedia.org/wiki/United_Nations_Conference_on_International_Organization}
	 80: {https://en.wikipedia.org/wiki/Member_states_of_the_United_Nations#Original_members}
	 81: {https://en.wikipedia.org/wiki/Charter_of_the_United_Nations}
	 82: {https://en.wikipedia.org/wiki/United_Nations}
	 83: {https://en.wikipedia.org/wiki/1950}
	 84: {https://en.wikipedia.org/wiki/Douglas_DC-4}
	 85: {https://en.wikipedia.org/wiki/1950_Australian_National_Airways_Douglas_DC-4_crash}
	 86: {https://en.wikipedia.org/wiki/2010}
	 87: {https://en.wikipedia.org/wiki/2010_G20_Toronto_summit}
	 88: {https://en.wikipedia.org/wiki/2015}
	 89: {https://en.wikipedia.org/wiki/Supreme_Court_of_the_United_States}
	 90: {https://en.wikipedia.org/wiki/Obergefell_v._Hodges}
	 91: {https://en.wikipedia.org/wiki/Same-sex_marriage_in_the_United_States}
	 92: {https://en.wikipedia.org/wiki/Fourteenth_Amendment_to_the_United_States_Constitution}
	 93: {https://en.wikipedia.org/wiki/Robert_the_Lotharingian}
	 94: {https://en.wikipedia.org/wiki/George_IV}
	 95: {https://en.wikipedia.org/wiki/Walter_C._Root}
	 96: {https://en.wikipedia.org/wiki/Pavel_Belyayev}
	 97: {https://en.wikipedia.org/wiki/June_25}
	 98: {https://en.wikipedia.org/wiki/June_26}
	 99: {https://en.wikipedia.org/wiki/June_27}
	 100: {https://en.wikipedia.org/wiki/List_of_days_of_the_year}
	 101: {https://en.wikipedia.org/wiki/Atacamite}
	 102: {https://en.wikipedia.org/wiki/Halide_mineral}
	 103: {https://en.wikipedia.org/wiki/Dicopper_chloride_trihydroxide}
	 104: {https://en.wikipedia.org/wiki/Dmitri_Alekseyevich_Golitsyn}
	 105: {https://en.wikipedia.org/wiki/Atacama_Desert}
	 106: {https://en.wikipedia.org/wiki/Redox}
	 107: {https://en.wikipedia.org/wiki/Weathering}
	 108: {https://en.wikipedia.org/wiki/Fumarole_mineral}
	 109: {https://en.wikipedia.org/wiki/Fumarole}
	 110: {https://en.wikipedia.org/wiki/Hydrothermal_vent#Black_smokers_and_white_smokers}
	 111: {https://en.wikipedia.org/wiki/Malachite}
	 112: {https://en.wikipedia.org/wiki/South_Australia}
	 113: {https://en.wikipedia.org/wiki/Focus_stacking}
	 114: {https://en.wikipedia.org/wiki/Wikimedia_Foundation}
	 115: {https://en.wikipedia.org/wiki/English_language}

{https://en.wikipedia.org/wiki/Programming_paradigm} Refers To:
	 0: {https://en.wikipedia.org/wiki/Main_Page}
	 1: {https://en.wikipedia.org/wiki/Main_Page}
	 2: {https://en.wikipedia.org/wiki/Programming_paradigm}
	 3: {https://en.wikipedia.org/wiki/Programming_paradigm}
	 4: {https://en.wikipedia.org/wiki/Programming_paradigm}
	 5: {https://en.wikipedia.org/wiki/Programming_model}
	 6: {https://en.wikipedia.org/wiki/Computer_program}
	 7: {https://en.wikipedia.org/wiki/Programming_language}
	 8: {https://en.wikipedia.org/wiki/Execution_model}
	 9: {https://en.wikipedia.org/wiki/Side_effect_(computer_science)}
	 10: {https://en.wikipedia.org/wiki/Syntax_(programming_languages)}
	 11: {https://en.wikipedia.org/wiki/Formal_grammar}
	 12: {https://en.wikipedia.org/wiki/Hierarchical_relationship}
	 13: {https://en.wikipedia.org/wiki/Imperative_programming}
	 14: {https://en.wikipedia.org/wiki/Control_flow}
	 15: {https://en.wikipedia.org/wiki/Procedural_programming}
	 16: {https://en.wikipedia.org/wiki/Function_(computer_programming)}
	 17: {https://en.wikipedia.org/wiki/Object-oriented_programming}
	 18: {https://en.wikipedia.org/wiki/Object_(computer_science)}
	 19: {https://en.wikipedia.org/wiki/Class_(computer_programming)}
	 20: {https://en.wikipedia.org/wiki/Prototype-based_programming}
	 21: {https://en.wikipedia.org/wiki/Declarative_programming}
	 22: {https://en.wikipedia.org/wiki/Functional_programming}
	 23: {https://en.wikipedia.org/wiki/Logic_programming}
	 24: {https://en.wikipedia.org/wiki/Reactive_programming}
	 25: {https://en.wikipedia.org/wiki/Concurrent_programming_language}
	 26: {https://en.wikipedia.org/wiki/Futures_and_promises}
	 27: {https://en.wikipedia.org/wiki/Actor_model}
	 28: {https://en.wikipedia.org/wiki/Constraint_programming}
	 29: {https://en.wikipedia.org/wiki/Simplex_algorithm}
	 30: {https://en.wikipedia.org/wiki/Dataflow}
	 31: {https://en.wikipedia.org/wiki/Spreadsheet}
	 32: {https://en.wikipedia.org/wiki/Distributed_computing}
	 33: {https://en.wikipedia.org/wiki/Generic_programming}
	 34: {https://en.wikipedia.org/wiki/Metaprogramming}
	 35: {https://en.wikipedia.org/wiki/Template_metaprogramming}
	 36: {https://en.wikipedia.org/wiki/Reflective_programming}
	 37: {https://en.wikipedia.org/wiki/Pipeline_programming}
	 38: {https://en.wikipedia.org/wiki/Rule-based_programming}
	 39: {https://en.wikipedia.org/wiki/Visual_programming_language}
	 40: {https://en.wikipedia.org/wiki/Simulink}
	 41: {https://en.wikipedia.org/wiki/Computer_science}
	 42: {https://en.wikipedia.org/wiki/Research}
	 43: {https://en.wikipedia.org/wiki/Software_development}
	 44: {https://en.wikipedia.org/wiki/Software_engineering}
	 45: {https://en.wikipedia.org/wiki/Process}
	 46: {https://en.wikipedia.org/wiki/Methodology}
	 47: {https://en.wikipedia.org/wiki/Programming_language}
	 48: {https://en.wikipedia.org/wiki/Smalltalk}
	 49: {https://en.wikipedia.org/wiki/Haskell}
	 50: {https://en.wikipedia.org/wiki/C%2B%2B}
	 51: {https://en.wikipedia.org/wiki/Object_Pascal}
	 52: {https://en.wikipedia.org/wiki/PHP}
	 53: {https://en.wikipedia.org/wiki/Procedural_programming}
	 54: {https://en.wikipedia.org/wiki/Object-oriented_programming}
	 55: {https://en.wikipedia.org/wiki/Source_code}
	 56: {https://en.wikipedia.org/wiki/Comparison_of_multi-paradigm_programming_languages}
	 57: {https://en.wikipedia.org/wiki/Object_(programming)}
	 58: {https://en.wikipedia.org/wiki/Functional_programming}
	 59: {https://en.wikipedia.org/wiki/Process-oriented_programming}
	 60: {https://en.wikipedia.org/wiki/Data_structure}
	 61: {https://en.wikipedia.org/wiki/Side-effect_(computer_science)}
	 62: {https://en.wikipedia.org/wiki/Structured_programming}
	 63: {https://en.wikipedia.org/wiki/Goto}
	 64: {https://en.wikipedia.org/wiki/Automated_theorem_proving}
	 65: {https://en.wikipedia.org/wiki/Programming_model}
	 66: {https://en.wikipedia.org/wiki/Execution_model}
	 67: {https://en.wikipedia.org/wiki/Parallel_computing}
	 68: {https://en.wikipedia.org/wiki/Shared_memory}
	 69: {https://en.wikipedia.org/wiki/Distributed_memory}
	 70: {https://en.wikipedia.org/wiki/Message_passing}
	 71: {https://en.wikipedia.org/wiki/Comparison_of_multi-paradigm_programming_languages}
	 72: {https://en.wikipedia.org/wiki/Structured_programming}
	 73: {https://en.wikipedia.org/wiki/Turing_Award}
	 74: {https://en.wikipedia.org/wiki/Robert_W._Floyd}
	 75: {https://en.wikipedia.org/wiki/Thomas_Kuhn}
	 76: {https://en.wikipedia.org/wiki/The_Structure_of_Scientific_Revolutions}
	 77: {https://en.wikipedia.org/wiki/Spaghetti_code}
	 78: {https://en.wikipedia.org/wiki/Machine_code}
	 79: {https://en.wikipedia.org/wiki/Instruction_set}
	 80: {https://en.wikipedia.org/wiki/First-generation_programming_language}
	 81: {https://en.wikipedia.org/wiki/Assembly_language}
	 82: {https://en.wikipedia.org/wiki/Memory_address}
	 83: {https://en.wikipedia.org/wiki/Second-generation_programming_language}
	 84: {https://en.wikipedia.org/wiki/Subroutine}
	 85: {https://en.wikipedia.org/wiki/Embedded_system}
	 86: {https://en.wikipedia.org/wiki/Procedural_language}
	 87: {https://en.wikipedia.org/wiki/Third-generation_programming_language}
	 88: {https://en.wikipedia.org/wiki/High-level_programming_language}
	 89: {https://en.wikipedia.org/wiki/COBOL}
	 90: {https://en.wikipedia.org/wiki/Computer_file}
	 91: {https://en.wikipedia.org/wiki/Move_(command)}
	 92: {https://en.wikipedia.org/wiki/Copy_(command)}
	 93: {https://en.wikipedia.org/wiki/FORTRAN}
	 94: {https://en.wikipedia.org/wiki/Mathematical}
	 95: {https://en.wikipedia.org/wiki/ALGOL}
	 96: {https://en.wikipedia.org/wiki/Algorithm}
	 97: {https://en.wikipedia.org/wiki/PL/I}
	 98: {https://en.wikipedia.org/wiki/Pointer_(computer_programming)}
	 99: {https://en.wikipedia.org/wiki/BASIC}
	 100: {https://en.wikipedia.org/wiki/C_(programming_language)}
	 101: {https://en.wikipedia.org/wiki/Dennis_Ritchie}
	 102: {https://en.wikipedia.org/wiki/AT%26T_Bell_Labs}
	 103: {https://en.wikipedia.org/wiki/Efficacy}
	 104: {https://en.wikipedia.org/wiki/Algorithmic_efficiency}
	 105: {https://en.wikipedia.org/wiki/Object-oriented_programming}
	 106: {https://en.wikipedia.org/wiki/Object-oriented_programming}
	 107: {https://en.wikipedia.org/wiki/Simula}
	 108: {https://en.wikipedia.org/wiki/Smalltalk}
	 109: {https://en.wikipedia.org/wiki/C%2B%2B}
	 110: {https://en.wikipedia.org/wiki/Eiffel_(programming_language)}
	 111: {https://en.wikipedia.org/wiki/Python_(programming_language)}
	 112: {https://en.wikipedia.org/wiki/PHP}
	 113: {https://en.wikipedia.org/wiki/Java_(programming_language)}
	 114: {https://en.wikipedia.org/wiki/C_Sharp_(programming_language)}
	 115: {https://en.wikipedia.org/wiki/Data}
	 116: {https://en.wikipedia.org/wiki/Object_(computer_science)}
	 117: {https://en.wikipedia.org/wiki/Encapsulation_(computer_programming)}
	 118: {https://en.wikipedia.org/wiki/Method_(computer_programming)}
	 119: {https://en.wikipedia.org/wiki/Object-oriented_programming#Criticism}
	 120: {https://en.wikipedia.org/wiki/Alexander_Stepanov}
	 121: {https://en.wikipedia.org/wiki/Richard_Stallman}
	 122: {https://en.wikipedia.org/wiki/Software_bloat}
	 123: {https://en.wikipedia.org/wiki/Polymorphism_(computer_science)}
	 124: {https://en.wikipedia.org/wiki/High_Level_Assembly}
	 125: {https://en.wikipedia.org/wiki/Meme}
	 126: {https://en.wikipedia.org/wiki/Declarative_programming}
	 127: {https://en.wikipedia.org/wiki/Fourth-generation_programming_language}
	 128: {https://en.wikipedia.org/wiki/SQL}
	 129: {https://en.wikipedia.org/wiki/Functional_programming}
	 130: {https://en.wikipedia.org/wiki/Subroutine}
	 131: {https://en.wikipedia.org/wiki/Function_(mathematics)}
	 132: {https://en.wikipedia.org/wiki/Assignment_(computer_science)}
	 133: {https://en.wikipedia.org/wiki/Recursion_(computer_science)}
	 134: {https://en.wikipedia.org/wiki/Logic_programming}
	 135: {https://en.wikipedia.org/wiki/Automated_reasoning}
	 136: {https://en.wikipedia.org/wiki/Domain_(software_engineering)}
	 137: {https://en.wikipedia.org/wiki/Inference_rule}
	 138: {https://en.wikipedia.org/wiki/Symbolic_programming}
	 139: {https://en.wikipedia.org/wiki/Artificial_intelligence}
	 140: {https://en.wikipedia.org/wiki/Expert_system}
	 141: {https://en.wikipedia.org/wiki/Natural-language_processing}
	 142: {https://en.wikipedia.org/wiki/Lisp_(programming_language)}
	 143: {https://en.wikipedia.org/wiki/Prolog}
	 144: {https://en.wikipedia.org/wiki/Differentiable_programming}
	 145: {https://en.wikipedia.org/wiki/Differentiation_(mathematics)}
	 146: {https://en.wikipedia.org/wiki/Automatic_differentiation}
	 147: {https://en.wikipedia.org/wiki/Literate_programming}
	 148: {https://en.wikipedia.org/wiki/Imperative_programming}
	 149: {https://en.wikipedia.org/wiki/Hypertext}
	 150: {https://en.wikipedia.org/wiki/Symbolic_programming}
	 151: {https://en.wikipedia.org/wiki/Reflective_programming}
	 152: {https://en.wikipedia.org/wiki/Domain-specific_language}
	 153: {https://en.wikipedia.org/wiki/Flow-based_programming}
	 154: {https://en.wikipedia.org/wiki/Modeling_language}
	 155: {https://en.wikipedia.org/wiki/Programming_domain}
	 156: {https://en.wikipedia.org/wiki/Turing_completeness}
	 157: {https://en.wikipedia.org/wiki/Von_Neumann_programming_languages}
	 158: {https://en.wikipedia.org/wiki/Mozilla_Foundation}
	 159: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 160: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 161: {https://en.wikipedia.org/wiki/S2CID_(identifier)}
	 162: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 163: {https://en.wikipedia.org/wiki/S2CID_(identifier)}
	 164: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 165: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 166: {https://en.wikipedia.org/wiki/Computer_language}
	 167: {https://en.wikipedia.org/wiki/Architecture_description_language}
	 168: {https://en.wikipedia.org/wiki/Data_exchange#Data_exchange_languages}
	 169: {https://en.wikipedia.org/wiki/Hardware_description_language}
	 170: {https://en.wikipedia.org/wiki/Knowledge_representation_language}
	 171: {https://en.wikipedia.org/wiki/Markup_language}
	 172: {https://en.wikipedia.org/wiki/Modeling_language}
	 173: {https://en.wikipedia.org/wiki/Programming_language}
	 174: {https://en.wikipedia.org/wiki/Query_language}
	 175: {https://en.wikipedia.org/wiki/Shading_language}
	 176: {https://en.wikipedia.org/wiki/Specification_language}
	 177: {https://en.wikipedia.org/wiki/Style_sheet_language}
	 178: {https://en.wikipedia.org/wiki/Transformation_language}
	 179: {https://en.wikipedia.org/wiki/List_of_programming_languages_by_type}
	 180: {https://en.wikipedia.org/wiki/Software_engineering}
	 181: {https://en.wikipedia.org/wiki/Computer_programming}
	 182: {https://en.wikipedia.org/wiki/DevOps}
	 183: {https://en.wikipedia.org/wiki/Empirical_software_engineering}
	 184: {https://en.wikipedia.org/wiki/Experimental_software_engineering}
	 185: {https://en.wikipedia.org/wiki/Formal_methods}
	 186: {https://en.wikipedia.org/wiki/Requirements_engineering}
	 187: {https://en.wikipedia.org/wiki/Search-based_software_engineering}
	 188: {https://en.wikipedia.org/wiki/Site_reliability_engineering}
	 189: {https://en.wikipedia.org/wiki/Social_software_engineering}
	 190: {https://en.wikipedia.org/wiki/Software_deployment}
	 191: {https://en.wikipedia.org/wiki/Software_design}
	 192: {https://en.wikipedia.org/wiki/Software_maintenance}
	 193: {https://en.wikipedia.org/wiki/Software_testing}
	 194: {https://en.wikipedia.org/wiki/Systems_analysis}
	 195: {https://en.wikipedia.org/wiki/Abstraction_(computer_science)}
	 196: {https://en.wikipedia.org/wiki/CI/CD}
	 197: {https://en.wikipedia.org/wiki/Computer_compatibility}
	 198: {https://en.wikipedia.org/wiki/Backward_compatibility}
	 199: {https://en.wikipedia.org/wiki/Compatibility_layer}
	 200: {https://en.wikipedia.org/wiki/Compatibility_mode}
	 201: {https://en.wikipedia.org/wiki/Forward_compatibility}
	 202: {https://en.wikipedia.org/wiki/Software_incompatibility}
	 203: {https://en.wikipedia.org/wiki/Component-based_software_engineering}
	 204: {https://en.wikipedia.org/wiki/Data_modeling}
	 205: {https://en.wikipedia.org/wiki/Enterprise_architecture}
	 206: {https://en.wikipedia.org/wiki/Functional_specification}
	 207: {https://en.wikipedia.org/wiki/Modeling_language}
	 208: {https://en.wikipedia.org/wiki/Software}
	 209: {https://en.wikipedia.org/wiki/Software_archaeology}
	 210: {https://en.wikipedia.org/wiki/Software_architecture}
	 211: {https://en.wikipedia.org/wiki/Software_configuration_management}
	 212: {https://en.wikipedia.org/wiki/Software_development_process}
	 213: {https://en.wikipedia.org/wiki/Software_quality}
	 214: {https://en.wikipedia.org/wiki/Software_quality_assurance}
	 215: {https://en.wikipedia.org/wiki/Software_system}
	 216: {https://en.wikipedia.org/wiki/Software_verification_and_validation}
	 217: {https://en.wikipedia.org/wiki/Structured_analysis}
	 218: {https://en.wikipedia.org/wiki/Essential_systems_analysis}
	 219: {https://en.wikipedia.org/wiki/Agile_software_development}
	 220: {https://en.wikipedia.org/wiki/Aspect-oriented_programming}
	 221: {https://en.wikipedia.org/wiki/Object-oriented_programming}
	 222: {https://en.wikipedia.org/wiki/Ontology_(information_science)}
	 223: {https://en.wikipedia.org/wiki/Systems_development_life_cycle}
	 224: {https://en.wikipedia.org/wiki/Service-oriented_architecture}
	 225: {https://en.wikipedia.org/wiki/Agile_software_development}
	 226: {https://en.wikipedia.org/wiki/Enterprise_unified_process}
	 227: {https://en.wikipedia.org/wiki/Executable_UML}
	 228: {https://en.wikipedia.org/wiki/Incremental_build_model}
	 229: {https://en.wikipedia.org/wiki/Iterative_and_incremental_development}
	 230: {https://en.wikipedia.org/wiki/Software_prototyping}
	 231: {https://en.wikipedia.org/wiki/Rapid_application_development}
	 232: {https://en.wikipedia.org/wiki/Scrum_(software_development)}
	 233: {https://en.wikipedia.org/wiki/Spiral_model}
	 234: {https://en.wikipedia.org/wiki/Unified_process}
	 235: {https://en.wikipedia.org/wiki/V-model_(software_development)}
	 236: {https://en.wikipedia.org/wiki/Waterfall_model}
	 237: {https://en.wikipedia.org/wiki/Extreme_programming}
	 238: {https://en.wikipedia.org/wiki/Model-driven_engineering}
	 239: {https://en.wikipedia.org/wiki/Round-trip_engineering}
	 240: {https://en.wikipedia.org/wiki/Capability_Maturity_Model_Integration}
	 241: {https://en.wikipedia.org/wiki/Data_model}
	 242: {https://en.wikipedia.org/wiki/Entity%E2%80%93relationship_model}
	 243: {https://en.wikipedia.org/wiki/Function_model}
	 244: {https://en.wikipedia.org/wiki/Information_model}
	 245: {https://en.wikipedia.org/wiki/Metamodeling}
	 246: {https://en.wikipedia.org/wiki/Object_model}
	 247: {https://en.wikipedia.org/wiki/ISO/IEC_15504}
	 248: {https://en.wikipedia.org/wiki/Systems_modeling}
	 249: {https://en.wikipedia.org/wiki/View_model}
	 250: {https://en.wikipedia.org/wiki/IDEF}
	 251: {https://en.wikipedia.org/wiki/Systems_modeling_language}
	 252: {https://en.wikipedia.org/wiki/Unified_Modeling_Language}
	 253: {https://en.wikipedia.org/wiki/Universal_Systems_Language}
	 254: {https://en.wikipedia.org/wiki/Computer_engineering}
	 255: {https://en.wikipedia.org/wiki/Computer_science}
	 256: {https://en.wikipedia.org/wiki/Information_science}
	 257: {https://en.wikipedia.org/wiki/Project_management}
	 258: {https://en.wikipedia.org/wiki/Risk_management}
	 259: {https://en.wikipedia.org/wiki/Systems_engineering}
	 260: {https://en.wikipedia.org/wiki/Computer_science}
	 261: {https://en.wikipedia.org/wiki/ACM_Computing_Classification_System}
	 262: {https://en.wikipedia.org/wiki/Computer_hardware}
	 263: {https://en.wikipedia.org/wiki/Printed_circuit_board}
	 264: {https://en.wikipedia.org/wiki/Peripheral}
	 265: {https://en.wikipedia.org/wiki/Integrated_circuit}
	 266: {https://en.wikipedia.org/wiki/Very-large-scale_integration}
	 267: {https://en.wikipedia.org/wiki/System_on_a_chip}
	 268: {https://en.wikipedia.org/wiki/Green_computing}
	 269: {https://en.wikipedia.org/wiki/Electronic_design_automation}
	 270: {https://en.wikipedia.org/wiki/Hardware_acceleration}
	 271: {https://en.wikipedia.org/wiki/Processor_(computing)}
	 272: {https://en.wikipedia.org/wiki/List_of_computer_size_categories}
	 273: {https://en.wikipedia.org/wiki/Form_factor_(design)}
	 274: {https://en.wikipedia.org/wiki/Computer_architecture}
	 275: {https://en.wikipedia.org/wiki/Computational_complexity}
	 276: {https://en.wikipedia.org/wiki/Dependability}
	 277: {https://en.wikipedia.org/wiki/Embedded_system}
	 278: {https://en.wikipedia.org/wiki/Real-time_computing}
	 279: {https://en.wikipedia.org/wiki/Cyber-physical_system}
	 280: {https://en.wikipedia.org/wiki/Fault_tolerance}
	 281: {https://en.wikipedia.org/wiki/Wireless_sensor_network}
	 282: {https://en.wikipedia.org/wiki/Computer_network}
	 283: {https://en.wikipedia.org/wiki/Network_architecture}
	 284: {https://en.wikipedia.org/wiki/Communication_protocol}
	 285: {https://en.wikipedia.org/wiki/Networking_hardware}
	 286: {https://en.wikipedia.org/wiki/Network_scheduler}
	 287: {https://en.wikipedia.org/wiki/Network_performance}
	 288: {https://en.wikipedia.org/wiki/Network_service}
	 289: {https://en.wikipedia.org/wiki/Interpreter_(computing)}
	 290: {https://en.wikipedia.org/wiki/Middleware}
	 291: {https://en.wikipedia.org/wiki/Virtual_machine}
	 292: {https://en.wikipedia.org/wiki/Operating_system}
	 293: {https://en.wikipedia.org/wiki/Software_quality}
	 294: {https://en.wikipedia.org/wiki/Programming_language_theory}
	 295: {https://en.wikipedia.org/wiki/Programming_tool}
	 296: {https://en.wikipedia.org/wiki/Programming_language}
	 297: {https://en.wikipedia.org/wiki/Compiler_construction}
	 298: {https://en.wikipedia.org/wiki/Domain-specific_language}
	 299: {https://en.wikipedia.org/wiki/Modeling_language}
	 300: {https://en.wikipedia.org/wiki/Software_framework}
	 301: {https://en.wikipedia.org/wiki/Integrated_development_environment}
	 302: {https://en.wikipedia.org/wiki/Software_configuration_management}
	 303: {https://en.wikipedia.org/wiki/Library_(computing)}
	 304: {https://en.wikipedia.org/wiki/Software_repository}
	 305: {https://en.wikipedia.org/wiki/Software_development}
	 306: {https://en.wikipedia.org/wiki/Control_flow}
	 307: {https://en.wikipedia.org/wiki/Software_development_process}
	 308: {https://en.wikipedia.org/wiki/Requirements_analysis}
	 309: {https://en.wikipedia.org/wiki/Software_design}
	 310: {https://en.wikipedia.org/wiki/Software_construction}
	 311: {https://en.wikipedia.org/wiki/Software_deployment}
	 312: {https://en.wikipedia.org/wiki/Software_engineering}
	 313: {https://en.wikipedia.org/wiki/Software_maintenance}
	 314: {https://en.wikipedia.org/wiki/Programming_team}
	 315: {https://en.wikipedia.org/wiki/Open-source_software}
	 316: {https://en.wikipedia.org/wiki/Theory_of_computation}
	 317: {https://en.wikipedia.org/wiki/Model_of_computation}
	 318: {https://en.wikipedia.org/wiki/Stochastic_computing}
	 319: {https://en.wikipedia.org/wiki/Formal_language}
	 320: {https://en.wikipedia.org/wiki/Automata_theory}
	 321: {https://en.wikipedia.org/wiki/Computability_theory}
	 322: {https://en.wikipedia.org/wiki/Computational_complexity_theory}
	 323: {https://en.wikipedia.org/wiki/Logic_in_computer_science}
	 324: {https://en.wikipedia.org/wiki/Semantics_(computer_science)}
	 325: {https://en.wikipedia.org/wiki/Algorithm}
	 326: {https://en.wikipedia.org/wiki/Algorithm_design}
	 327: {https://en.wikipedia.org/wiki/Analysis_of_algorithms}
	 328: {https://en.wikipedia.org/wiki/Algorithmic_efficiency}
	 329: {https://en.wikipedia.org/wiki/Randomized_algorithm}
	 330: {https://en.wikipedia.org/wiki/Computational_geometry}
	 331: {https://en.wikipedia.org/wiki/Computing}
	 332: {https://en.wikipedia.org/wiki/Discrete_mathematics}
	 333: {https://en.wikipedia.org/wiki/Probability}
	 334: {https://en.wikipedia.org/wiki/Statistics}
	 335: {https://en.wikipedia.org/wiki/Mathematical_software}
	 336: {https://en.wikipedia.org/wiki/Information_theory}
	 337: {https://en.wikipedia.org/wiki/Mathematical_analysis}
	 338: {https://en.wikipedia.org/wiki/Numerical_analysis}
	 339: {https://en.wikipedia.org/wiki/Theoretical_computer_science}
	 340: {https://en.wikipedia.org/wiki/Information_system}
	 341: {https://en.wikipedia.org/wiki/Database}
	 342: {https://en.wikipedia.org/wiki/Computer_data_storage}
	 343: {https://en.wikipedia.org/wiki/Enterprise_information_system}
	 344: {https://en.wikipedia.org/wiki/Social_software}
	 345: {https://en.wikipedia.org/wiki/Geographic_information_system}
	 346: {https://en.wikipedia.org/wiki/Decision_support_system}
	 347: {https://en.wikipedia.org/wiki/Industrial_process_control}
	 348: {https://en.wikipedia.org/wiki/Multimedia_database}
	 349: {https://en.wikipedia.org/wiki/Data_mining}
	 350: {https://en.wikipedia.org/wiki/Digital_library}
	 351: {https://en.wikipedia.org/wiki/Computing_platform}
	 352: {https://en.wikipedia.org/wiki/Digital_marketing}
	 353: {https://en.wikipedia.org/wiki/World_Wide_Web}
	 354: {https://en.wikipedia.org/wiki/Information_retrieval}
	 355: {https://en.wikipedia.org/wiki/Computer_security}
	 356: {https://en.wikipedia.org/wiki/Cryptography}
	 357: {https://en.wikipedia.org/wiki/Formal_methods}
	 358: {https://en.wikipedia.org/wiki/Security_hacker}
	 359: {https://en.wikipedia.org/wiki/Security_service_(telecommunication)}
	 360: {https://en.wikipedia.org/wiki/Intrusion_detection_system}
	 361: {https://en.wikipedia.org/wiki/Hardware_security}
	 362: {https://en.wikipedia.org/wiki/Network_security}
	 363: {https://en.wikipedia.org/wiki/Information_security}
	 364: {https://en.wikipedia.org/wiki/Application_security}
	 365: {https://en.wikipedia.org/wiki/Interaction_design}
	 366: {https://en.wikipedia.org/wiki/Augmented_reality}
	 367: {https://en.wikipedia.org/wiki/Virtual_reality}
	 368: {https://en.wikipedia.org/wiki/Social_computing}
	 369: {https://en.wikipedia.org/wiki/Ubiquitous_computing}
	 370: {https://en.wikipedia.org/wiki/Visualization_(graphics)}
	 371: {https://en.wikipedia.org/wiki/Computer_accessibility}
	 372: {https://en.wikipedia.org/wiki/Human%E2%80%93computer_interaction}
	 373: {https://en.wikipedia.org/wiki/Mobile_computing}
	 374: {https://en.wikipedia.org/wiki/Concurrency_(computer_science)}
	 375: {https://en.wikipedia.org/wiki/Concurrent_computing}
	 376: {https://en.wikipedia.org/wiki/Parallel_computing}
	 377: {https://en.wikipedia.org/wiki/Distributed_computing}
	 378: {https://en.wikipedia.org/wiki/Multithreading_(computer_architecture)}
	 379: {https://en.wikipedia.org/wiki/Multiprocessing}
	 380: {https://en.wikipedia.org/wiki/Artificial_intelligence}
	 381: {https://en.wikipedia.org/wiki/Natural_language_processing}
	 382: {https://en.wikipedia.org/wiki/Knowledge_representation_and_reasoning}
	 383: {https://en.wikipedia.org/wiki/Computer_vision}
	 384: {https://en.wikipedia.org/wiki/Automated_planning_and_scheduling}
	 385: {https://en.wikipedia.org/wiki/Mathematical_optimization}
	 386: {https://en.wikipedia.org/wiki/Control_theory}
	 387: {https://en.wikipedia.org/wiki/Philosophy_of_artificial_intelligence}
	 388: {https://en.wikipedia.org/wiki/Distributed_artificial_intelligence}
	 389: {https://en.wikipedia.org/wiki/Machine_learning}
	 390: {https://en.wikipedia.org/wiki/Supervised_learning}
	 391: {https://en.wikipedia.org/wiki/Unsupervised_learning}
	 392: {https://en.wikipedia.org/wiki/Reinforcement_learning}
	 393: {https://en.wikipedia.org/wiki/Multi-task_learning}
	 394: {https://en.wikipedia.org/wiki/Cross-validation_(statistics)}
	 395: {https://en.wikipedia.org/wiki/Computer_graphics}
	 396: {https://en.wikipedia.org/wiki/Computer_animation}
	 397: {https://en.wikipedia.org/wiki/Rendering_(computer_graphics)}
	 398: {https://en.wikipedia.org/wiki/Photograph_manipulation}
	 399: {https://en.wikipedia.org/wiki/Graphics_processing_unit}
	 400: {https://en.wikipedia.org/wiki/Image_compression}
	 401: {https://en.wikipedia.org/wiki/Solid_modeling}
	 402: {https://en.wikipedia.org/wiki/Quantum_computing}
	 403: {https://en.wikipedia.org/wiki/E-commerce}
	 404: {https://en.wikipedia.org/wiki/Enterprise_software}
	 405: {https://en.wikipedia.org/wiki/Computational_mathematics}
	 406: {https://en.wikipedia.org/wiki/Computational_physics}
	 407: {https://en.wikipedia.org/wiki/Computational_chemistry}
	 408: {https://en.wikipedia.org/wiki/Computational_biology}
	 409: {https://en.wikipedia.org/wiki/Computational_social_science}
	 410: {https://en.wikipedia.org/wiki/Computational_engineering}
	 411: {https://en.wikipedia.org/wiki/Health_informatics}
	 412: {https://en.wikipedia.org/wiki/Digital_art}
	 413: {https://en.wikipedia.org/wiki/Electronic_publishing}
	 414: {https://en.wikipedia.org/wiki/Cyberwarfare}
	 415: {https://en.wikipedia.org/wiki/Electronic_voting}
	 416: {https://en.wikipedia.org/wiki/Video_game}
	 417: {https://en.wikipedia.org/wiki/Word_processor}
	 418: {https://en.wikipedia.org/wiki/Operations_research}
	 419: {https://en.wikipedia.org/wiki/Educational_technology}
	 420: {https://en.wikipedia.org/wiki/Document_management_system}
	 421: {https://en.wikipedia.org/wiki/Outline_of_computer_science}
	 422: {https://en.wikipedia.org/wiki/Comparison_of_multi-paradigm_programming_languages}
	 423: {https://en.wikipedia.org/wiki/Imperative_programming}
	 424: {https://en.wikipedia.org/wiki/Structured_programming}
	 425: {https://en.wikipedia.org/wiki/Jackson_structured_programming}
	 426: {https://en.wikipedia.org/wiki/Block_(programming)}
	 427: {https://en.wikipedia.org/wiki/Modular_programming}
	 428: {https://en.wikipedia.org/wiki/Non-structured_programming}
	 429: {https://en.wikipedia.org/wiki/Procedural_programming}
	 430: {https://en.wikipedia.org/wiki/Programming_in_the_large_and_programming_in_the_small}
	 431: {https://en.wikipedia.org/wiki/Design_by_contract}
	 432: {https://en.wikipedia.org/wiki/Invariant-based_programming}
	 433: {https://en.wikipedia.org/wiki/Nested_function}
	 434: {https://en.wikipedia.org/wiki/Object-oriented_programming}
	 435: {https://en.wikipedia.org/wiki/Comparison_of_programming_languages_(object-oriented_programming)}
	 436: {https://en.wikipedia.org/wiki/List_of_object-oriented_programming_languages}
	 437: {https://en.wikipedia.org/wiki/Class-based_programming}
	 438: {https://en.wikipedia.org/wiki/Prototype-based_programming}
	 439: {https://en.wikipedia.org/wiki/Object-based_language}
	 440: {https://en.wikipedia.org/wiki/Agent-oriented_programming}
	 441: {https://en.wikipedia.org/wiki/Immutable_object}
	 442: {https://en.wikipedia.org/wiki/Persistent_programming_language}
	 443: {https://en.wikipedia.org/wiki/Uniform_function_call_syntax}
	 444: {https://en.wikipedia.org/wiki/Declarative_programming}
	 445: {https://en.wikipedia.org/wiki/Functional_programming}
	 446: {https://en.wikipedia.org/wiki/Comparison_of_functional_programming_languages}
	 447: {https://en.wikipedia.org/wiki/Recursion_(computer_science)}
	 448: {https://en.wikipedia.org/wiki/Anonymous_function}
	 449: {https://en.wikipedia.org/wiki/Partial_application}
	 450: {https://en.wikipedia.org/wiki/Higher-order_programming}
	 451: {https://en.wikipedia.org/wiki/Purely_functional_programming}
	 452: {https://en.wikipedia.org/wiki/Total_functional_programming}
	 453: {https://en.wikipedia.org/wiki/Strict_programming_language}
	 454: {https://en.wikipedia.org/wiki/Generalized_algebraic_data_type}
	 455: {https://en.wikipedia.org/wiki/Dependent_type}
	 456: {https://en.wikipedia.org/wiki/Functional_logic_programming}
	 457: {https://en.wikipedia.org/wiki/Tacit_programming}
	 458: {https://en.wikipedia.org/wiki/Expression-oriented_programming_language}
	 459: {https://en.wikipedia.org/wiki/Applicative_programming_language}
	 460: {https://en.wikipedia.org/wiki/Concatenative_programming_language}
	 461: {https://en.wikipedia.org/wiki/Function-level_programming}
	 462: {https://en.wikipedia.org/wiki/Value-level_programming}
	 463: {https://en.wikipedia.org/wiki/Dataflow_programming}
	 464: {https://en.wikipedia.org/wiki/Flow-based_programming}
	 465: {https://en.wikipedia.org/wiki/Reactive_programming}
	 466: {https://en.wikipedia.org/wiki/Functional_reactive_programming}
	 467: {https://en.wikipedia.org/wiki/Signal_programming}
	 468: {https://en.wikipedia.org/wiki/Stream_processing}
	 469: {https://en.wikipedia.org/wiki/Synchronous_programming_language}
	 470: {https://en.wikipedia.org/wiki/Logic_programming}
	 471: {https://en.wikipedia.org/wiki/Abductive_logic_programming}
	 472: {https://en.wikipedia.org/wiki/Answer_set_programming}
	 473: {https://en.wikipedia.org/wiki/Constraint_programming}
	 474: {https://en.wikipedia.org/wiki/Constraint_logic_programming}
	 475: {https://en.wikipedia.org/wiki/Inductive_logic_programming}
	 476: {https://en.wikipedia.org/wiki/Nondeterministic_programming}
	 477: {https://en.wikipedia.org/wiki/Ontology_language}
	 478: {https://en.wikipedia.org/wiki/Probabilistic_logic_programming}
	 479: {https://en.wikipedia.org/wiki/Query_language}
	 480: {https://en.wikipedia.org/wiki/Domain-specific_language}
	 481: {https://en.wikipedia.org/wiki/Algebraic_modeling_language}
	 482: {https://en.wikipedia.org/wiki/Array_programming}
	 483: {https://en.wikipedia.org/wiki/Automata-based_programming}
	 484: {https://en.wikipedia.org/wiki/Action_language}
	 485: {https://en.wikipedia.org/wiki/Command_language}
	 486: {https://en.wikipedia.org/wiki/Spacecraft_command_language}
	 487: {https://en.wikipedia.org/wiki/Differentiable_programming}
	 488: {https://en.wikipedia.org/wiki/End-user_development}
	 489: {https://en.wikipedia.org/wiki/Grammar-oriented_programming}
	 490: {https://en.wikipedia.org/wiki/Interface_description_language}
	 491: {https://en.wikipedia.org/wiki/Language-oriented_programming}
	 492: {https://en.wikipedia.org/wiki/List_comprehension}
	 493: {https://en.wikipedia.org/wiki/Low-code_development_platform}
	 494: {https://en.wikipedia.org/wiki/Modeling_language}
	 495: {https://en.wikipedia.org/wiki/Natural-language_programming}
	 496: {https://en.wikipedia.org/wiki/Non-English-based_programming_languages}
	 497: {https://en.wikipedia.org/wiki/Page_description_language}
	 498: {https://en.wikipedia.org/wiki/Pipeline_(software)}
	 499: {https://en.wikipedia.org/wiki/Filter_(software)}
	 500: {https://en.wikipedia.org/wiki/Probabilistic_programming}
	 501: {https://en.wikipedia.org/wiki/Quantum_programming}
	 502: {https://en.wikipedia.org/wiki/Scientific_programming_language}
	 503: {https://en.wikipedia.org/wiki/Scripting_language}
	 504: {https://en.wikipedia.org/wiki/Set_theoretic_programming}
	 505: {https://en.wikipedia.org/wiki/Simulation_language}
	 506: {https://en.wikipedia.org/wiki/Stack-oriented_programming}
	 507: {https://en.wikipedia.org/wiki/System_programming_language}
	 508: {https://en.wikipedia.org/wiki/Tactile_programming_language}
	 509: {https://en.wikipedia.org/wiki/Template_processor}
	 510: {https://en.wikipedia.org/wiki/Transformation_language}
	 511: {https://en.wikipedia.org/wiki/Graph_rewriting}
	 512: {https://en.wikipedia.org/wiki/Production_system_(computer_science)}
	 513: {https://en.wikipedia.org/wiki/Pattern_matching}
	 514: {https://en.wikipedia.org/wiki/Visual_programming_language}
	 515: {https://en.wikipedia.org/wiki/Concurrent_computing}
	 516: {https://en.wikipedia.org/wiki/Distributed_computing}
	 517: {https://en.wikipedia.org/wiki/Parallel_computing}
	 518: {https://en.wikipedia.org/wiki/Actor_model}
	 519: {https://en.wikipedia.org/wiki/Automatic_mutual_exclusion}
	 520: {https://en.wikipedia.org/wiki/Choreographic_programming}
	 521: {https://en.wikipedia.org/wiki/Concurrent_logic_programming}
	 522: {https://en.wikipedia.org/wiki/Concurrent_constraint_logic_programming}
	 523: {https://en.wikipedia.org/wiki/Concurrent_object-oriented_programming}
	 524: {https://en.wikipedia.org/wiki/Macroprogramming}
	 525: {https://en.wikipedia.org/wiki/Multitier_programming}
	 526: {https://en.wikipedia.org/wiki/Organic_computing}
	 527: {https://en.wikipedia.org/wiki/Parallel_programming_model}
	 528: {https://en.wikipedia.org/wiki/Partitioned_global_address_space}
	 529: {https://en.wikipedia.org/wiki/Process-oriented_programming}
	 530: {https://en.wikipedia.org/wiki/Relativistic_programming}
	 531: {https://en.wikipedia.org/wiki/Service-oriented_programming}
	 532: {https://en.wikipedia.org/wiki/Structured_concurrency}
	 533: {https://en.wikipedia.org/wiki/Metaprogramming}
	 534: {https://en.wikipedia.org/wiki/Attribute-oriented_programming}
	 535: {https://en.wikipedia.org/wiki/Automatic_programming}
	 536: {https://en.wikipedia.org/wiki/Inductive_programming}
	 537: {https://en.wikipedia.org/wiki/Dynamic_programming_language}
	 538: {https://en.wikipedia.org/wiki/Extensible_programming}
	 539: {https://en.wikipedia.org/wiki/Generic_programming}
	 540: {https://en.wikipedia.org/wiki/Homoiconicity}
	 541: {https://en.wikipedia.org/wiki/Interactive_programming}
	 542: {https://en.wikipedia.org/wiki/Macro_(computer_science)}
	 543: {https://en.wikipedia.org/wiki/Hygienic_macro}
	 544: {https://en.wikipedia.org/wiki/Metalinguistic_abstraction}
	 545: {https://en.wikipedia.org/wiki/Multi-stage_programming}
	 546: {https://en.wikipedia.org/wiki/Program_synthesis}
	 547: {https://en.wikipedia.org/wiki/Bayesian_program_synthesis}
	 548: {https://en.wikipedia.org/wiki/Inferential_programming}
	 549: {https://en.wikipedia.org/wiki/Programming_by_demonstration}
	 550: {https://en.wikipedia.org/wiki/Programming_by_example}
	 551: {https://en.wikipedia.org/wiki/Reflective_programming}
	 552: {https://en.wikipedia.org/wiki/Self-modifying_code}
	 553: {https://en.wikipedia.org/wiki/Symbolic_programming}
	 554: {https://en.wikipedia.org/wiki/Template_metaprogramming}
	 555: {https://en.wikipedia.org/wiki/Separation_of_concerns}
	 556: {https://en.wikipedia.org/wiki/Aspect-oriented_programming}
	 557: {https://en.wikipedia.org/wiki/Component-based_software_engineering}
	 558: {https://en.wikipedia.org/wiki/Data-driven_programming}
	 559: {https://en.wikipedia.org/wiki/Data-oriented_design}
	 560: {https://en.wikipedia.org/wiki/Event-driven_programming}
	 561: {https://en.wikipedia.org/wiki/Feature-oriented_programming}
	 562: {https://en.wikipedia.org/wiki/Literate_programming}
	 563: {https://en.wikipedia.org/wiki/Role-oriented_programming}
	 564: {https://en.wikipedia.org/wiki/Subject-oriented_programming}
	 565: {https://en.wikipedia.org/wiki/Machine_code}
	 566: {https://en.wikipedia.org/wiki/Assembly_language}
	 567: {https://en.wikipedia.org/wiki/Compiled_language}
	 568: {https://en.wikipedia.org/wiki/Interpreted_language}
	 569: {https://en.wikipedia.org/wiki/Low-level_programming_language}
	 570: {https://en.wikipedia.org/wiki/High-level_programming_language}
	 571: {https://en.wikipedia.org/wiki/Very_high-level_programming_language}
	 572: {https://en.wikipedia.org/wiki/Esoteric_programming_language}
	 573: {https://en.wikipedia.org/wiki/Programming_language_generations}
	 574: {https://en.wikipedia.org/wiki/First-generation_programming_language}
	 575: {https://en.wikipedia.org/wiki/Second-generation_programming_language}
	 576: {https://en.wikipedia.org/wiki/Third-generation_programming_language}
	 577: {https://en.wikipedia.org/wiki/Fourth-generation_programming_language}
	 578: {https://en.wikipedia.org/wiki/Fifth-generation_programming_language}
	 579: {https://en.wikipedia.org/wiki/Programming_language}
	 580: {https://en.wikipedia.org/wiki/Comparison_of_programming_languages}
	 581: {https://en.wikipedia.org/wiki/Timeline_of_programming_languages}
	 582: {https://en.wikipedia.org/wiki/History_of_programming_languages}
	 583: {https://en.wikipedia.org/wiki/Ada_(programming_language)}
	 584: {https://en.wikipedia.org/wiki/ALGOL}
	 585: {https://en.wikipedia.org/wiki/Simula}
	 586: {https://en.wikipedia.org/wiki/APL_(programming_language)}
	 587: {https://en.wikipedia.org/wiki/Assembly_language}
	 588: {https://en.wikipedia.org/wiki/BASIC}
	 589: {https://en.wikipedia.org/wiki/Visual_Basic}
	 590: {https://en.wikipedia.org/wiki/Visual_Basic_(classic)}
	 591: {https://en.wikipedia.org/wiki/Visual_Basic_(.NET)}
	 592: {https://en.wikipedia.org/wiki/C_(programming_language)}
	 593: {https://en.wikipedia.org/wiki/C%2B%2B}
	 594: {https://en.wikipedia.org/wiki/C_Sharp_(programming_language)}
	 595: {https://en.wikipedia.org/wiki/COBOL}
	 596: {https://en.wikipedia.org/wiki/Erlang_(programming_language)}
	 597: {https://en.wikipedia.org/wiki/Elixir_(programming_language)}
	 598: {https://en.wikipedia.org/wiki/Forth_(programming_language)}
	 599: {https://en.wikipedia.org/wiki/Fortran}
	 600: {https://en.wikipedia.org/wiki/Go_(programming_language)}
	 601: {https://en.wikipedia.org/wiki/Haskell}
	 602: {https://en.wikipedia.org/wiki/Java_(programming_language)}
	 603: {https://en.wikipedia.org/wiki/JavaScript}
	 604: {https://en.wikipedia.org/wiki/Julia_(programming_language)}
	 605: {https://en.wikipedia.org/wiki/Kotlin_(programming_language)}
	 606: {https://en.wikipedia.org/wiki/Lisp_(programming_language)}
	 607: {https://en.wikipedia.org/wiki/Lua}
	 608: {https://en.wikipedia.org/wiki/MATLAB}
	 609: {https://en.wikipedia.org/wiki/ML_(programming_language)}
	 610: {https://en.wikipedia.org/wiki/Caml}
	 611: {https://en.wikipedia.org/wiki/OCaml}
	 612: {https://en.wikipedia.org/wiki/Pascal_(programming_language)}
	 613: {https://en.wikipedia.org/wiki/Object_Pascal}
	 614: {https://en.wikipedia.org/wiki/Perl}
	 615: {https://en.wikipedia.org/wiki/Raku_(programming_language)}
	 616: {https://en.wikipedia.org/wiki/PHP}
	 617: {https://en.wikipedia.org/wiki/Prolog}
	 618: {https://en.wikipedia.org/wiki/Python_(programming_language)}
	 619: {https://en.wikipedia.org/wiki/R_(programming_language)}
	 620: {https://en.wikipedia.org/wiki/Ruby_(programming_language)}
	 621: {https://en.wikipedia.org/wiki/Rust_(programming_language)}
	 622: {https://en.wikipedia.org/wiki/SAS_language}
	 623: {https://en.wikipedia.org/wiki/SQL}
	 624: {https://en.wikipedia.org/wiki/Scratch_(programming_language)}
	 625: {https://en.wikipedia.org/wiki/Shell_script}
	 626: {https://en.wikipedia.org/wiki/Smalltalk}
	 627: {https://en.wikipedia.org/wiki/Swift_(programming_language)}
	 628: {https://en.wikipedia.org/wiki/List_of_programming_languages}
	 629: {https://en.wikipedia.org/wiki/List_of_programming_languages}
	 630: {https://en.wikipedia.org/wiki/List_of_programming_languages_by_type}
	 631: {https://en.wikipedia.org/wiki/Generational_list_of_programming_languages}
	 632: {https://en.wikipedia.org/wiki/Non-English-based_programming_languages}
	 633: {https://en.wikipedia.org/wiki/Machine_code}
	 634: {https://en.wikipedia.org/wiki/Assembly_language}
	 635: {https://en.wikipedia.org/wiki/Compiled_language}
	 636: {https://en.wikipedia.org/wiki/Interpreted_language}
	 637: {https://en.wikipedia.org/wiki/Low-level_programming_language}
	 638: {https://en.wikipedia.org/wiki/High-level_programming_language}
	 639: {https://en.wikipedia.org/wiki/Very_high-level_programming_language}
	 640: {https://en.wikipedia.org/wiki/Esoteric_programming_language}
	 641: {https://en.wikipedia.org/wiki/Programming_language_generations}
	 642: {https://en.wikipedia.org/wiki/First-generation_programming_language}
	 643: {https://en.wikipedia.org/wiki/Second-generation_programming_language}
	 644: {https://en.wikipedia.org/wiki/Third-generation_programming_language}
	 645: {https://en.wikipedia.org/wiki/Fourth-generation_programming_language}
	 646: {https://en.wikipedia.org/wiki/Fifth-generation_programming_language}
	 647: {https://en.wikipedia.org/wiki/Computer_science}
	 648: {https://en.wikipedia.org/wiki/ACM_Computing_Classification_System}
	 649: {https://en.wikipedia.org/wiki/Computer_hardware}
	 650: {https://en.wikipedia.org/wiki/Printed_circuit_board}
	 651: {https://en.wikipedia.org/wiki/Peripheral}
	 652: {https://en.wikipedia.org/wiki/Integrated_circuit}
	 653: {https://en.wikipedia.org/wiki/Very-large-scale_integration}
	 654: {https://en.wikipedia.org/wiki/System_on_a_chip}
	 655: {https://en.wikipedia.org/wiki/Green_computing}
	 656: {https://en.wikipedia.org/wiki/Electronic_design_automation}
	 657: {https://en.wikipedia.org/wiki/Hardware_acceleration}
	 658: {https://en.wikipedia.org/wiki/Processor_(computing)}
	 659: {https://en.wikipedia.org/wiki/List_of_computer_size_categories}
	 660: {https://en.wikipedia.org/wiki/Form_factor_(design)}
	 661: {https://en.wikipedia.org/wiki/Computer_architecture}
	 662: {https://en.wikipedia.org/wiki/Computational_complexity}
	 663: {https://en.wikipedia.org/wiki/Dependability}
	 664: {https://en.wikipedia.org/wiki/Embedded_system}
	 665: {https://en.wikipedia.org/wiki/Real-time_computing}
	 666: {https://en.wikipedia.org/wiki/Cyber-physical_system}
	 667: {https://en.wikipedia.org/wiki/Fault_tolerance}
	 668: {https://en.wikipedia.org/wiki/Wireless_sensor_network}
	 669: {https://en.wikipedia.org/wiki/Computer_network}
	 670: {https://en.wikipedia.org/wiki/Network_architecture}
	 671: {https://en.wikipedia.org/wiki/Communication_protocol}
	 672: {https://en.wikipedia.org/wiki/Networking_hardware}
	 673: {https://en.wikipedia.org/wiki/Network_scheduler}
	 674: {https://en.wikipedia.org/wiki/Network_performance}
	 675: {https://en.wikipedia.org/wiki/Network_service}
	 676: {https://en.wikipedia.org/wiki/Interpreter_(computing)}
	 677: {https://en.wikipedia.org/wiki/Middleware}
	 678: {https://en.wikipedia.org/wiki/Virtual_machine}
	 679: {https://en.wikipedia.org/wiki/Operating_system}
	 680: {https://en.wikipedia.org/wiki/Software_quality}
	 681: {https://en.wikipedia.org/wiki/Programming_language_theory}
	 682: {https://en.wikipedia.org/wiki/Programming_tool}
	 683: {https://en.wikipedia.org/wiki/Programming_language}
	 684: {https://en.wikipedia.org/wiki/Compiler_construction}
	 685: {https://en.wikipedia.org/wiki/Domain-specific_language}
	 686: {https://en.wikipedia.org/wiki/Modeling_language}
	 687: {https://en.wikipedia.org/wiki/Software_framework}
	 688: {https://en.wikipedia.org/wiki/Integrated_development_environment}
	 689: {https://en.wikipedia.org/wiki/Software_configuration_management}
	 690: {https://en.wikipedia.org/wiki/Library_(computing)}
	 691: {https://en.wikipedia.org/wiki/Software_repository}
	 692: {https://en.wikipedia.org/wiki/Software_development}
	 693: {https://en.wikipedia.org/wiki/Control_flow}
	 694: {https://en.wikipedia.org/wiki/Software_development_process}
	 695: {https://en.wikipedia.org/wiki/Requirements_analysis}
	 696: {https://en.wikipedia.org/wiki/Software_design}
	 697: {https://en.wikipedia.org/wiki/Software_construction}
	 698: {https://en.wikipedia.org/wiki/Software_deployment}
	 699: {https://en.wikipedia.org/wiki/Software_engineering}
	 700: {https://en.wikipedia.org/wiki/Software_maintenance}
	 701: {https://en.wikipedia.org/wiki/Programming_team}
	 702: {https://en.wikipedia.org/wiki/Open-source_software}
	 703: {https://en.wikipedia.org/wiki/Theory_of_computation}
	 704: {https://en.wikipedia.org/wiki/Model_of_computation}
	 705: {https://en.wikipedia.org/wiki/Stochastic_computing}
	 706: {https://en.wikipedia.org/wiki/Formal_language}
	 707: {https://en.wikipedia.org/wiki/Automata_theory}
	 708: {https://en.wikipedia.org/wiki/Computability_theory}
	 709: {https://en.wikipedia.org/wiki/Computational_complexity_theory}
	 710: {https://en.wikipedia.org/wiki/Logic_in_computer_science}
	 711: {https://en.wikipedia.org/wiki/Semantics_(computer_science)}
	 712: {https://en.wikipedia.org/wiki/Algorithm}
	 713: {https://en.wikipedia.org/wiki/Algorithm_design}
	 714: {https://en.wikipedia.org/wiki/Analysis_of_algorithms}
	 715: {https://en.wikipedia.org/wiki/Algorithmic_efficiency}
	 716: {https://en.wikipedia.org/wiki/Randomized_algorithm}
	 717: {https://en.wikipedia.org/wiki/Computational_geometry}
	 718: {https://en.wikipedia.org/wiki/Computing}
	 719: {https://en.wikipedia.org/wiki/Discrete_mathematics}
	 720: {https://en.wikipedia.org/wiki/Probability}
	 721: {https://en.wikipedia.org/wiki/Statistics}
	 722: {https://en.wikipedia.org/wiki/Mathematical_software}
	 723: {https://en.wikipedia.org/wiki/Information_theory}
	 724: {https://en.wikipedia.org/wiki/Mathematical_analysis}
	 725: {https://en.wikipedia.org/wiki/Numerical_analysis}
	 726: {https://en.wikipedia.org/wiki/Theoretical_computer_science}
	 727: {https://en.wikipedia.org/wiki/Information_system}
	 728: {https://en.wikipedia.org/wiki/Database}
	 729: {https://en.wikipedia.org/wiki/Computer_data_storage}
	 730: {https://en.wikipedia.org/wiki/Enterprise_information_system}
	 731: {https://en.wikipedia.org/wiki/Social_software}
	 732: {https://en.wikipedia.org/wiki/Geographic_information_system}
	 733: {https://en.wikipedia.org/wiki/Decision_support_system}
	 734: {https://en.wikipedia.org/wiki/Industrial_process_control}
	 735: {https://en.wikipedia.org/wiki/Multimedia_database}
	 736: {https://en.wikipedia.org/wiki/Data_mining}
	 737: {https://en.wikipedia.org/wiki/Digital_library}
	 738: {https://en.wikipedia.org/wiki/Computing_platform}
	 739: {https://en.wikipedia.org/wiki/Digital_marketing}
	 740: {https://en.wikipedia.org/wiki/World_Wide_Web}
	 741: {https://en.wikipedia.org/wiki/Information_retrieval}
	 742: {https://en.wikipedia.org/wiki/Computer_security}
	 743: {https://en.wikipedia.org/wiki/Cryptography}
	 744: {https://en.wikipedia.org/wiki/Formal_methods}
	 745: {https://en.wikipedia.org/wiki/Security_hacker}
	 746: {https://en.wikipedia.org/wiki/Security_service_(telecommunication)}
	 747: {https://en.wikipedia.org/wiki/Intrusion_detection_system}
	 748: {https://en.wikipedia.org/wiki/Hardware_security}
	 749: {https://en.wikipedia.org/wiki/Network_security}
	 750: {https://en.wikipedia.org/wiki/Information_security}
	 751: {https://en.wikipedia.org/wiki/Application_security}
	 752: {https://en.wikipedia.org/wiki/Interaction_design}
	 753: {https://en.wikipedia.org/wiki/Augmented_reality}
	 754: {https://en.wikipedia.org/wiki/Virtual_reality}
	 755: {https://en.wikipedia.org/wiki/Social_computing}
	 756: {https://en.wikipedia.org/wiki/Ubiquitous_computing}
	 757: {https://en.wikipedia.org/wiki/Visualization_(graphics)}
	 758: {https://en.wikipedia.org/wiki/Computer_accessibility}
	 759: {https://en.wikipedia.org/wiki/Human%E2%80%93computer_interaction}
	 760: {https://en.wikipedia.org/wiki/Mobile_computing}
	 761: {https://en.wikipedia.org/wiki/Concurrency_(computer_science)}
	 762: {https://en.wikipedia.org/wiki/Concurrent_computing}
	 763: {https://en.wikipedia.org/wiki/Parallel_computing}
	 764: {https://en.wikipedia.org/wiki/Distributed_computing}
	 765: {https://en.wikipedia.org/wiki/Multithreading_(computer_architecture)}
	 766: {https://en.wikipedia.org/wiki/Multiprocessing}
	 767: {https://en.wikipedia.org/wiki/Artificial_intelligence}
	 768: {https://en.wikipedia.org/wiki/Natural_language_processing}
	 769: {https://en.wikipedia.org/wiki/Knowledge_representation_and_reasoning}
	 770: {https://en.wikipedia.org/wiki/Computer_vision}
	 771: {https://en.wikipedia.org/wiki/Automated_planning_and_scheduling}
	 772: {https://en.wikipedia.org/wiki/Mathematical_optimization}
	 773: {https://en.wikipedia.org/wiki/Control_theory}
	 774: {https://en.wikipedia.org/wiki/Philosophy_of_artificial_intelligence}
	 775: {https://en.wikipedia.org/wiki/Distributed_artificial_intelligence}
	 776: {https://en.wikipedia.org/wiki/Machine_learning}
	 777: {https://en.wikipedia.org/wiki/Supervised_learning}
	 778: {https://en.wikipedia.org/wiki/Unsupervised_learning}
	 779: {https://en.wikipedia.org/wiki/Reinforcement_learning}
	 780: {https://en.wikipedia.org/wiki/Multi-task_learning}
	 781: {https://en.wikipedia.org/wiki/Cross-validation_(statistics)}
	 782: {https://en.wikipedia.org/wiki/Computer_graphics}
	 783: {https://en.wikipedia.org/wiki/Computer_animation}
	 784: {https://en.wikipedia.org/wiki/Rendering_(computer_graphics)}
	 785: {https://en.wikipedia.org/wiki/Photograph_manipulation}
	 786: {https://en.wikipedia.org/wiki/Graphics_processing_unit}
	 787: {https://en.wikipedia.org/wiki/Image_compression}
	 788: {https://en.wikipedia.org/wiki/Solid_modeling}
	 789: {https://en.wikipedia.org/wiki/Quantum_computing}
	 790: {https://en.wikipedia.org/wiki/E-commerce}
	 791: {https://en.wikipedia.org/wiki/Enterprise_software}
	 792: {https://en.wikipedia.org/wiki/Computational_mathematics}
	 793: {https://en.wikipedia.org/wiki/Computational_physics}
	 794: {https://en.wikipedia.org/wiki/Computational_chemistry}
	 795: {https://en.wikipedia.org/wiki/Computational_biology}
	 796: {https://en.wikipedia.org/wiki/Computational_social_science}
	 797: {https://en.wikipedia.org/wiki/Computational_engineering}
	 798: {https://en.wikipedia.org/wiki/Health_informatics}
	 799: {https://en.wikipedia.org/wiki/Digital_art}
	 800: {https://en.wikipedia.org/wiki/Electronic_publishing}
	 801: {https://en.wikipedia.org/wiki/Cyberwarfare}
	 802: {https://en.wikipedia.org/wiki/Electronic_voting}
	 803: {https://en.wikipedia.org/wiki/Video_game}
	 804: {https://en.wikipedia.org/wiki/Word_processor}
	 805: {https://en.wikipedia.org/wiki/Operations_research}
	 806: {https://en.wikipedia.org/wiki/Educational_technology}
	 807: {https://en.wikipedia.org/wiki/Document_management_system}
	 808: {https://en.wikipedia.org/wiki/Outline_of_computer_science}

{https://en.wikipedia.org/wiki/Concurrent_programming} Refers To:
	 0: {https://en.wikipedia.org/wiki/Main_Page}
	 1: {https://en.wikipedia.org/wiki/Main_Page}
	 2: {https://en.wikipedia.org/wiki/Concurrent_computing}
	 3: {https://en.wikipedia.org/wiki/Concurrent_computing}
	 4: {https://en.wikipedia.org/wiki/Concurrent_computing}
	 5: {https://en.wikipedia.org/wiki/Concurrent_Computer_Corporation}
	 6: {https://en.wikipedia.org/wiki/Concurrency_(computer_science)}
	 7: {https://en.wikipedia.org/wiki/Computing}
	 8: {https://en.wikipedia.org/wiki/Computation}
	 9: {https://en.wikipedia.org/wiki/Concurrency_(computer_science)}
	 10: {https://en.wikipedia.org/wiki/Computer_program}
	 11: {https://en.wikipedia.org/wiki/Computer}
	 12: {https://en.wikipedia.org/wiki/Computer_network}
	 13: {https://en.wikipedia.org/wiki/Modular_programming}
	 14: {https://en.wikipedia.org/wiki/Programming_paradigm}
	 15: {https://en.wikipedia.org/wiki/Decomposition_(computer_science)}
	 16: {https://en.wikipedia.org/wiki/Edsger_Dijkstra}
	 17: {https://en.wikipedia.org/wiki/Per_Brinch_Hansen}
	 18: {https://en.wikipedia.org/wiki/C.A.R._Hoare}
	 19: {https://en.wikipedia.org/wiki/Parallel_computing}
	 20: {https://en.wikipedia.org/wiki/Parallel_computing}
	 21: {https://en.wikipedia.org/wiki/Central_processing_unit}
	 22: {https://en.wikipedia.org/wiki/Multi-processor}
	 23: {https://en.wikipedia.org/wiki/Multi-core_processor}
	 24: {https://en.wikipedia.org/wiki/Time-sharing}
	 25: {https://en.wikipedia.org/wiki/Distributed_computing}
	 26: {https://en.wikipedia.org/wiki/Scheduling_(computing)}
	 27: {https://en.wikipedia.org/wiki/Serializability}
	 28: {https://en.wikipedia.org/wiki/Concurrency_control}
	 29: {https://en.wikipedia.org/wiki/Concurrency_control}
	 30: {https://en.wikipedia.org/wiki/Race_condition#Software}
	 31: {https://en.wikipedia.org/wiki/Deadlock_(computer_science)}
	 32: {https://en.wikipedia.org/wiki/Resource_starvation}
	 33: {https://en.wikipedia.org/wiki/Non-blocking_algorithm}
	 34: {https://en.wikipedia.org/wiki/Gustafson%27s_law}
	 35: {https://en.wikipedia.org/wiki/Multiversion_concurrency_control}
	 36: {https://en.wikipedia.org/wiki/Petri_net}
	 37: {https://en.wikipedia.org/wiki/Dataflow_architecture}
	 38: {https://en.wikipedia.org/wiki/Process_calculi}
	 39: {https://en.wikipedia.org/wiki/Calculus_of_Communicating_Systems}
	 40: {https://en.wikipedia.org/wiki/Communicating_Sequential_Processes}
	 41: {https://en.wikipedia.org/wiki/Pi_calculus}
	 42: {https://en.wikipedia.org/wiki/Input/output_automaton}
	 43: {https://en.wikipedia.org/wiki/Temporal_logic_of_actions}
	 44: {https://en.wikipedia.org/wiki/Trace_theory}
	 45: {https://en.wikipedia.org/wiki/Actor_model_theory}
	 46: {https://en.wikipedia.org/wiki/Software_transactional_memory}
	 47: {https://en.wikipedia.org/wiki/Database_management_system}
	 48: {https://en.wikipedia.org/wiki/Atomic_commit}
	 49: {https://en.wikipedia.org/wiki/Consistency_model}
	 50: {https://en.wikipedia.org/wiki/Consistency_model}
	 51: {https://en.wikipedia.org/wiki/Computer_data_storage}
	 52: {https://en.wikipedia.org/wiki/Leslie_Lamport}
	 53: {https://en.wikipedia.org/wiki/Sequential_consistency}
	 54: {https://en.wikipedia.org/wiki/Relaxed_sequential}
	 55: {https://en.wikipedia.org/wiki/Process_(computer_science)}
	 56: {https://en.wikipedia.org/wiki/Thread_(computer_science)}
	 57: {https://en.wikipedia.org/wiki/Future_(programming)}
	 58: {https://en.wikipedia.org/wiki/Shared_memory_(interprocess_communication)}
	 59: {https://en.wikipedia.org/wiki/Java_(programming_language)}
	 60: {https://en.wikipedia.org/wiki/C_Sharp_(programming_language)}
	 61: {https://en.wikipedia.org/wiki/Mutual_exclusion}
	 62: {https://en.wikipedia.org/wiki/Semaphore_(programming)}
	 63: {https://en.wikipedia.org/wiki/Monitor_(synchronization)}
	 64: {https://en.wikipedia.org/wiki/Thread_safety}
	 65: {https://en.wikipedia.org/wiki/Message_passing}
	 66: {https://en.wikipedia.org/wiki/Open_MPI}
	 67: {https://en.wikipedia.org/wiki/Go_(programming_language)}
	 68: {https://en.wikipedia.org/wiki/Scala_(programming_language)}
	 69: {https://en.wikipedia.org/wiki/Erlang_(programming_language)}
	 70: {https://en.wikipedia.org/wiki/Occam_(programming_language)}
	 71: {https://en.wikipedia.org/wiki/Actor_model}
	 72: {https://en.wikipedia.org/wiki/Process_calculi}
	 73: {https://en.wikipedia.org/wiki/Symmetric_multiprocessing}
	 74: {https://en.wikipedia.org/wiki/Cache_coherence}
	 75: {https://en.wikipedia.org/wiki/Telegraphy}
	 76: {https://en.wikipedia.org/wiki/Time-division_multiplexing}
	 77: {https://en.wikipedia.org/wiki/Mutual_exclusion}
	 78: {https://en.wikipedia.org/wiki/Channel_(programming)}
	 79: {https://en.wikipedia.org/wiki/Coroutine}
	 80: {https://en.wikipedia.org/wiki/Futures_and_promises}
	 81: {https://en.wikipedia.org/wiki/Computer_multitasking}
	 82: {https://en.wikipedia.org/wiki/Cooperative_multitasking}
	 83: {https://en.wikipedia.org/wiki/Preemptive_multitasking}
	 84: {https://en.wikipedia.org/wiki/Time-sharing}
	 85: {https://en.wikipedia.org/wiki/Batch_processing}
	 86: {https://en.wikipedia.org/wiki/Process_(computing)}
	 87: {https://en.wikipedia.org/wiki/Thread_(computing)}
	 88: {https://en.wikipedia.org/wiki/List_of_concurrent_programming_languages}
	 89: {https://en.wikipedia.org/wiki/Concurrency_(computer_science)}
	 90: {https://en.wikipedia.org/wiki/Thread_(computer_science)}
	 91: {https://en.wikipedia.org/wiki/Distributed_computing}
	 92: {https://en.wikipedia.org/wiki/Message_passing_programming}
	 93: {https://en.wikipedia.org/wiki/Sharing}
	 94: {https://en.wikipedia.org/wiki/Parallel_Random_Access_Machine}
	 95: {https://en.wikipedia.org/wiki/Futures_and_promises}
	 96: {https://en.wikipedia.org/wiki/Java_(programming_language)}
	 97: {https://en.wikipedia.org/wiki/C_Sharp_(programming_language)}
	 98: {https://en.wikipedia.org/wiki/Monitor_(synchronization)}
	 99: {https://en.wikipedia.org/wiki/Erlang_(programming_language)}
	 100: {https://en.wikipedia.org/wiki/Pict_(programming_language)}
	 101: {https://en.wikipedia.org/wiki/Erlang_(programming_language)}
	 102: {https://en.wikipedia.org/wiki/Limbo_(programming_language)}
	 103: {https://en.wikipedia.org/wiki/Occam_(programming_language)}
	 104: {https://en.wikipedia.org/wiki/Ada_(programming_language)}
	 105: {https://en.wikipedia.org/wiki/Alef_(programming_language)}
	 106: {https://en.wikipedia.org/wiki/Plan_9_from_Bell_Labs}
	 107: {https://en.wikipedia.org/wiki/Alice_(programming_language)}
	 108: {https://en.wikipedia.org/wiki/Standard_ML}
	 109: {https://en.wikipedia.org/wiki/Ateji_PX}
	 110: {https://en.wikipedia.org/wiki/Java_(programming_language)}
	 111: {https://en.wikipedia.org/wiki/%CE%A0-calculus}
	 112: {https://en.wikipedia.org/wiki/Axum_(programming_language)}
	 113: {https://en.wikipedia.org/wiki/BMDFM}
	 114: {https://en.wikipedia.org/wiki/C%2B%2B}
	 115: {https://en.wikipedia.org/wiki/C%CF%89}
	 116: {https://en.wikipedia.org/wiki/C_Sharp_(programming_language)}
	 117: {https://en.wikipedia.org/wiki/Clojure}
	 118: {https://en.wikipedia.org/wiki/Functional_programming}
	 119: {https://en.wikipedia.org/wiki/Lisp_(programming_language)}
	 120: {https://en.wikipedia.org/wiki/Java_(software_platform)}
	 121: {https://en.wikipedia.org/wiki/Concurrent_Clean}
	 122: {https://en.wikipedia.org/wiki/Haskell_(programming_language)}
	 123: {https://en.wikipedia.org/wiki/Concurrent_Collections}
	 124: {https://en.wikipedia.org/wiki/Concurrent_Haskell}
	 125: {https://en.wikipedia.org/wiki/Concurrent_ML}
	 126: {https://en.wikipedia.org/wiki/Standard_ML}
	 127: {https://en.wikipedia.org/wiki/Concurrent_Pascal}
	 128: {https://en.wikipedia.org/wiki/Per_Brinch_Hansen}
	 129: {https://en.wikipedia.org/wiki/Curry_(programming_language)}
	 130: {https://en.wikipedia.org/wiki/D_(programming_language)}
	 131: {https://en.wikipedia.org/wiki/Multi-paradigm_programming_language}
	 132: {https://en.wikipedia.org/wiki/System_programming_language}
	 133: {https://en.wikipedia.org/wiki/Actor_model}
	 134: {https://en.wikipedia.org/wiki/E_(programming_language)}
	 135: {https://en.wikipedia.org/wiki/ECMAScript}
	 136: {https://en.wikipedia.org/wiki/Eiffel_(programming_language)}
	 137: {https://en.wikipedia.org/wiki/SCOOP_(software)}
	 138: {https://en.wikipedia.org/wiki/Elixir_(programming_language)}
	 139: {https://en.wikipedia.org/wiki/Erlang_(programming_language)}
	 140: {https://en.wikipedia.org/wiki/FAUST_(programming_language)}
	 141: {https://en.wikipedia.org/wiki/OpenMP}
	 142: {https://en.wikipedia.org/wiki/Cilk#Work-stealing}
	 143: {https://en.wikipedia.org/wiki/Fortran}
	 144: {https://en.wikipedia.org/wiki/Coarray_Fortran}
	 145: {https://en.wikipedia.org/wiki/Go_(programming_language)}
	 146: {https://en.wikipedia.org/wiki/Communicating_sequential_processes}
	 147: {https://en.wikipedia.org/wiki/Haskell_programming_language}
	 148: {https://en.wikipedia.org/wiki/Hume_(programming_language)}
	 149: {https://en.wikipedia.org/wiki/Io_(programming_language)}
	 150: {https://en.wikipedia.org/wiki/Janus_(concurrent_constraint_programming_language)}
	 151: {https://en.wikipedia.org/wiki/Java_(programming_language)}
	 152: {https://en.wikipedia.org/wiki/Julia_(programming_language)}
	 153: {https://en.wikipedia.org/wiki/JavaScript}
	 154: {https://en.wikipedia.org/wiki/Web_worker}
	 155: {https://en.wikipedia.org/wiki/Futures_and_promises}
	 156: {https://en.wikipedia.org/wiki/Callback_(computer_programming)}
	 157: {https://en.wikipedia.org/wiki/JoCaml}
	 158: {https://en.wikipedia.org/wiki/OCaml}
	 159: {https://en.wikipedia.org/wiki/Join-calculus}
	 160: {https://en.wikipedia.org/wiki/Join_Java}
	 161: {https://en.wikipedia.org/wiki/Java_(programming_language)}
	 162: {https://en.wikipedia.org/wiki/Joule_(programming_language)}
	 163: {https://en.wikipedia.org/wiki/Joyce_(programming_language)}
	 164: {https://en.wikipedia.org/wiki/Concurrent_Pascal}
	 165: {https://en.wikipedia.org/wiki/Communicating_sequential_processes}
	 166: {https://en.wikipedia.org/wiki/Per_Brinch_Hansen}
	 167: {https://en.wikipedia.org/wiki/LabVIEW}
	 168: {https://en.wikipedia.org/wiki/Limbo_(programming_language)}
	 169: {https://en.wikipedia.org/wiki/Alef_(programming_language)}
	 170: {https://en.wikipedia.org/wiki/Inferno_(operating_system)}
	 171: {https://en.wikipedia.org/wiki/Locomotive_BASIC}
	 172: {https://en.wikipedia.org/wiki/MultiLisp}
	 173: {https://en.wikipedia.org/wiki/Scheme_(programming_language)}
	 174: {https://en.wikipedia.org/wiki/Modula-2}
	 175: {https://en.wikipedia.org/wiki/Modula-3}
	 176: {https://en.wikipedia.org/wiki/Newsqueak}
	 177: {https://en.wikipedia.org/wiki/Alef_(programming_language)}
	 178: {https://en.wikipedia.org/wiki/Occam_(programming_language)}
	 179: {https://en.wikipedia.org/wiki/Communicating_sequential_processes}
	 180: {https://en.wikipedia.org/wiki/Occam-%CF%80}
	 181: {https://en.wikipedia.org/wiki/Occam_(programming_language)}
	 182: {https://en.wikipedia.org/wiki/%CE%A0-calculus}
	 183: {https://en.wikipedia.org/wiki/Object_REXX}
	 184: {https://en.wikipedia.org/wiki/Orc_(programming_language)}
	 185: {https://en.wikipedia.org/wiki/Kleene_algebra}
	 186: {https://en.wikipedia.org/wiki/Oz_(programming_language)}
	 187: {https://en.wikipedia.org/wiki/ParaSail_(programming_language)}
	 188: {https://en.wikipedia.org/wiki/PHP}
	 189: {https://en.wikipedia.org/wiki/Go_(programming_language)}
	 190: {https://en.wikipedia.org/wiki/Pict_(programming_language)}
	 191: {https://en.wikipedia.org/wiki/%CE%A0-calculus}
	 192: {https://en.wikipedia.org/wiki/Python_(programming_language)}
	 193: {https://en.wikipedia.org/wiki/Raku_(programming_language)}
	 194: {https://en.wikipedia.org/wiki/Reia_(programming_language)}
	 195: {https://en.wikipedia.org/wiki/Red_(programming_language)}
	 196: {https://en.wikipedia.org/wiki/Rebol}
	 197: {https://en.wikipedia.org/wiki/Rust_(programming_language)}
	 198: {https://en.wikipedia.org/wiki/Scala_(programming_language)}
	 199: {https://en.wikipedia.org/wiki/SequenceL}
	 200: {https://en.wikipedia.org/wiki/Race_condition}
	 201: {https://en.wikipedia.org/wiki/SR_language}
	 202: {https://en.wikipedia.org/wiki/SuperPascal}
	 203: {https://en.wikipedia.org/wiki/Concurrent_Pascal}
	 204: {https://en.wikipedia.org/wiki/Joyce_(programming_language)}
	 205: {https://en.wikipedia.org/wiki/Per_Brinch_Hansen}
	 206: {https://en.wikipedia.org/wiki/Swift_(programming_language)}
	 207: {https://en.wikipedia.org/wiki/Unicon_(programming_language)}
	 208: {https://en.wikipedia.org/wiki/TNSDL}
	 209: {https://en.wikipedia.org/wiki/VHDL}
	 210: {https://en.wikipedia.org/wiki/XC_(programming_language)}
	 211: {https://en.wikipedia.org/wiki/XMOS}
	 212: {https://en.wikipedia.org/wiki/Communicating_sequential_processes}
	 213: {https://en.wikipedia.org/wiki/Asynchronous_I/O}
	 214: {https://en.wikipedia.org/wiki/Chu_space}
	 215: {https://en.wikipedia.org/wiki/Flow-based_programming}
	 216: {https://en.wikipedia.org/wiki/Java_ConcurrentMap}
	 217: {https://en.wikipedia.org/wiki/Ptolemy_Project}
	 218: {https://en.wikipedia.org/wiki/Race_condition#Computing}
	 219: {https://en.wikipedia.org/wiki/Structured_concurrency}
	 220: {https://en.wikipedia.org/wiki/Transaction_processing}
	 221: {https://en.wikipedia.org/wiki/Coprocessor}
	 222: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 223: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 224: {https://en.wikipedia.org/wiki/S2CID_(identifier)}
	 225: {https://en.wikipedia.org/wiki/Rob_Pike}
	 226: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 227: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 228: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 229: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 230: {https://en.wikipedia.org/wiki/S2CID_(identifier)}
	 231: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 232: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 233: {https://en.wikipedia.org/wiki/Edsger_W._Dijkstra}
	 234: {https://en.wikipedia.org/wiki/Communications_of_the_ACM}
	 235: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 236: {https://en.wikipedia.org/wiki/S2CID_(identifier)}
	 237: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 238: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 239: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 240: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 241: {https://en.wikipedia.org/wiki/Concurrency_(computer_science)}
	 242: {https://en.wikipedia.org/wiki/Concurrency_control}
	 243: {https://en.wikipedia.org/wiki/Concurrent_data_structure}
	 244: {https://en.wikipedia.org/wiki/Concurrent_hash_table}
	 245: {https://en.wikipedia.org/wiki/Concurrent_user}
	 246: {https://en.wikipedia.org/wiki/Indeterminacy_in_concurrent_computation}
	 247: {https://en.wikipedia.org/wiki/Linearizability}
	 248: {https://en.wikipedia.org/wiki/Process_calculus}
	 249: {https://en.wikipedia.org/wiki/Communicating_sequential_processes}
	 250: {https://en.wikipedia.org/wiki/Calculus_of_communicating_systems}
	 251: {https://en.wikipedia.org/wiki/Algebra_of_Communicating_Processes}
	 252: {https://en.wikipedia.org/wiki/Language_Of_Temporal_Ordering_Specification}
	 253: {https://en.wikipedia.org/wiki/%CE%A0-calculus}
	 254: {https://en.wikipedia.org/wiki/Ambient_calculus}
	 255: {https://en.wikipedia.org/wiki/API-Calculus}
	 256: {https://en.wikipedia.org/wiki/PEPA}
	 257: {https://en.wikipedia.org/wiki/Join-calculus}
	 258: {https://en.wikipedia.org/wiki/ABA_problem}
	 259: {https://en.wikipedia.org/wiki/Cigarette_smokers_problem}
	 260: {https://en.wikipedia.org/wiki/Deadlock_(computer_science)}
	 261: {https://en.wikipedia.org/wiki/Dining_philosophers_problem}
	 262: {https://en.wikipedia.org/wiki/Producer%E2%80%93consumer_problem}
	 263: {https://en.wikipedia.org/wiki/Race_condition}
	 264: {https://en.wikipedia.org/wiki/Readers%E2%80%93writers_problem}
	 265: {https://en.wikipedia.org/wiki/Sleeping_barber_problem}
	 266: {https://en.wikipedia.org/wiki/Programming_paradigm}
	 267: {https://en.wikipedia.org/wiki/Comparison_of_multi-paradigm_programming_languages}
	 268: {https://en.wikipedia.org/wiki/Imperative_programming}
	 269: {https://en.wikipedia.org/wiki/Structured_programming}
	 270: {https://en.wikipedia.org/wiki/Jackson_structured_programming}
	 271: {https://en.wikipedia.org/wiki/Block_(programming)}
	 272: {https://en.wikipedia.org/wiki/Modular_programming}
	 273: {https://en.wikipedia.org/wiki/Non-structured_programming}
	 274: {https://en.wikipedia.org/wiki/Procedural_programming}
	 275: {https://en.wikipedia.org/wiki/Programming_in_the_large_and_programming_in_the_small}
	 276: {https://en.wikipedia.org/wiki/Design_by_contract}
	 277: {https://en.wikipedia.org/wiki/Invariant-based_programming}
	 278: {https://en.wikipedia.org/wiki/Nested_function}
	 279: {https://en.wikipedia.org/wiki/Object-oriented_programming}
	 280: {https://en.wikipedia.org/wiki/Comparison_of_programming_languages_(object-oriented_programming)}
	 281: {https://en.wikipedia.org/wiki/List_of_object-oriented_programming_languages}
	 282: {https://en.wikipedia.org/wiki/Class-based_programming}
	 283: {https://en.wikipedia.org/wiki/Prototype-based_programming}
	 284: {https://en.wikipedia.org/wiki/Object-based_language}
	 285: {https://en.wikipedia.org/wiki/Agent-oriented_programming}
	 286: {https://en.wikipedia.org/wiki/Immutable_object}
	 287: {https://en.wikipedia.org/wiki/Persistent_programming_language}
	 288: {https://en.wikipedia.org/wiki/Uniform_function_call_syntax}
	 289: {https://en.wikipedia.org/wiki/Declarative_programming}
	 290: {https://en.wikipedia.org/wiki/Functional_programming}
	 291: {https://en.wikipedia.org/wiki/Comparison_of_functional_programming_languages}
	 292: {https://en.wikipedia.org/wiki/Recursion_(computer_science)}
	 293: {https://en.wikipedia.org/wiki/Anonymous_function}
	 294: {https://en.wikipedia.org/wiki/Partial_application}
	 295: {https://en.wikipedia.org/wiki/Higher-order_programming}
	 296: {https://en.wikipedia.org/wiki/Purely_functional_programming}
	 297: {https://en.wikipedia.org/wiki/Total_functional_programming}
	 298: {https://en.wikipedia.org/wiki/Strict_programming_language}
	 299: {https://en.wikipedia.org/wiki/Generalized_algebraic_data_type}
	 300: {https://en.wikipedia.org/wiki/Dependent_type}
	 301: {https://en.wikipedia.org/wiki/Functional_logic_programming}
	 302: {https://en.wikipedia.org/wiki/Tacit_programming}
	 303: {https://en.wikipedia.org/wiki/Expression-oriented_programming_language}
	 304: {https://en.wikipedia.org/wiki/Applicative_programming_language}
	 305: {https://en.wikipedia.org/wiki/Concatenative_programming_language}
	 306: {https://en.wikipedia.org/wiki/Function-level_programming}
	 307: {https://en.wikipedia.org/wiki/Value-level_programming}
	 308: {https://en.wikipedia.org/wiki/Dataflow_programming}
	 309: {https://en.wikipedia.org/wiki/Flow-based_programming}
	 310: {https://en.wikipedia.org/wiki/Reactive_programming}
	 311: {https://en.wikipedia.org/wiki/Functional_reactive_programming}
	 312: {https://en.wikipedia.org/wiki/Signal_programming}
	 313: {https://en.wikipedia.org/wiki/Stream_processing}
	 314: {https://en.wikipedia.org/wiki/Synchronous_programming_language}
	 315: {https://en.wikipedia.org/wiki/Logic_programming}
	 316: {https://en.wikipedia.org/wiki/Abductive_logic_programming}
	 317: {https://en.wikipedia.org/wiki/Answer_set_programming}
	 318: {https://en.wikipedia.org/wiki/Constraint_programming}
	 319: {https://en.wikipedia.org/wiki/Constraint_logic_programming}
	 320: {https://en.wikipedia.org/wiki/Inductive_logic_programming}
	 321: {https://en.wikipedia.org/wiki/Nondeterministic_programming}
	 322: {https://en.wikipedia.org/wiki/Ontology_language}
	 323: {https://en.wikipedia.org/wiki/Probabilistic_logic_programming}
	 324: {https://en.wikipedia.org/wiki/Query_language}
	 325: {https://en.wikipedia.org/wiki/Domain-specific_language}
	 326: {https://en.wikipedia.org/wiki/Algebraic_modeling_language}
	 327: {https://en.wikipedia.org/wiki/Array_programming}
	 328: {https://en.wikipedia.org/wiki/Automata-based_programming}
	 329: {https://en.wikipedia.org/wiki/Action_language}
	 330: {https://en.wikipedia.org/wiki/Command_language}
	 331: {https://en.wikipedia.org/wiki/Spacecraft_command_language}
	 332: {https://en.wikipedia.org/wiki/Differentiable_programming}
	 333: {https://en.wikipedia.org/wiki/End-user_development}
	 334: {https://en.wikipedia.org/wiki/Grammar-oriented_programming}
	 335: {https://en.wikipedia.org/wiki/Interface_description_language}
	 336: {https://en.wikipedia.org/wiki/Language-oriented_programming}
	 337: {https://en.wikipedia.org/wiki/List_comprehension}
	 338: {https://en.wikipedia.org/wiki/Low-code_development_platform}
	 339: {https://en.wikipedia.org/wiki/Modeling_language}
	 340: {https://en.wikipedia.org/wiki/Natural-language_programming}
	 341: {https://en.wikipedia.org/wiki/Non-English-based_programming_languages}
	 342: {https://en.wikipedia.org/wiki/Page_description_language}
	 343: {https://en.wikipedia.org/wiki/Pipeline_(software)}
	 344: {https://en.wikipedia.org/wiki/Filter_(software)}
	 345: {https://en.wikipedia.org/wiki/Probabilistic_programming}
	 346: {https://en.wikipedia.org/wiki/Quantum_programming}
	 347: {https://en.wikipedia.org/wiki/Scientific_programming_language}
	 348: {https://en.wikipedia.org/wiki/Scripting_language}
	 349: {https://en.wikipedia.org/wiki/Set_theoretic_programming}
	 350: {https://en.wikipedia.org/wiki/Simulation_language}
	 351: {https://en.wikipedia.org/wiki/Stack-oriented_programming}
	 352: {https://en.wikipedia.org/wiki/System_programming_language}
	 353: {https://en.wikipedia.org/wiki/Tactile_programming_language}
	 354: {https://en.wikipedia.org/wiki/Template_processor}
	 355: {https://en.wikipedia.org/wiki/Transformation_language}
	 356: {https://en.wikipedia.org/wiki/Graph_rewriting}
	 357: {https://en.wikipedia.org/wiki/Production_system_(computer_science)}
	 358: {https://en.wikipedia.org/wiki/Pattern_matching}
	 359: {https://en.wikipedia.org/wiki/Visual_programming_language}
	 360: {https://en.wikipedia.org/wiki/Distributed_computing}
	 361: {https://en.wikipedia.org/wiki/Parallel_computing}
	 362: {https://en.wikipedia.org/wiki/Actor_model}
	 363: {https://en.wikipedia.org/wiki/Automatic_mutual_exclusion}
	 364: {https://en.wikipedia.org/wiki/Choreographic_programming}
	 365: {https://en.wikipedia.org/wiki/Concurrent_logic_programming}
	 366: {https://en.wikipedia.org/wiki/Concurrent_constraint_logic_programming}
	 367: {https://en.wikipedia.org/wiki/Concurrent_object-oriented_programming}
	 368: {https://en.wikipedia.org/wiki/Macroprogramming}
	 369: {https://en.wikipedia.org/wiki/Multitier_programming}
	 370: {https://en.wikipedia.org/wiki/Organic_computing}
	 371: {https://en.wikipedia.org/wiki/Parallel_programming_model}
	 372: {https://en.wikipedia.org/wiki/Partitioned_global_address_space}
	 373: {https://en.wikipedia.org/wiki/Process-oriented_programming}
	 374: {https://en.wikipedia.org/wiki/Relativistic_programming}
	 375: {https://en.wikipedia.org/wiki/Service-oriented_programming}
	 376: {https://en.wikipedia.org/wiki/Structured_concurrency}
	 377: {https://en.wikipedia.org/wiki/Metaprogramming}
	 378: {https://en.wikipedia.org/wiki/Attribute-oriented_programming}
	 379: {https://en.wikipedia.org/wiki/Automatic_programming}
	 380: {https://en.wikipedia.org/wiki/Inductive_programming}
	 381: {https://en.wikipedia.org/wiki/Dynamic_programming_language}
	 382: {https://en.wikipedia.org/wiki/Extensible_programming}
	 383: {https://en.wikipedia.org/wiki/Generic_programming}
	 384: {https://en.wikipedia.org/wiki/Homoiconicity}
	 385: {https://en.wikipedia.org/wiki/Interactive_programming}
	 386: {https://en.wikipedia.org/wiki/Macro_(computer_science)}
	 387: {https://en.wikipedia.org/wiki/Hygienic_macro}
	 388: {https://en.wikipedia.org/wiki/Metalinguistic_abstraction}
	 389: {https://en.wikipedia.org/wiki/Multi-stage_programming}
	 390: {https://en.wikipedia.org/wiki/Program_synthesis}
	 391: {https://en.wikipedia.org/wiki/Bayesian_program_synthesis}
	 392: {https://en.wikipedia.org/wiki/Inferential_programming}
	 393: {https://en.wikipedia.org/wiki/Programming_by_demonstration}
	 394: {https://en.wikipedia.org/wiki/Programming_by_example}
	 395: {https://en.wikipedia.org/wiki/Reflective_programming}
	 396: {https://en.wikipedia.org/wiki/Self-modifying_code}
	 397: {https://en.wikipedia.org/wiki/Symbolic_programming}
	 398: {https://en.wikipedia.org/wiki/Template_metaprogramming}
	 399: {https://en.wikipedia.org/wiki/Separation_of_concerns}
	 400: {https://en.wikipedia.org/wiki/Aspect-oriented_programming}
	 401: {https://en.wikipedia.org/wiki/Component-based_software_engineering}
	 402: {https://en.wikipedia.org/wiki/Data-driven_programming}
	 403: {https://en.wikipedia.org/wiki/Data-oriented_design}
	 404: {https://en.wikipedia.org/wiki/Event-driven_programming}
	 405: {https://en.wikipedia.org/wiki/Feature-oriented_programming}
	 406: {https://en.wikipedia.org/wiki/Literate_programming}
	 407: {https://en.wikipedia.org/wiki/Role-oriented_programming}
	 408: {https://en.wikipedia.org/wiki/Subject-oriented_programming}
	 409: {https://en.wikipedia.org/wiki/Programming_paradigm}
	 410: {https://en.wikipedia.org/wiki/Machine_code}
	 411: {https://en.wikipedia.org/wiki/Assembly_language}
	 412: {https://en.wikipedia.org/wiki/Compiled_language}
	 413: {https://en.wikipedia.org/wiki/Interpreted_language}
	 414: {https://en.wikipedia.org/wiki/Low-level_programming_language}
	 415: {https://en.wikipedia.org/wiki/High-level_programming_language}
	 416: {https://en.wikipedia.org/wiki/Very_high-level_programming_language}
	 417: {https://en.wikipedia.org/wiki/Esoteric_programming_language}
	 418: {https://en.wikipedia.org/wiki/Programming_language_generations}
	 419: {https://en.wikipedia.org/wiki/First-generation_programming_language}
	 420: {https://en.wikipedia.org/wiki/Second-generation_programming_language}
	 421: {https://en.wikipedia.org/wiki/Third-generation_programming_language}
	 422: {https://en.wikipedia.org/wiki/Fourth-generation_programming_language}
	 423: {https://en.wikipedia.org/wiki/Fifth-generation_programming_language}

{https://en.wikipedia.org/wiki/Imperative_programming} Refers To:
	 0: {https://en.wikipedia.org/wiki/Main_Page}
	 1: {https://en.wikipedia.org/wiki/Main_Page}
	 2: {https://en.wikipedia.org/wiki/Imperative_programming}
	 3: {https://en.wikipedia.org/wiki/Imperative_programming}
	 4: {https://en.wikipedia.org/wiki/Imperative_programming}
	 5: {https://en.wikipedia.org/wiki/Computer_science}
	 6: {https://en.wikipedia.org/wiki/Programming_paradigm}
	 7: {https://en.wikipedia.org/wiki/Software}
	 8: {https://en.wikipedia.org/wiki/Statement_(computer_science)}
	 9: {https://en.wikipedia.org/wiki/State_(computer_science)}
	 10: {https://en.wikipedia.org/wiki/Imperative_mood}
	 11: {https://en.wikipedia.org/wiki/Natural_language}
	 12: {https://en.wikipedia.org/wiki/Command_(computing)}
	 13: {https://en.wikipedia.org/wiki/Computer}
	 14: {https://en.wikipedia.org/wiki/Source_code}
	 15: {https://en.wikipedia.org/wiki/Declarative_programming}
	 16: {https://en.wikipedia.org/wiki/Procedural_programming}
	 17: {https://en.wikipedia.org/wiki/Subroutine}
	 18: {https://en.wikipedia.org/wiki/State_(computer_science)}
	 19: {https://en.wikipedia.org/wiki/Structured_programming}
	 20: {https://en.wikipedia.org/wiki/Modular_programming}
	 21: {https://en.wikipedia.org/wiki/Maintainability}
	 22: {https://en.wikipedia.org/wiki/Object-oriented_programming}
	 23: {https://en.wikipedia.org/wiki/Machine_code}
	 24: {https://en.wikipedia.org/wiki/Lisp_machine}
	 25: {https://en.wikipedia.org/wiki/Variable_(programming)}
	 26: {https://en.wikipedia.org/wiki/Recipe}
	 27: {https://en.wikipedia.org/wiki/Checklist}
	 28: {https://en.wikipedia.org/wiki/Computer_program}
	 29: {https://en.wikipedia.org/wiki/Destructive_assignment}
	 30: {https://en.wikipedia.org/wiki/Evaluation_(disambiguation)#Computer_science}
	 31: {https://en.wikipedia.org/wiki/Expression_(programming)}
	 32: {https://en.wikipedia.org/wiki/Arithmetic#Arithmetic_operations}
	 33: {https://en.wikipedia.org/wiki/Function_(mathematics)}
	 34: {https://en.wikipedia.org/wiki/While_loop}
	 35: {https://en.wikipedia.org/wiki/Do_while_loop}
	 36: {https://en.wikipedia.org/wiki/For_loop}
	 37: {https://en.wikipedia.org/wiki/Conditional_(programming)}
	 38: {https://en.wikipedia.org/wiki/Branch_(computer_science)}
	 39: {https://en.wikipedia.org/wiki/Goto}
	 40: {https://en.wikipedia.org/wiki/Switch_statement}
	 41: {https://en.wikipedia.org/wiki/Subroutine}
	 42: {https://en.wikipedia.org/wiki/High-level_programming_language}
	 43: {https://en.wikipedia.org/wiki/Block_(programming)}
	 44: {https://en.wikipedia.org/wiki/Subroutine}
	 45: {https://en.wikipedia.org/wiki/Fortran}
	 46: {https://en.wikipedia.org/wiki/BASIC}
	 47: {https://en.wikipedia.org/wiki/C_(programming_language)}
	 48: {https://en.wikipedia.org/wiki/Abstraction_(computer_science)}
	 49: {https://en.wikipedia.org/wiki/Assembly_language}
	 50: {https://en.wikipedia.org/wiki/FORTRAN}
	 51: {https://en.wikipedia.org/wiki/John_Backus}
	 52: {https://en.wikipedia.org/wiki/International_Business_Machines}
	 53: {https://en.wikipedia.org/wiki/Compiled_language}
	 54: {https://en.wikipedia.org/wiki/ALGOL}
	 55: {https://en.wikipedia.org/wiki/Operating_system}
	 56: {https://en.wikipedia.org/wiki/MUMPS}
	 57: {https://en.wikipedia.org/wiki/COBOL}
	 58: {https://en.wikipedia.org/wiki/BASIC}
	 59: {https://en.wikipedia.org/wiki/Pascal_(programming_language)}
	 60: {https://en.wikipedia.org/wiki/Niklaus_Wirth}
	 61: {https://en.wikipedia.org/wiki/C_(programming_language)}
	 62: {https://en.wikipedia.org/wiki/Dennis_Ritchie}
	 63: {https://en.wikipedia.org/wiki/Bell_Laboratories}
	 64: {https://en.wikipedia.org/wiki/Modula-2}
	 65: {https://en.wikipedia.org/wiki/Oberon_(programming_language)}
	 66: {https://en.wikipedia.org/wiki/United_States_Department_of_Defense}
	 67: {https://en.wikipedia.org/wiki/Jean_Ichbiah}
	 68: {https://en.wikipedia.org/wiki/Honeywell}
	 69: {https://en.wikipedia.org/wiki/Ada_(programming_language)}
	 70: {https://en.wikipedia.org/wiki/Object-oriented_programming}
	 71: {https://en.wikipedia.org/wiki/Object_(computing)}
	 72: {https://en.wikipedia.org/wiki/Smalltalk}
	 73: {https://en.wikipedia.org/wiki/Alan_Kay}
	 74: {https://en.wikipedia.org/wiki/PARC_(company)}
	 75: {https://en.wikipedia.org/wiki/Simula}
	 76: {https://en.wikipedia.org/wiki/Object-oriented_programming_language}
	 77: {https://en.wikipedia.org/wiki/Bjarne_Stroustrup}
	 78: {https://en.wikipedia.org/wiki/C%2B%2B}
	 79: {https://en.wikipedia.org/wiki/C_(programming_language)}
	 80: {https://en.wikipedia.org/wiki/C%2B%2B}
	 81: {https://en.wikipedia.org/wiki/Perl}
	 82: {https://en.wikipedia.org/wiki/Larry_Wall}
	 83: {https://en.wikipedia.org/wiki/Python_(programming_language)}
	 84: {https://en.wikipedia.org/wiki/Guido_van_Rossum}
	 85: {https://en.wikipedia.org/wiki/Visual_Basic_(classic)}
	 86: {https://en.wikipedia.org/wiki/Visual_C%2B%2B}
	 87: {https://en.wikipedia.org/wiki/Microsoft_Foundation_Class_Library}
	 88: {https://en.wikipedia.org/wiki/Microsoft}
	 89: {https://en.wikipedia.org/wiki/PHP}
	 90: {https://en.wikipedia.org/wiki/Rasmus_Lerdorf}
	 91: {https://en.wikipedia.org/wiki/Java_(programming_language)}
	 92: {https://en.wikipedia.org/wiki/James_Gosling}
	 93: {https://en.wikipedia.org/wiki/Sun_Microsystems}
	 94: {https://en.wikipedia.org/wiki/JavaScript}
	 95: {https://en.wikipedia.org/wiki/Brendan_Eich}
	 96: {https://en.wikipedia.org/wiki/Netscape}
	 97: {https://en.wikipedia.org/wiki/Ruby_(programming_language)}
	 98: {https://en.wikipedia.org/wiki/.NET_Framework}
	 99: {https://en.wikipedia.org/wiki/VB.NET}
	 100: {https://en.wikipedia.org/wiki/C_Sharp_(programming_language)}
	 101: {https://en.wikipedia.org/wiki/F_Sharp_(programming_language)}
	 102: {https://en.wikipedia.org/wiki/FORTRAN}
	 103: {https://en.wikipedia.org/wiki/String_(computer_science)}
	 104: {https://en.wikipedia.org/wiki/Declaration_(computer_programming)}
	 105: {https://en.wikipedia.org/wiki/Expression_(computer_science)}
	 106: {https://en.wikipedia.org/wiki/Statement_(computer_science)}
	 107: {https://en.wikipedia.org/wiki/Array_data_structure}
	 108: {https://en.wikipedia.org/wiki/Subroutine}
	 109: {https://en.wikipedia.org/wiki/For_loop}
	 110: {https://en.wikipedia.org/wiki/American_National_Standards_Institute}
	 111: {https://en.wikipedia.org/wiki/Record_(computer_science)}
	 112: {https://en.wikipedia.org/wiki/Pointer_(computer_programming)}
	 113: {https://en.wikipedia.org/wiki/COBOL}
	 114: {https://en.wikipedia.org/wiki/US_Department_of_Defense}
	 115: {https://en.wikipedia.org/wiki/Grace_Hopper}
	 116: {https://en.wikipedia.org/wiki/Object-oriented_programming}
	 117: {https://en.wikipedia.org/wiki/ALGOL}
	 118: {https://en.wikipedia.org/wiki/Syntax_(programming_languages)}
	 119: {https://en.wikipedia.org/wiki/Backus%E2%80%93Naur_form}
	 120: {https://en.wikipedia.org/wiki/Syntax-directed_translation}
	 121: {https://en.wikipedia.org/wiki/For_loop}
	 122: {https://en.wikipedia.org/wiki/Subroutine#Functions}
	 123: {https://en.wikipedia.org/wiki/Recursion_(computer_science)}
	 124: {https://en.wikipedia.org/wiki/Pascal_(programming_language)}
	 125: {https://en.wikipedia.org/wiki/Modula-2}
	 126: {https://en.wikipedia.org/wiki/Ada_(programming_language)}
	 127: {https://en.wikipedia.org/wiki/Delphi_(software)}
	 128: {https://en.wikipedia.org/wiki/Oberon_(programming_language)}
	 129: {https://en.wikipedia.org/wiki/C_(programming_language)}
	 130: {https://en.wikipedia.org/wiki/C%2B%2B}
	 131: {https://en.wikipedia.org/wiki/Java_(programming_language)}
	 132: {https://en.wikipedia.org/wiki/BASIC}
	 133: {https://en.wikipedia.org/wiki/Dartmouth_College}
	 134: {https://en.wikipedia.org/wiki/Microcomputers}
	 135: {https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop}
	 136: {https://en.wikipedia.org/wiki/Operating_system}
	 137: {https://en.wikipedia.org/wiki/Microsoft}
	 138: {https://en.wikipedia.org/wiki/Visual_Basic}
	 139: {https://en.wikipedia.org/wiki/Graphical_user_interface}
	 140: {https://en.wikipedia.org/wiki/C_(programming_language)}
	 141: {https://en.wikipedia.org/wiki/BCPL}
	 142: {https://en.wikipedia.org/wiki/B_(programming_language)}
	 143: {https://en.wikipedia.org/wiki/Bell_Labs}
	 144: {https://en.wikipedia.org/wiki/UNIX}
	 145: {https://en.wikipedia.org/wiki/Operating_system}
	 146: {https://en.wikipedia.org/wiki/Assembly_language}
	 147: {https://en.wikipedia.org/wiki/High-level_programming_language}
	 148: {https://en.wikipedia.org/wiki/Inline_assembler}
	 149: {https://en.wikipedia.org/wiki/Operators_in_C_and_C%2B%2B}
	 150: {https://en.wikipedia.org/wiki/Clock_signal}
	 151: {https://en.wikipedia.org/wiki/Call_stack}
	 152: {https://en.wikipedia.org/wiki/Declaration_(computer_programming)}
	 153: {https://en.wikipedia.org/wiki/Manual_memory_management}
	 154: {https://en.wikipedia.org/wiki/Pointer_(computer_programming)}
	 155: {https://en.wikipedia.org/wiki/C_dynamic_memory_allocation}
	 156: {https://en.wikipedia.org/wiki/Data_segment}
	 157: {https://en.wikipedia.org/wiki/.bss}
	 158: {https://en.wikipedia.org/wiki/Memory_address}
	 159: {https://en.wikipedia.org/wiki/Block_(programming)}
	 160: {https://en.wikipedia.org/wiki/Parameter_(computer_programming)#Parameters_and_arguments}
	 161: {https://en.wikipedia.org/wiki/Interface_(computing)}
	 162: {https://en.wikipedia.org/wiki/Call_stack}
	 163: {https://en.wikipedia.org/wiki/Call_stack#STACK-POINTER}
	 164: {https://en.wikipedia.org/wiki/Processor_register}
	 165: {https://en.wikipedia.org/wiki/Runtime_(program_lifecycle_phase)}
	 166: {https://en.wikipedia.org/wiki/Scope_(computer_science)}
	 167: {https://en.wikipedia.org/wiki/Manual_memory_management}
	 168: {https://en.wikipedia.org/wiki/Operating_system}
	 169: {https://en.wikipedia.org/wiki/Out_of_memory}
	 170: {https://en.wikipedia.org/wiki/C_dynamic_memory_allocation}
	 171: {https://en.wikipedia.org/wiki/Software_engineering}
	 172: {https://en.wikipedia.org/wiki/Modular_programming}
	 173: {https://en.wikipedia.org/wiki/Computer_file}
	 174: {https://en.wikipedia.org/wiki/Abstract_and_concrete}
	 175: {https://en.wikipedia.org/wiki/Data_type}
	 176: {https://en.wikipedia.org/wiki/Variable_(computer_science)}
	 177: {https://en.wikipedia.org/wiki/Integer}
	 178: {https://en.wikipedia.org/wiki/Floating-point_arithmetic}
	 179: {https://en.wikipedia.org/wiki/String_(computer_science)}
	 180: {https://en.wikipedia.org/wiki/Character_(computing)}
	 181: {https://en.wikipedia.org/wiki/Record_(computer_science)}
	 182: {https://en.wikipedia.org/wiki/List_(abstract_data_type)}
	 183: {https://en.wikipedia.org/wiki/Class_(computer_programming)}
	 184: {https://en.wikipedia.org/wiki/Object_(computer_science)}
	 185: {https://en.wikipedia.org/wiki/Object-oriented_programming}
	 186: {https://en.wikipedia.org/wiki/Functional_programming}
	 187: {https://en.wikipedia.org/wiki/Method_(computer_programming)}
	 188: {https://en.wikipedia.org/wiki/Method_(computer_programming)#Member_functions_in_C++}
	 189: {https://en.wikipedia.org/wiki/Operation_(mathematics)}
	 190: {https://en.wikipedia.org/wiki/Subset}
	 191: {https://en.wikipedia.org/wiki/Set_theory}
	 192: {https://en.wikipedia.org/wiki/Element_(mathematics)}
	 193: {https://en.wikipedia.org/wiki/Inheritance_(object-oriented_programming)}
	 194: {https://en.wikipedia.org/wiki/C%2B%2B}
	 195: {https://en.wikipedia.org/wiki/C_(programming_language)}
	 196: {https://en.wikipedia.org/wiki/Simula}
	 197: {https://en.wikipedia.org/wiki/Include_directive}
	 198: {https://en.wikipedia.org/wiki/Constructor_(object-oriented_programming)}
	 199: {https://en.wikipedia.org/wiki/Source_code}
	 200: {https://en.wikipedia.org/wiki/Makefile}
	 201: {https://en.wikipedia.org/wiki/Functional_programming}
	 202: {https://en.wikipedia.org/wiki/Reactive_programming}
	 203: {https://en.wikipedia.org/wiki/History_of_programming_languages}
	 204: {https://en.wikipedia.org/wiki/List_of_programming_languages_by_category#Imperative_languages}
	 205: {https://en.wikipedia.org/wiki/Reconfigurable_computing}
	 206: {https://en.wikipedia.org/wiki/Pearson_Education}
	 207: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 208: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 209: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 210: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 211: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 212: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 213: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 214: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 215: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 216: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 217: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 218: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 219: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 220: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 221: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 222: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 223: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 224: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 225: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 226: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 227: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 228: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 229: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 230: {https://en.wikipedia.org/wiki/Marvin_Victor_Zelkowitz}
	 231: {https://en.wikipedia.org/wiki/Nupedia}
	 232: {https://en.wikipedia.org/wiki/GNU_Free_Documentation_License}
	 233: {https://en.wikipedia.org/wiki/Programming_paradigm}
	 234: {https://en.wikipedia.org/wiki/Comparison_of_multi-paradigm_programming_languages}
	 235: {https://en.wikipedia.org/wiki/Structured_programming}
	 236: {https://en.wikipedia.org/wiki/Jackson_structured_programming}
	 237: {https://en.wikipedia.org/wiki/Block_(programming)}
	 238: {https://en.wikipedia.org/wiki/Modular_programming}
	 239: {https://en.wikipedia.org/wiki/Non-structured_programming}
	 240: {https://en.wikipedia.org/wiki/Procedural_programming}
	 241: {https://en.wikipedia.org/wiki/Programming_in_the_large_and_programming_in_the_small}
	 242: {https://en.wikipedia.org/wiki/Design_by_contract}
	 243: {https://en.wikipedia.org/wiki/Invariant-based_programming}
	 244: {https://en.wikipedia.org/wiki/Nested_function}
	 245: {https://en.wikipedia.org/wiki/Object-oriented_programming}
	 246: {https://en.wikipedia.org/wiki/Comparison_of_programming_languages_(object-oriented_programming)}
	 247: {https://en.wikipedia.org/wiki/List_of_object-oriented_programming_languages}
	 248: {https://en.wikipedia.org/wiki/Class-based_programming}
	 249: {https://en.wikipedia.org/wiki/Prototype-based_programming}
	 250: {https://en.wikipedia.org/wiki/Object-based_language}
	 251: {https://en.wikipedia.org/wiki/Agent-oriented_programming}
	 252: {https://en.wikipedia.org/wiki/Immutable_object}
	 253: {https://en.wikipedia.org/wiki/Persistent_programming_language}
	 254: {https://en.wikipedia.org/wiki/Uniform_function_call_syntax}
	 255: {https://en.wikipedia.org/wiki/Declarative_programming}
	 256: {https://en.wikipedia.org/wiki/Functional_programming}
	 257: {https://en.wikipedia.org/wiki/Comparison_of_functional_programming_languages}
	 258: {https://en.wikipedia.org/wiki/Recursion_(computer_science)}
	 259: {https://en.wikipedia.org/wiki/Anonymous_function}
	 260: {https://en.wikipedia.org/wiki/Partial_application}
	 261: {https://en.wikipedia.org/wiki/Higher-order_programming}
	 262: {https://en.wikipedia.org/wiki/Purely_functional_programming}
	 263: {https://en.wikipedia.org/wiki/Total_functional_programming}
	 264: {https://en.wikipedia.org/wiki/Strict_programming_language}
	 265: {https://en.wikipedia.org/wiki/Generalized_algebraic_data_type}
	 266: {https://en.wikipedia.org/wiki/Dependent_type}
	 267: {https://en.wikipedia.org/wiki/Functional_logic_programming}
	 268: {https://en.wikipedia.org/wiki/Tacit_programming}
	 269: {https://en.wikipedia.org/wiki/Expression-oriented_programming_language}
	 270: {https://en.wikipedia.org/wiki/Applicative_programming_language}
	 271: {https://en.wikipedia.org/wiki/Concatenative_programming_language}
	 272: {https://en.wikipedia.org/wiki/Function-level_programming}
	 273: {https://en.wikipedia.org/wiki/Value-level_programming}
	 274: {https://en.wikipedia.org/wiki/Dataflow_programming}
	 275: {https://en.wikipedia.org/wiki/Flow-based_programming}
	 276: {https://en.wikipedia.org/wiki/Reactive_programming}
	 277: {https://en.wikipedia.org/wiki/Functional_reactive_programming}
	 278: {https://en.wikipedia.org/wiki/Signal_programming}
	 279: {https://en.wikipedia.org/wiki/Stream_processing}
	 280: {https://en.wikipedia.org/wiki/Synchronous_programming_language}
	 281: {https://en.wikipedia.org/wiki/Logic_programming}
	 282: {https://en.wikipedia.org/wiki/Abductive_logic_programming}
	 283: {https://en.wikipedia.org/wiki/Answer_set_programming}
	 284: {https://en.wikipedia.org/wiki/Constraint_programming}
	 285: {https://en.wikipedia.org/wiki/Constraint_logic_programming}
	 286: {https://en.wikipedia.org/wiki/Inductive_logic_programming}
	 287: {https://en.wikipedia.org/wiki/Nondeterministic_programming}
	 288: {https://en.wikipedia.org/wiki/Ontology_language}
	 289: {https://en.wikipedia.org/wiki/Probabilistic_logic_programming}
	 290: {https://en.wikipedia.org/wiki/Query_language}
	 291: {https://en.wikipedia.org/wiki/Domain-specific_language}
	 292: {https://en.wikipedia.org/wiki/Algebraic_modeling_language}
	 293: {https://en.wikipedia.org/wiki/Array_programming}
	 294: {https://en.wikipedia.org/wiki/Automata-based_programming}
	 295: {https://en.wikipedia.org/wiki/Action_language}
	 296: {https://en.wikipedia.org/wiki/Command_language}
	 297: {https://en.wikipedia.org/wiki/Spacecraft_command_language}
	 298: {https://en.wikipedia.org/wiki/Differentiable_programming}
	 299: {https://en.wikipedia.org/wiki/End-user_development}
	 300: {https://en.wikipedia.org/wiki/Grammar-oriented_programming}
	 301: {https://en.wikipedia.org/wiki/Interface_description_language}
	 302: {https://en.wikipedia.org/wiki/Language-oriented_programming}
	 303: {https://en.wikipedia.org/wiki/List_comprehension}
	 304: {https://en.wikipedia.org/wiki/Low-code_development_platform}
	 305: {https://en.wikipedia.org/wiki/Modeling_language}
	 306: {https://en.wikipedia.org/wiki/Natural-language_programming}
	 307: {https://en.wikipedia.org/wiki/Non-English-based_programming_languages}
	 308: {https://en.wikipedia.org/wiki/Page_description_language}
	 309: {https://en.wikipedia.org/wiki/Pipeline_(software)}
	 310: {https://en.wikipedia.org/wiki/Filter_(software)}
	 311: {https://en.wikipedia.org/wiki/Probabilistic_programming}
	 312: {https://en.wikipedia.org/wiki/Quantum_programming}
	 313: {https://en.wikipedia.org/wiki/Scientific_programming_language}
	 314: {https://en.wikipedia.org/wiki/Scripting_language}
	 315: {https://en.wikipedia.org/wiki/Set_theoretic_programming}
	 316: {https://en.wikipedia.org/wiki/Simulation_language}
	 317: {https://en.wikipedia.org/wiki/Stack-oriented_programming}
	 318: {https://en.wikipedia.org/wiki/System_programming_language}
	 319: {https://en.wikipedia.org/wiki/Tactile_programming_language}
	 320: {https://en.wikipedia.org/wiki/Template_processor}
	 321: {https://en.wikipedia.org/wiki/Transformation_language}
	 322: {https://en.wikipedia.org/wiki/Graph_rewriting}
	 323: {https://en.wikipedia.org/wiki/Production_system_(computer_science)}
	 324: {https://en.wikipedia.org/wiki/Pattern_matching}
	 325: {https://en.wikipedia.org/wiki/Visual_programming_language}
	 326: {https://en.wikipedia.org/wiki/Concurrent_computing}
	 327: {https://en.wikipedia.org/wiki/Distributed_computing}
	 328: {https://en.wikipedia.org/wiki/Parallel_computing}
	 329: {https://en.wikipedia.org/wiki/Actor_model}
	 330: {https://en.wikipedia.org/wiki/Automatic_mutual_exclusion}
	 331: {https://en.wikipedia.org/wiki/Choreographic_programming}
	 332: {https://en.wikipedia.org/wiki/Concurrent_logic_programming}
	 333: {https://en.wikipedia.org/wiki/Concurrent_constraint_logic_programming}
	 334: {https://en.wikipedia.org/wiki/Concurrent_object-oriented_programming}
	 335: {https://en.wikipedia.org/wiki/Macroprogramming}
	 336: {https://en.wikipedia.org/wiki/Multitier_programming}
	 337: {https://en.wikipedia.org/wiki/Organic_computing}
	 338: {https://en.wikipedia.org/wiki/Parallel_programming_model}
	 339: {https://en.wikipedia.org/wiki/Partitioned_global_address_space}
	 340: {https://en.wikipedia.org/wiki/Process-oriented_programming}
	 341: {https://en.wikipedia.org/wiki/Relativistic_programming}
	 342: {https://en.wikipedia.org/wiki/Service-oriented_programming}
	 343: {https://en.wikipedia.org/wiki/Structured_concurrency}
	 344: {https://en.wikipedia.org/wiki/Metaprogramming}
	 345: {https://en.wikipedia.org/wiki/Attribute-oriented_programming}
	 346: {https://en.wikipedia.org/wiki/Automatic_programming}
	 347: {https://en.wikipedia.org/wiki/Inductive_programming}
	 348: {https://en.wikipedia.org/wiki/Dynamic_programming_language}
	 349: {https://en.wikipedia.org/wiki/Extensible_programming}
	 350: {https://en.wikipedia.org/wiki/Generic_programming}
	 351: {https://en.wikipedia.org/wiki/Homoiconicity}
	 352: {https://en.wikipedia.org/wiki/Interactive_programming}
	 353: {https://en.wikipedia.org/wiki/Macro_(computer_science)}
	 354: {https://en.wikipedia.org/wiki/Hygienic_macro}
	 355: {https://en.wikipedia.org/wiki/Metalinguistic_abstraction}
	 356: {https://en.wikipedia.org/wiki/Multi-stage_programming}
	 357: {https://en.wikipedia.org/wiki/Program_synthesis}
	 358: {https://en.wikipedia.org/wiki/Bayesian_program_synthesis}
	 359: {https://en.wikipedia.org/wiki/Inferential_programming}
	 360: {https://en.wikipedia.org/wiki/Programming_by_demonstration}
	 361: {https://en.wikipedia.org/wiki/Programming_by_example}
	 362: {https://en.wikipedia.org/wiki/Reflective_programming}
	 363: {https://en.wikipedia.org/wiki/Self-modifying_code}
	 364: {https://en.wikipedia.org/wiki/Symbolic_programming}
	 365: {https://en.wikipedia.org/wiki/Template_metaprogramming}
	 366: {https://en.wikipedia.org/wiki/Separation_of_concerns}
	 367: {https://en.wikipedia.org/wiki/Aspect-oriented_programming}
	 368: {https://en.wikipedia.org/wiki/Component-based_software_engineering}
	 369: {https://en.wikipedia.org/wiki/Data-driven_programming}
	 370: {https://en.wikipedia.org/wiki/Data-oriented_design}
	 371: {https://en.wikipedia.org/wiki/Event-driven_programming}
	 372: {https://en.wikipedia.org/wiki/Feature-oriented_programming}
	 373: {https://en.wikipedia.org/wiki/Literate_programming}
	 374: {https://en.wikipedia.org/wiki/Role-oriented_programming}
	 375: {https://en.wikipedia.org/wiki/Subject-oriented_programming}
	 376: {https://en.wikipedia.org/wiki/Programming_paradigm}
	 377: {https://en.wikipedia.org/wiki/Machine_code}
	 378: {https://en.wikipedia.org/wiki/Assembly_language}
	 379: {https://en.wikipedia.org/wiki/Compiled_language}
	 380: {https://en.wikipedia.org/wiki/Interpreted_language}
	 381: {https://en.wikipedia.org/wiki/Low-level_programming_language}
	 382: {https://en.wikipedia.org/wiki/High-level_programming_language}
	 383: {https://en.wikipedia.org/wiki/Very_high-level_programming_language}
	 384: {https://en.wikipedia.org/wiki/Esoteric_programming_language}
	 385: {https://en.wikipedia.org/wiki/Programming_language_generations}
	 386: {https://en.wikipedia.org/wiki/First-generation_programming_language}
	 387: {https://en.wikipedia.org/wiki/Second-generation_programming_language}
	 388: {https://en.wikipedia.org/wiki/Third-generation_programming_language}
	 389: {https://en.wikipedia.org/wiki/Fourth-generation_programming_language}
	 390: {https://en.wikipedia.org/wiki/Fifth-generation_programming_language}

{https://en.wikipedia.org/wiki/Functional_programming} Refers To:
	 0: {https://en.wikipedia.org/wiki/Main_Page}
	 1: {https://en.wikipedia.org/wiki/Main_Page}
	 2: {https://en.wikipedia.org/wiki/Functional_programming}
	 3: {https://en.wikipedia.org/wiki/Functional_programming}
	 4: {https://en.wikipedia.org/wiki/Functional_programming}
	 5: {https://en.wikipedia.org/wiki/Procedural_programming}
	 6: {https://en.wikipedia.org/wiki/Computer_science}
	 7: {https://en.wikipedia.org/wiki/Programming_paradigm}
	 8: {https://en.wikipedia.org/wiki/Function_application}
	 9: {https://en.wikipedia.org/wiki/Function_composition_(computer_science)}
	 10: {https://en.wikipedia.org/wiki/Function_(computer_science)}
	 11: {https://en.wikipedia.org/wiki/Declarative_programming}
	 12: {https://en.wikipedia.org/wiki/Tree_(data_structure)}
	 13: {https://en.wikipedia.org/wiki/Expression_(computer_science)}
	 14: {https://en.wikipedia.org/wiki/Value_(computer_science)}
	 15: {https://en.wikipedia.org/wiki/Imperative_programming}
	 16: {https://en.wikipedia.org/wiki/Statement_(computer_science)}
	 17: {https://en.wikipedia.org/wiki/State_(computer_science)}
	 18: {https://en.wikipedia.org/wiki/First-class_citizen}
	 19: {https://en.wikipedia.org/wiki/Identifier_(computer_languages)}
	 20: {https://en.wikipedia.org/wiki/Parameter_(computer_programming)}
	 21: {https://en.wikipedia.org/wiki/Return_value}
	 22: {https://en.wikipedia.org/wiki/Data_type}
	 23: {https://en.wikipedia.org/wiki/Declarative_programming}
	 24: {https://en.wikipedia.org/wiki/Composability}
	 25: {https://en.wikipedia.org/wiki/Modular_programming}
	 26: {https://en.wikipedia.org/wiki/Purely_functional_programming}
	 27: {https://en.wikipedia.org/wiki/Deterministic_system}
	 28: {https://en.wikipedia.org/wiki/Function_(mathematics)}
	 29: {https://en.wikipedia.org/wiki/Pure_function}
	 30: {https://en.wikipedia.org/wiki/State_(computer_science)}
	 31: {https://en.wikipedia.org/wiki/Side_effect_(computer_science)}
	 32: {https://en.wikipedia.org/wiki/Procedure_(computer_science)}
	 33: {https://en.wikipedia.org/wiki/Imperative_programming}
	 34: {https://en.wikipedia.org/wiki/Software_bug}
	 35: {https://en.wikipedia.org/wiki/Debugging}
	 36: {https://en.wikipedia.org/wiki/Software_testing}
	 37: {https://en.wikipedia.org/wiki/Formal_verification}
	 38: {https://en.wikipedia.org/wiki/Academia}
	 39: {https://en.wikipedia.org/wiki/Lambda_calculus}
	 40: {https://en.wikipedia.org/wiki/Common_Lisp}
	 41: {https://en.wikipedia.org/wiki/Scheme_(programming_language)}
	 42: {https://en.wikipedia.org/wiki/Clojure}
	 43: {https://en.wikipedia.org/wiki/Wolfram_Language}
	 44: {https://en.wikipedia.org/wiki/Racket_(programming_language)}
	 45: {https://en.wikipedia.org/wiki/Erlang_(programming_language)}
	 46: {https://en.wikipedia.org/wiki/Elixir_(programming_language)}
	 47: {https://en.wikipedia.org/wiki/OCaml}
	 48: {https://en.wikipedia.org/wiki/Haskell}
	 49: {https://en.wikipedia.org/wiki/F_Sharp_(programming_language)}
	 50: {https://en.wikipedia.org/wiki/Lean_(proof_assistant)}
	 51: {https://en.wikipedia.org/wiki/JavaScript}
	 52: {https://en.wikipedia.org/wiki/R_(programming_language)}
	 53: {https://en.wikipedia.org/wiki/J_(programming_language)}
	 54: {https://en.wikipedia.org/wiki/K_(programming_language)}
	 55: {https://en.wikipedia.org/wiki/Q_(programming_language_from_Kx_Systems)}
	 56: {https://en.wikipedia.org/wiki/XQuery}
	 57: {https://en.wikipedia.org/wiki/XSLT}
	 58: {https://en.wikipedia.org/wiki/XML}
	 59: {https://en.wikipedia.org/wiki/SQL}
	 60: {https://en.wikipedia.org/wiki/Lex_(software)}
	 61: {https://en.wikipedia.org/wiki/Yacc}
	 62: {https://en.wikipedia.org/wiki/Mutable_object}
	 63: {https://en.wikipedia.org/wiki/C%2B%2B11}
	 64: {https://en.wikipedia.org/wiki/C_Sharp_(programming_language)}
	 65: {https://en.wikipedia.org/wiki/Kotlin_(programming_language)}
	 66: {https://en.wikipedia.org/wiki/Perl}
	 67: {https://en.wikipedia.org/wiki/PHP}
	 68: {https://en.wikipedia.org/wiki/Python_(programming_language)}
	 69: {https://en.wikipedia.org/wiki/Go_(programming_language)}
	 70: {https://en.wikipedia.org/wiki/Rust_(programming_language)}
	 71: {https://en.wikipedia.org/wiki/Raku_(programming_language)}
	 72: {https://en.wikipedia.org/wiki/Scala_(programming_language)}
	 73: {https://en.wikipedia.org/wiki/Java_(programming_language)}
	 74: {https://en.wikipedia.org/wiki/Lambda_calculus}
	 75: {https://en.wikipedia.org/wiki/Alonzo_Church}
	 76: {https://en.wikipedia.org/wiki/Formal_system}
	 77: {https://en.wikipedia.org/wiki/Computation}
	 78: {https://en.wikipedia.org/wiki/Function_application}
	 79: {https://en.wikipedia.org/wiki/Alan_Turing}
	 80: {https://en.wikipedia.org/wiki/Turing_machines}
	 81: {https://en.wikipedia.org/wiki/Turing_complete}
	 82: {https://en.wikipedia.org/wiki/Combinatory_logic}
	 83: {https://en.wikipedia.org/wiki/Moses_Sch%C3%B6nfinkel}
	 84: {https://en.wikipedia.org/wiki/Haskell_Curry}
	 85: {https://en.wikipedia.org/wiki/Simply_typed_lambda_calculus}
	 86: {https://en.wikipedia.org/wiki/Data_type}
	 87: {https://en.wikipedia.org/wiki/High-level_programming_language}
	 88: {https://en.wikipedia.org/wiki/Lisp_(programming_language)}
	 89: {https://en.wikipedia.org/wiki/IBM_700/7000_series#Scientific_Architecture}
	 90: {https://en.wikipedia.org/wiki/John_McCarthy_(computer_scientist)}
	 91: {https://en.wikipedia.org/wiki/Massachusetts_Institute_of_Technology}
	 92: {https://en.wikipedia.org/wiki/Recursion_(computer_science)}
	 93: {https://en.wikipedia.org/wiki/Programming_paradigm#Multi-paradigm}
	 94: {https://en.wikipedia.org/wiki/Scheme_(programming_language)}
	 95: {https://en.wikipedia.org/wiki/Clojure}
	 96: {https://en.wikipedia.org/wiki/Dylan_(programming_language)}
	 97: {https://en.wikipedia.org/wiki/Julia_(programming_language)}
	 98: {https://en.wikipedia.org/wiki/Common_Lisp}
	 99: {https://en.wikipedia.org/wiki/Information_Processing_Language}
	 100: {https://en.wikipedia.org/wiki/Assembly_language}
	 101: {https://en.wikipedia.org/wiki/Kenneth_E._Iverson}
	 102: {https://en.wikipedia.org/wiki/APL_(programming_language)}
	 103: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 104: {https://en.wikipedia.org/wiki/John_Backus}
	 105: {https://en.wikipedia.org/wiki/FP_(programming_language)}
	 106: {https://en.wikipedia.org/wiki/Roger_Hui}
	 107: {https://en.wikipedia.org/wiki/J_(programming_language)}
	 108: {https://en.wikipedia.org/wiki/Arthur_Whitney_(computer_scientist)}
	 109: {https://en.wikipedia.org/wiki/K_(programming_language)}
	 110: {https://en.wikipedia.org/wiki/Q_(programming_language_from_Kx_Systems)}
	 111: {https://en.wikipedia.org/wiki/Peter_Landin}
	 112: {https://en.wikipedia.org/wiki/SECD_machine}
	 113: {https://en.wikipedia.org/wiki/Abstract_machine}
	 114: {https://en.wikipedia.org/wiki/ALGOL_60}
	 115: {https://en.wikipedia.org/wiki/Lambda_calculus}
	 116: {https://en.wikipedia.org/wiki/ISWIM}
	 117: {https://en.wikipedia.org/wiki/John_Backus}
	 118: {https://en.wikipedia.org/wiki/FP_(programming_language)}
	 119: {https://en.wikipedia.org/wiki/Turing_Award}
	 120: {https://en.wikipedia.org/wiki/Von_Neumann_architecture}
	 121: {https://en.wikipedia.org/wiki/Principle_of_compositionality}
	 122: {https://en.wikipedia.org/wiki/Function-level_programming}
	 123: {https://en.wikipedia.org/wiki/ML_(programming_language)}
	 124: {https://en.wikipedia.org/wiki/Robin_Milner}
	 125: {https://en.wikipedia.org/wiki/University_of_Edinburgh}
	 126: {https://en.wikipedia.org/wiki/David_Turner_(computer_scientist)}
	 127: {https://en.wikipedia.org/wiki/SASL_(programming_language)}
	 128: {https://en.wikipedia.org/wiki/University_of_St_Andrews}
	 129: {https://en.wikipedia.org/wiki/NPL_(programming_language)}
	 130: {https://en.wikipedia.org/wiki/Kleene%27s_recursion_theorem}
	 131: {https://en.wikipedia.org/wiki/Polymorphism_(computer_science)}
	 132: {https://en.wikipedia.org/wiki/Hope_(programming_language)}
	 133: {https://en.wikipedia.org/wiki/OCaml}
	 134: {https://en.wikipedia.org/wiki/Standard_ML}
	 135: {https://en.wikipedia.org/wiki/Guy_L._Steele}
	 136: {https://en.wikipedia.org/wiki/Gerald_Jay_Sussman}
	 137: {https://en.wikipedia.org/wiki/Scheme_(programming_language)}
	 138: {https://en.wikipedia.org/wiki/Lambda_Papers}
	 139: {https://en.wikipedia.org/wiki/Structure_and_Interpretation_of_Computer_Programs}
	 140: {https://en.wikipedia.org/wiki/Lexical_scope}
	 141: {https://en.wikipedia.org/wiki/Tail-call_optimization}
	 142: {https://en.wikipedia.org/wiki/Per_Martin-L%C3%B6f}
	 143: {https://en.wikipedia.org/wiki/Intuitionistic_type_theory}
	 144: {https://en.wikipedia.org/wiki/Constructive_proof}
	 145: {https://en.wikipedia.org/wiki/Dependent_type}
	 146: {https://en.wikipedia.org/wiki/Interactive_theorem_proving}
	 147: {https://en.wikipedia.org/wiki/Miranda_(programming_language)}
	 148: {https://en.wikipedia.org/wiki/Haskell}
	 149: {https://en.wikipedia.org/wiki/Open_standard}
	 150: {https://en.wikipedia.org/wiki/Computer_Aided_Design}
	 151: {https://en.wikipedia.org/wiki/OpenSCAD}
	 152: {https://en.wikipedia.org/wiki/CGAL}
	 153: {https://en.wikipedia.org/wiki/Imperative_programming}
	 154: {https://en.wikipedia.org/wiki/Object-oriented_programming}
	 155: {https://en.wikipedia.org/wiki/First-class_function}
	 156: {https://en.wikipedia.org/wiki/Higher-order_function}
	 157: {https://en.wikipedia.org/wiki/Higher-order_function}
	 158: {https://en.wikipedia.org/wiki/Differential_operator}
	 159: {https://en.wikipedia.org/wiki/Derivative}
	 160: {https://en.wikipedia.org/wiki/First-class_function}
	 161: {https://en.wikipedia.org/wiki/Partial_application}
	 162: {https://en.wikipedia.org/wiki/Currying}
	 163: {https://en.wikipedia.org/wiki/Successor_function}
	 164: {https://en.wikipedia.org/wiki/Natural_number}
	 165: {https://en.wikipedia.org/wiki/Pure_function}
	 166: {https://en.wikipedia.org/wiki/Pure_function}
	 167: {https://en.wikipedia.org/wiki/Side_effect_(computer_science)}
	 168: {https://en.wikipedia.org/wiki/Referential_transparency}
	 169: {https://en.wikipedia.org/wiki/Idempotence}
	 170: {https://en.wikipedia.org/wiki/Memoization}
	 171: {https://en.wikipedia.org/wiki/Parallelization}
	 172: {https://en.wikipedia.org/wiki/Thread-safe}
	 173: {https://en.wikipedia.org/wiki/Deforestation_(computer_science)}
	 174: {https://en.wikipedia.org/wiki/GNU_Compiler_Collection}
	 175: {https://en.wikipedia.org/wiki/Fortran_95}
	 176: {https://en.wikipedia.org/wiki/Recursion_(computer_science)}
	 177: {https://en.wikipedia.org/wiki/Iteration}
	 178: {https://en.wikipedia.org/wiki/Recursion}
	 179: {https://en.wikipedia.org/wiki/Recursion_(computer_science)}
	 180: {https://en.wikipedia.org/wiki/Recursion_(computer_science)}
	 181: {https://en.wikipedia.org/wiki/Call_stack}
	 182: {https://en.wikipedia.org/wiki/Tail_recursion}
	 183: {https://en.wikipedia.org/wiki/Continuation_passing_style}
	 184: {https://en.wikipedia.org/wiki/Scheme_(programming_language)}
	 185: {https://en.wikipedia.org/wiki/Chicken_(Scheme_implementation)}
	 186: {https://en.wikipedia.org/wiki/Stack_overflow}
	 187: {https://en.wikipedia.org/wiki/Garbage_collection_(computer_science)}
	 188: {https://en.wikipedia.org/wiki/Catamorphism}
	 189: {https://en.wikipedia.org/wiki/Anamorphism}
	 190: {https://en.wikipedia.org/wiki/Program_loops}
	 191: {https://en.wikipedia.org/wiki/Imperative_languages}
	 192: {https://en.wikipedia.org/wiki/Turing_complete}
	 193: {https://en.wikipedia.org/wiki/Halting_problem}
	 194: {https://en.wikipedia.org/wiki/Undecidable_problem}
	 195: {https://en.wikipedia.org/wiki/Equational_reasoning}
	 196: {https://en.wikipedia.org/wiki/Inconsistency}
	 197: {https://en.wikipedia.org/wiki/Type_system}
	 198: {https://en.wikipedia.org/wiki/Coq_(software)}
	 199: {https://en.wikipedia.org/wiki/Well-founded}
	 200: {https://en.wikipedia.org/wiki/Strongly_normalizing}
	 201: {https://en.wikipedia.org/wiki/Codata_(computer_science)}
	 202: {https://en.wikipedia.org/wiki/Total_functional_programming}
	 203: {https://en.wikipedia.org/wiki/Evaluation_strategy}
	 204: {https://en.wikipedia.org/wiki/Denotational_semantics}
	 205: {https://en.wikipedia.org/wiki/Graph_reduction}
	 206: {https://en.wikipedia.org/wiki/Miranda_(programming_language)}
	 207: {https://en.wikipedia.org/wiki/Clean_(programming_language)}
	 208: {https://en.wikipedia.org/wiki/Haskell}
	 209: {https://en.wikipedia.org/wiki/Separation_of_concerns}
	 210: {https://en.wikipedia.org/wiki/Operational_semantics}
	 211: {https://en.wikipedia.org/wiki/Type_system}
	 212: {https://en.wikipedia.org/wiki/Hindley%E2%80%93Milner_type_inference}
	 213: {https://en.wikipedia.org/wiki/Typed_lambda_calculus}
	 214: {https://en.wikipedia.org/wiki/False_positives_and_false_negatives#False_positive_error}
	 215: {https://en.wikipedia.org/wiki/Untyped_lambda_calculus}
	 216: {https://en.wikipedia.org/wiki/False_positives_and_false_negatives#False_negative_error}
	 217: {https://en.wikipedia.org/wiki/Scheme_(programming_language)}
	 218: {https://en.wikipedia.org/wiki/Algebraic_data_type}
	 219: {https://en.wikipedia.org/wiki/Test-driven_development}
	 220: {https://en.wikipedia.org/wiki/Type_inference}
	 221: {https://en.wikipedia.org/wiki/Coq_(software)}
	 222: {https://en.wikipedia.org/wiki/Agda_(programming_language)}
	 223: {https://en.wikipedia.org/wiki/Lennart_Augustsson}
	 224: {https://en.wikipedia.org/wiki/Epigram_(programming_language)}
	 225: {https://en.wikipedia.org/wiki/Intuitionistic_type_theory}
	 226: {https://en.wikipedia.org/wiki/Dependent_type}
	 227: {https://en.wikipedia.org/wiki/Higher-order_logic}
	 228: {https://en.wikipedia.org/wiki/Curry%E2%80%93Howard_isomorphism}
	 229: {https://en.wikipedia.org/wiki/Mathematical_proof}
	 230: {https://en.wikipedia.org/wiki/Formal_verification}
	 231: {https://en.wikipedia.org/wiki/Formalized_mathematics}
	 232: {https://en.wikipedia.org/wiki/Compcert}
	 233: {https://en.wikipedia.org/wiki/Compiler}
	 234: {https://en.wikipedia.org/wiki/C_(programming_language)}
	 235: {https://en.wikipedia.org/wiki/Generalized_algebraic_data_type}
	 236: {https://en.wikipedia.org/wiki/Glasgow_Haskell_Compiler}
	 237: {https://en.wikipedia.org/wiki/OCaml}
	 238: {https://en.wikipedia.org/wiki/Scala_(programming_language)}
	 239: {https://en.wikipedia.org/wiki/Referential_transparency}
	 240: {https://en.wikipedia.org/wiki/C_(programming_language)}
	 241: {https://en.wikipedia.org/wiki/Side_effect_(computer_science)}
	 242: {https://en.wikipedia.org/wiki/Purely_functional_data_structure}
	 243: {https://en.wikipedia.org/wiki/Data_structure}
	 244: {https://en.wikipedia.org/wiki/Imperative_programming}
	 245: {https://en.wikipedia.org/wiki/Array_data_structure}
	 246: {https://en.wikipedia.org/wiki/Hash_table}
	 247: {https://en.wikipedia.org/wiki/Binary_heap}
	 248: {https://en.wikipedia.org/wiki/Map_(computer_science)}
	 249: {https://en.wikipedia.org/wiki/Logarithm}
	 250: {https://en.wikipedia.org/wiki/Persistent_data_structure}
	 251: {https://en.wikipedia.org/wiki/Imperative_programming}
	 252: {https://en.wikipedia.org/wiki/Side_effect_(computer_science)}
	 253: {https://en.wikipedia.org/wiki/JavaScript}
	 254: {https://en.wikipedia.org/wiki/Off-by-one_error}
	 255: {https://en.wikipedia.org/wiki/Greenspun%27s_tenth_rule}
	 256: {https://en.wikipedia.org/wiki/Haskell}
	 257: {https://en.wikipedia.org/wiki/Monad_(functional_programming)}
	 258: {https://en.wikipedia.org/wiki/Category_theory}
	 259: {https://en.wikipedia.org/wiki/Clojure}
	 260: {https://en.wikipedia.org/wiki/Hoare_logic}
	 261: {https://en.wikipedia.org/wiki/Uniqueness_type}
	 262: {https://en.wikipedia.org/wiki/Effect_system}
	 263: {https://en.wikipedia.org/wiki/Central_processing_unit}
	 264: {https://en.wikipedia.org/wiki/C_(programming_language)}
	 265: {https://en.wikipedia.org/wiki/Pascal_(programming_language)}
	 266: {https://en.wikipedia.org/wiki/OCaml}
	 267: {https://en.wikipedia.org/wiki/Clean_(programming_language)}
	 268: {https://en.wikipedia.org/wiki/The_Computer_Language_Benchmarks_Game}
	 269: {https://en.wikipedia.org/wiki/Matrix_(mathematics)}
	 270: {https://en.wikipedia.org/wiki/Database}
	 271: {https://en.wikipedia.org/wiki/Array_programming}
	 272: {https://en.wikipedia.org/wiki/J_(programming_language)}
	 273: {https://en.wikipedia.org/wiki/K_(programming_language)}
	 274: {https://en.wikipedia.org/wiki/Inline_expansion}
	 275: {https://en.wikipedia.org/wiki/Clojure}
	 276: {https://en.wikipedia.org/wiki/Rust_(programming_language)}
	 277: {https://en.wikipedia.org/wiki/Reference_(computer_science)}
	 278: {https://en.wikipedia.org/wiki/Shared-nothing_architecture}
	 279: {https://en.wikipedia.org/wiki/Parallel_computing}
	 280: {https://en.wikipedia.org/wiki/Linearizability}
	 281: {https://en.wikipedia.org/wiki/Message_passing}
	 282: {https://en.wikipedia.org/wiki/Actor_model}
	 283: {https://en.wikipedia.org/wiki/Erlang_(programming_language)}
	 284: {https://en.wikipedia.org/wiki/Elixir_(programming_language)}
	 285: {https://en.wikipedia.org/wiki/Akka_(toolkit)}
	 286: {https://en.wikipedia.org/wiki/Lazy_evaluation}
	 287: {https://en.wikipedia.org/wiki/Memory_leak}
	 288: {https://en.wikipedia.org/wiki/Map_(higher-order_function)}
	 289: {https://en.wikipedia.org/wiki/Filter_(higher-order_function)}
	 290: {https://en.wikipedia.org/wiki/Clojure}
	 291: {https://en.wikipedia.org/wiki/Benchmarking}
	 292: {https://en.wikipedia.org/wiki/Zen_3}
	 293: {https://en.wikipedia.org/wiki/Leiningen_(software)}
	 294: {https://en.wikipedia.org/wiki/REPL}
	 295: {https://en.wikipedia.org/wiki/JVM}
	 296: {https://en.wikipedia.org/wiki/Java_(programming_language)}
	 297: {https://en.wikipedia.org/wiki/Go_(programming_language)}
	 298: {https://en.wikipedia.org/wiki/Generic_programming}
	 299: {https://en.wikipedia.org/wiki/Memory_management}
	 300: {https://en.wikipedia.org/wiki/Inlining}
	 301: {https://en.wikipedia.org/wiki/Rust_(programming_language)}
	 302: {https://en.wikipedia.org/wiki/Loop_unrolling}
	 303: {https://en.wikipedia.org/wiki/Assembly_language}
	 304: {https://en.wikipedia.org/wiki/Register_allocation}
	 305: {https://en.wikipedia.org/wiki/Time_complexity}
	 306: {https://en.wikipedia.org/wiki/D_(programming_language)}
	 307: {https://en.wikipedia.org/wiki/Fortran_95}
	 308: {https://en.wikipedia.org/wiki/JavaScript}
	 309: {https://en.wikipedia.org/wiki/Lua_(programming_language)}
	 310: {https://en.wikipedia.org/wiki/Python_(programming_language)}
	 311: {https://en.wikipedia.org/wiki/Go_(programming_language)}
	 312: {https://en.wikipedia.org/wiki/First-class_function}
	 313: {https://en.wikipedia.org/wiki/Anonymous_function}
	 314: {https://en.wikipedia.org/wiki/Map_(higher-order_function)}
	 315: {https://en.wikipedia.org/wiki/Fold_(higher-order_function)}
	 316: {https://en.wikipedia.org/wiki/Filter_(higher-order_function)}
	 317: {https://en.wikipedia.org/wiki/Perl}
	 318: {https://en.wikipedia.org/wiki/PHP}
	 319: {https://en.wikipedia.org/wiki/Visual_Basic_9}
	 320: {https://en.wikipedia.org/wiki/C_Sharp_(programming_language)}
	 321: {https://en.wikipedia.org/wiki/C%2B%2B11}
	 322: {https://en.wikipedia.org/wiki/Kotlin_(programming_language)}
	 323: {https://en.wikipedia.org/wiki/Anonymous_function}
	 324: {https://en.wikipedia.org/wiki/Map_(higher-order_function)}
	 325: {https://en.wikipedia.org/wiki/Fold_(higher-order_function)}
	 326: {https://en.wikipedia.org/wiki/Filter_(higher-order_function)}
	 327: {https://en.wikipedia.org/wiki/Closure_(computer_science)}
	 328: {https://en.wikipedia.org/wiki/Higher-Order_Perl}
	 329: {https://en.wikipedia.org/wiki/Anonymous_class}
	 330: {https://en.wikipedia.org/wiki/Closure_(computer_science)}
	 331: {https://en.wikipedia.org/wiki/Java_(programming_language)}
	 332: {https://en.wikipedia.org/wiki/C_Sharp_(programming_language)}
	 333: {https://en.wikipedia.org/wiki/Object-oriented}
	 334: {https://en.wikipedia.org/wiki/Design_pattern_(computer_science)}
	 335: {https://en.wikipedia.org/wiki/Strategy_pattern}
	 336: {https://en.wikipedia.org/wiki/Visitor_(design_pattern)}
	 337: {https://en.wikipedia.org/wiki/Catamorphism}
	 338: {https://en.wikipedia.org/wiki/Fold_(higher-order_function)}
	 339: {https://en.wikipedia.org/wiki/Logic_programming}
	 340: {https://en.wikipedia.org/wiki/Ciao_(programming_language)}
	 341: {https://en.wikipedia.org/wiki/Emacs}
	 342: {https://en.wikipedia.org/wiki/Emacs_Lisp}
	 343: {https://en.wikipedia.org/wiki/GNU_Emacs}
	 344: {https://en.wikipedia.org/wiki/Richard_Stallman}
	 345: {https://en.wikipedia.org/wiki/Abstract_syntax_tree}
	 346: {https://en.wikipedia.org/wiki/S-expression}
	 347: {https://en.wikipedia.org/wiki/Spreadsheet}
	 348: {https://en.wikipedia.org/wiki/Higher-order_function}
	 349: {https://en.wikipedia.org/wiki/Composability}
	 350: {https://en.wikipedia.org/wiki/Microservices}
	 351: {https://en.wikipedia.org/wiki/Programming_language_theory}
	 352: {https://en.wikipedia.org/wiki/Peer-review}
	 353: {https://en.wikipedia.org/wiki/International_Conference_on_Functional_Programming}
	 354: {https://en.wikipedia.org/wiki/Journal_of_Functional_Programming}
	 355: {https://en.wikipedia.org/wiki/Symposium_on_Trends_in_Functional_Programming}
	 356: {https://en.wikipedia.org/wiki/Erlang_(programming_language)}
	 357: {https://en.wikipedia.org/wiki/Sweden}
	 358: {https://en.wikipedia.org/wiki/Ericsson}
	 359: {https://en.wikipedia.org/wiki/Fault_tolerance}
	 360: {https://en.wikipedia.org/wiki/Telecommunications}
	 361: {https://en.wikipedia.org/wiki/Nortel}
	 362: {https://en.wikipedia.org/wiki/Facebook}
	 363: {https://en.wikipedia.org/wiki/%C3%89lectricit%C3%A9_de_France}
	 364: {https://en.wikipedia.org/wiki/WhatsApp}
	 365: {https://en.wikipedia.org/wiki/Scheme_(programming_language)}
	 366: {https://en.wikipedia.org/wiki/Lisp_(programming_language)}
	 367: {https://en.wikipedia.org/wiki/Apple_Macintosh}
	 368: {https://en.wikipedia.org/wiki/Computer_simulation}
	 369: {https://en.wikipedia.org/wiki/Telescope}
	 370: {https://en.wikipedia.org/wiki/OCaml}
	 371: {https://en.wikipedia.org/wiki/Software_driver}
	 372: {https://en.wikipedia.org/wiki/Robot}
	 373: {https://en.wikipedia.org/wiki/Embedded_software}
	 374: {https://en.wikipedia.org/wiki/Haskell}
	 375: {https://en.wikipedia.org/wiki/Scala_(programming_language)}
	 376: {https://en.wikipedia.org/wiki/F_Sharp_(programming_language)}
	 377: {https://en.wikipedia.org/wiki/Wolfram_Language}
	 378: {https://en.wikipedia.org/wiki/Lisp_(programming_language)}
	 379: {https://en.wikipedia.org/wiki/Standard_ML}
	 380: {https://en.wikipedia.org/wiki/Data_science}
	 381: {https://en.wikipedia.org/wiki/ClojureScript}
	 382: {https://en.wikipedia.org/wiki/Elm_(programming_language)}
	 383: {https://en.wikipedia.org/wiki/PureScript}
	 384: {https://en.wikipedia.org/wiki/Elixir_(programming_language)}
	 385: {https://en.wikipedia.org/wiki/Font_Awesome}
	 386: {https://en.wikipedia.org/wiki/Allegro_Platform}
	 387: {https://en.wikipedia.org/wiki/Gr%C3%B6bner_basis}
	 388: {https://en.wikipedia.org/wiki/Comprehensive_Capital_Analysis_and_Review}
	 389: {https://en.wikipedia.org/wiki/Caml}
	 390: {https://en.wikipedia.org/wiki/Categorical_abstract_machine}
	 391: {https://en.wikipedia.org/wiki/Category_theory}
	 392: {https://en.wikipedia.org/wiki/University}
	 393: {https://en.wikipedia.org/wiki/Structure_and_Interpretation_of_Classical_Mechanics}
	 394: {https://en.wikipedia.org/wiki/Scheme_(programming_language)}
	 395: {https://en.wikipedia.org/wiki/Eager_evaluation}
	 396: {https://en.wikipedia.org/wiki/Functional_reactive_programming}
	 397: {https://en.wikipedia.org/wiki/Inductive_functional_programming}
	 398: {https://en.wikipedia.org/wiki/List_of_functional_programming_languages}
	 399: {https://en.wikipedia.org/wiki/List_of_functional_programming_topics}
	 400: {https://en.wikipedia.org/wiki/Nested_function}
	 401: {https://en.wikipedia.org/wiki/Purely_functional_programming}
	 402: {https://en.wikipedia.org/wiki/Paul_Hudak}
	 403: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 404: {https://en.wikipedia.org/wiki/S2CID_(identifier)}
	 405: {https://en.wikipedia.org/wiki/John_Hughes_(computer_scientist)}
	 406: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 407: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 408: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 409: {https://en.wikipedia.org/wiki/S2CID_(identifier)}
	 410: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 411: {https://en.wikipedia.org/wiki/S2CID_(identifier)}
	 412: {https://en.wikipedia.org/wiki/Paul_Hudak}
	 413: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 414: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 415: {https://en.wikipedia.org/wiki/ISSN_(identifier)}
	 416: {https://en.wikipedia.org/wiki/John_Chambers_(programmer)}
	 417: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 418: {https://en.wikipedia.org/wiki/Donald_D._Chamberlin}
	 419: {https://en.wikipedia.org/wiki/Raymond_F._Boyce}
	 420: {https://en.wikipedia.org/wiki/Mark_Jason_Dominus}
	 421: {https://en.wikipedia.org/wiki/Higher-Order_Perl}
	 422: {https://en.wikipedia.org/wiki/Morgan_Kaufmann}
	 423: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 424: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 425: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 426: {https://en.wikipedia.org/wiki/JSTOR_(identifier)}
	 427: {https://en.wikipedia.org/wiki/S2CID_(identifier)}
	 428: {https://en.wikipedia.org/wiki/Alonzo_Church}
	 429: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 430: {https://en.wikipedia.org/wiki/JSTOR_(identifier)}
	 431: {https://en.wikipedia.org/wiki/S2CID_(identifier)}
	 432: {https://en.wikipedia.org/wiki/John_McCarthy_(computer_scientist)}
	 433: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 434: {https://en.wikipedia.org/wiki/John_McCarthy_(computer_scientist)}
	 435: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 436: {https://en.wikipedia.org/wiki/S2CID_(identifier)}
	 437: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 438: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 439: {https://en.wikipedia.org/wiki/S2CID_(identifier)}
	 440: {https://en.wikipedia.org/wiki/Herbert_A._Simon}
	 441: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 442: {https://en.wikipedia.org/wiki/Logic_Theorist}
	 443: {https://en.wikipedia.org/wiki/Principia_Mathematica}
	 444: {https://en.wikipedia.org/wiki/The_Computer_Journal}
	 445: {https://en.wikipedia.org/wiki/British_Computer_Society}
	 446: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 447: {https://en.wikipedia.org/wiki/Communications_of_the_ACM}
	 448: {https://en.wikipedia.org/wiki/Association_for_Computing_Machinery}
	 449: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 450: {https://en.wikipedia.org/wiki/S2CID_(identifier)}
	 451: {https://en.wikipedia.org/wiki/Communications_of_the_ACM}
	 452: {https://en.wikipedia.org/wiki/Association_for_Computing_Machinery}
	 453: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 454: {https://en.wikipedia.org/wiki/S2CID_(identifier)}
	 455: {https://en.wikipedia.org/wiki/Communications_of_the_ACM}
	 456: {https://en.wikipedia.org/wiki/Association_for_Computing_Machinery}
	 457: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 458: {https://en.wikipedia.org/wiki/S2CID_(identifier)}
	 459: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 460: {https://en.wikipedia.org/wiki/Ars_Technica}
	 461: {https://en.wikipedia.org/wiki/InfoWorld}
	 462: {https://en.wikipedia.org/wiki/Byte_(magazine)}
	 463: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 464: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 465: {https://en.wikipedia.org/wiki/S2CID_(identifier)}
	 466: {https://en.wikipedia.org/wiki/David_Turner_(computer_scientist)}
	 467: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 468: {https://en.wikipedia.org/wiki/John_Launchbury}
	 469: {https://en.wikipedia.org/wiki/Association_for_Computing_Machinery}
	 470: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 471: {https://en.wikipedia.org/wiki/Robert_Harper_(computer_scientist)}
	 472: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 473: {https://en.wikipedia.org/wiki/CiteSeerX_(identifier)}
	 474: {https://en.wikipedia.org/wiki/Stephanie_Weirich}
	 475: {https://en.wikipedia.org/wiki/Association_for_Computing_Machinery}
	 476: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 477: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 478: {https://en.wikipedia.org/wiki/Chalmers_University_of_Technology}
	 479: {https://en.wikipedia.org/wiki/Chris_Okasaki}
	 480: {https://en.wikipedia.org/wiki/Cambridge_University_Press}
	 481: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 482: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 483: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 484: {https://en.wikipedia.org/wiki/Lawrence_Paulson}
	 485: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 486: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 487: {https://en.wikipedia.org/wiki/S2CID_(identifier)}
	 488: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 489: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 490: {https://en.wikipedia.org/wiki/S2CID_(identifier)}
	 491: {https://en.wikipedia.org/wiki/Guido_van_Rossum}
	 492: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 493: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 494: {https://en.wikipedia.org/wiki/ISSN_(identifier)}
	 495: {https://en.wikipedia.org/wiki/S2CID_(identifier)}
	 496: {https://en.wikipedia.org/wiki/Simon_Peyton_Jones}
	 497: {https://en.wikipedia.org/wiki/Margaret_Burnett}
	 498: {https://en.wikipedia.org/wiki/Alan_Blackwell}
	 499: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 500: {https://en.wikipedia.org/wiki/Wayback_Machine}
	 501: {https://en.wikipedia.org/wiki/Packt}
	 502: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 503: {https://en.wikipedia.org/wiki/Hal_Abelson}
	 504: {https://en.wikipedia.org/wiki/Gerald_Jay_Sussman}
	 505: {https://en.wikipedia.org/wiki/Bibcode_(identifier)}
	 506: {https://en.wikipedia.org/wiki/TWiT.tv}
	 507: {https://en.wikipedia.org/wiki/Hal_Abelson}
	 508: {https://en.wikipedia.org/wiki/Gerald_Jay_Sussman}
	 509: {https://en.wikipedia.org/wiki/Bibcode_(identifier)}
	 510: {https://en.wikipedia.org/wiki/Cambridge_University_Press}
	 511: {https://en.wikipedia.org/wiki/Haskell_Curry}
	 512: {https://en.wikipedia.org/wiki/J._Roger_Hindley}
	 513: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 514: {https://en.wikipedia.org/wiki/Morgan_Kaufmann}
	 515: {https://en.wikipedia.org/wiki/Prentice_Hall}
	 516: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 517: {https://en.wikipedia.org/wiki/Marvin_Victor_Zelkowitz}
	 518: {https://en.wikipedia.org/wiki/Prentice_Hall}
	 519: {https://en.wikipedia.org/wiki/Programming_paradigm}
	 520: {https://en.wikipedia.org/wiki/Comparison_of_multi-paradigm_programming_languages}
	 521: {https://en.wikipedia.org/wiki/Imperative_programming}
	 522: {https://en.wikipedia.org/wiki/Structured_programming}
	 523: {https://en.wikipedia.org/wiki/Jackson_structured_programming}
	 524: {https://en.wikipedia.org/wiki/Block_(programming)}
	 525: {https://en.wikipedia.org/wiki/Modular_programming}
	 526: {https://en.wikipedia.org/wiki/Non-structured_programming}
	 527: {https://en.wikipedia.org/wiki/Procedural_programming}
	 528: {https://en.wikipedia.org/wiki/Programming_in_the_large_and_programming_in_the_small}
	 529: {https://en.wikipedia.org/wiki/Design_by_contract}
	 530: {https://en.wikipedia.org/wiki/Invariant-based_programming}
	 531: {https://en.wikipedia.org/wiki/Nested_function}
	 532: {https://en.wikipedia.org/wiki/Object-oriented_programming}
	 533: {https://en.wikipedia.org/wiki/Comparison_of_programming_languages_(object-oriented_programming)}
	 534: {https://en.wikipedia.org/wiki/List_of_object-oriented_programming_languages}
	 535: {https://en.wikipedia.org/wiki/Class-based_programming}
	 536: {https://en.wikipedia.org/wiki/Prototype-based_programming}
	 537: {https://en.wikipedia.org/wiki/Object-based_language}
	 538: {https://en.wikipedia.org/wiki/Agent-oriented_programming}
	 539: {https://en.wikipedia.org/wiki/Immutable_object}
	 540: {https://en.wikipedia.org/wiki/Persistent_programming_language}
	 541: {https://en.wikipedia.org/wiki/Uniform_function_call_syntax}
	 542: {https://en.wikipedia.org/wiki/Declarative_programming}
	 543: {https://en.wikipedia.org/wiki/Comparison_of_functional_programming_languages}
	 544: {https://en.wikipedia.org/wiki/Recursion_(computer_science)}
	 545: {https://en.wikipedia.org/wiki/Anonymous_function}
	 546: {https://en.wikipedia.org/wiki/Partial_application}
	 547: {https://en.wikipedia.org/wiki/Higher-order_programming}
	 548: {https://en.wikipedia.org/wiki/Purely_functional_programming}
	 549: {https://en.wikipedia.org/wiki/Total_functional_programming}
	 550: {https://en.wikipedia.org/wiki/Strict_programming_language}
	 551: {https://en.wikipedia.org/wiki/Generalized_algebraic_data_type}
	 552: {https://en.wikipedia.org/wiki/Dependent_type}
	 553: {https://en.wikipedia.org/wiki/Functional_logic_programming}
	 554: {https://en.wikipedia.org/wiki/Tacit_programming}
	 555: {https://en.wikipedia.org/wiki/Expression-oriented_programming_language}
	 556: {https://en.wikipedia.org/wiki/Applicative_programming_language}
	 557: {https://en.wikipedia.org/wiki/Concatenative_programming_language}
	 558: {https://en.wikipedia.org/wiki/Function-level_programming}
	 559: {https://en.wikipedia.org/wiki/Value-level_programming}
	 560: {https://en.wikipedia.org/wiki/Dataflow_programming}
	 561: {https://en.wikipedia.org/wiki/Flow-based_programming}
	 562: {https://en.wikipedia.org/wiki/Reactive_programming}
	 563: {https://en.wikipedia.org/wiki/Functional_reactive_programming}
	 564: {https://en.wikipedia.org/wiki/Signal_programming}
	 565: {https://en.wikipedia.org/wiki/Stream_processing}
	 566: {https://en.wikipedia.org/wiki/Synchronous_programming_language}
	 567: {https://en.wikipedia.org/wiki/Logic_programming}
	 568: {https://en.wikipedia.org/wiki/Abductive_logic_programming}
	 569: {https://en.wikipedia.org/wiki/Answer_set_programming}
	 570: {https://en.wikipedia.org/wiki/Constraint_programming}
	 571: {https://en.wikipedia.org/wiki/Constraint_logic_programming}
	 572: {https://en.wikipedia.org/wiki/Inductive_logic_programming}
	 573: {https://en.wikipedia.org/wiki/Nondeterministic_programming}
	 574: {https://en.wikipedia.org/wiki/Ontology_language}
	 575: {https://en.wikipedia.org/wiki/Probabilistic_logic_programming}
	 576: {https://en.wikipedia.org/wiki/Query_language}
	 577: {https://en.wikipedia.org/wiki/Domain-specific_language}
	 578: {https://en.wikipedia.org/wiki/Algebraic_modeling_language}
	 579: {https://en.wikipedia.org/wiki/Array_programming}
	 580: {https://en.wikipedia.org/wiki/Automata-based_programming}
	 581: {https://en.wikipedia.org/wiki/Action_language}
	 582: {https://en.wikipedia.org/wiki/Command_language}
	 583: {https://en.wikipedia.org/wiki/Spacecraft_command_language}
	 584: {https://en.wikipedia.org/wiki/Differentiable_programming}
	 585: {https://en.wikipedia.org/wiki/End-user_development}
	 586: {https://en.wikipedia.org/wiki/Grammar-oriented_programming}
	 587: {https://en.wikipedia.org/wiki/Interface_description_language}
	 588: {https://en.wikipedia.org/wiki/Language-oriented_programming}
	 589: {https://en.wikipedia.org/wiki/List_comprehension}
	 590: {https://en.wikipedia.org/wiki/Low-code_development_platform}
	 591: {https://en.wikipedia.org/wiki/Modeling_language}
	 592: {https://en.wikipedia.org/wiki/Natural-language_programming}
	 593: {https://en.wikipedia.org/wiki/Non-English-based_programming_languages}
	 594: {https://en.wikipedia.org/wiki/Page_description_language}
	 595: {https://en.wikipedia.org/wiki/Pipeline_(software)}
	 596: {https://en.wikipedia.org/wiki/Filter_(software)}
	 597: {https://en.wikipedia.org/wiki/Probabilistic_programming}
	 598: {https://en.wikipedia.org/wiki/Quantum_programming}
	 599: {https://en.wikipedia.org/wiki/Scientific_programming_language}
	 600: {https://en.wikipedia.org/wiki/Scripting_language}
	 601: {https://en.wikipedia.org/wiki/Set_theoretic_programming}
	 602: {https://en.wikipedia.org/wiki/Simulation_language}
	 603: {https://en.wikipedia.org/wiki/Stack-oriented_programming}
	 604: {https://en.wikipedia.org/wiki/System_programming_language}
	 605: {https://en.wikipedia.org/wiki/Tactile_programming_language}
	 606: {https://en.wikipedia.org/wiki/Template_processor}
	 607: {https://en.wikipedia.org/wiki/Transformation_language}
	 608: {https://en.wikipedia.org/wiki/Graph_rewriting}
	 609: {https://en.wikipedia.org/wiki/Production_system_(computer_science)}
	 610: {https://en.wikipedia.org/wiki/Pattern_matching}
	 611: {https://en.wikipedia.org/wiki/Visual_programming_language}
	 612: {https://en.wikipedia.org/wiki/Concurrent_computing}
	 613: {https://en.wikipedia.org/wiki/Distributed_computing}
	 614: {https://en.wikipedia.org/wiki/Parallel_computing}
	 615: {https://en.wikipedia.org/wiki/Actor_model}
	 616: {https://en.wikipedia.org/wiki/Automatic_mutual_exclusion}
	 617: {https://en.wikipedia.org/wiki/Choreographic_programming}
	 618: {https://en.wikipedia.org/wiki/Concurrent_logic_programming}
	 619: {https://en.wikipedia.org/wiki/Concurrent_constraint_logic_programming}
	 620: {https://en.wikipedia.org/wiki/Concurrent_object-oriented_programming}
	 621: {https://en.wikipedia.org/wiki/Macroprogramming}
	 622: {https://en.wikipedia.org/wiki/Multitier_programming}
	 623: {https://en.wikipedia.org/wiki/Organic_computing}
	 624: {https://en.wikipedia.org/wiki/Parallel_programming_model}
	 625: {https://en.wikipedia.org/wiki/Partitioned_global_address_space}
	 626: {https://en.wikipedia.org/wiki/Process-oriented_programming}
	 627: {https://en.wikipedia.org/wiki/Relativistic_programming}
	 628: {https://en.wikipedia.org/wiki/Service-oriented_programming}
	 629: {https://en.wikipedia.org/wiki/Structured_concurrency}
	 630: {https://en.wikipedia.org/wiki/Metaprogramming}
	 631: {https://en.wikipedia.org/wiki/Attribute-oriented_programming}
	 632: {https://en.wikipedia.org/wiki/Automatic_programming}
	 633: {https://en.wikipedia.org/wiki/Inductive_programming}
	 634: {https://en.wikipedia.org/wiki/Dynamic_programming_language}
	 635: {https://en.wikipedia.org/wiki/Extensible_programming}
	 636: {https://en.wikipedia.org/wiki/Generic_programming}
	 637: {https://en.wikipedia.org/wiki/Homoiconicity}
	 638: {https://en.wikipedia.org/wiki/Interactive_programming}
	 639: {https://en.wikipedia.org/wiki/Macro_(computer_science)}
	 640: {https://en.wikipedia.org/wiki/Hygienic_macro}
	 641: {https://en.wikipedia.org/wiki/Metalinguistic_abstraction}
	 642: {https://en.wikipedia.org/wiki/Multi-stage_programming}
	 643: {https://en.wikipedia.org/wiki/Program_synthesis}
	 644: {https://en.wikipedia.org/wiki/Bayesian_program_synthesis}
	 645: {https://en.wikipedia.org/wiki/Inferential_programming}
	 646: {https://en.wikipedia.org/wiki/Programming_by_demonstration}
	 647: {https://en.wikipedia.org/wiki/Programming_by_example}
	 648: {https://en.wikipedia.org/wiki/Reflective_programming}
	 649: {https://en.wikipedia.org/wiki/Self-modifying_code}
	 650: {https://en.wikipedia.org/wiki/Symbolic_programming}
	 651: {https://en.wikipedia.org/wiki/Template_metaprogramming}
	 652: {https://en.wikipedia.org/wiki/Separation_of_concerns}
	 653: {https://en.wikipedia.org/wiki/Aspect-oriented_programming}
	 654: {https://en.wikipedia.org/wiki/Component-based_software_engineering}
	 655: {https://en.wikipedia.org/wiki/Data-driven_programming}
	 656: {https://en.wikipedia.org/wiki/Data-oriented_design}
	 657: {https://en.wikipedia.org/wiki/Event-driven_programming}
	 658: {https://en.wikipedia.org/wiki/Feature-oriented_programming}
	 659: {https://en.wikipedia.org/wiki/Literate_programming}
	 660: {https://en.wikipedia.org/wiki/Role-oriented_programming}
	 661: {https://en.wikipedia.org/wiki/Subject-oriented_programming}
	 662: {https://en.wikipedia.org/wiki/Programming_paradigm}
	 663: {https://en.wikipedia.org/wiki/Machine_code}
	 664: {https://en.wikipedia.org/wiki/Assembly_language}
	 665: {https://en.wikipedia.org/wiki/Compiled_language}
	 666: {https://en.wikipedia.org/wiki/Interpreted_language}
	 667: {https://en.wikipedia.org/wiki/Low-level_programming_language}
	 668: {https://en.wikipedia.org/wiki/High-level_programming_language}
	 669: {https://en.wikipedia.org/wiki/Very_high-level_programming_language}
	 670: {https://en.wikipedia.org/wiki/Esoteric_programming_language}
	 671: {https://en.wikipedia.org/wiki/Programming_language_generations}
	 672: {https://en.wikipedia.org/wiki/First-generation_programming_language}
	 673: {https://en.wikipedia.org/wiki/Second-generation_programming_language}
	 674: {https://en.wikipedia.org/wiki/Third-generation_programming_language}
	 675: {https://en.wikipedia.org/wiki/Fourth-generation_programming_language}
	 676: {https://en.wikipedia.org/wiki/Fifth-generation_programming_language}

{https://en.wikipedia.org/wiki/Software_design} Refers To:
	 0: {https://en.wikipedia.org/wiki/Main_Page}
	 1: {https://en.wikipedia.org/wiki/Main_Page}
	 2: {https://en.wikipedia.org/wiki/Software_design}
	 3: {https://en.wikipedia.org/wiki/Software_design}
	 4: {https://en.wikipedia.org/wiki/Software_design}
	 5: {https://en.wikipedia.org/wiki/Software_development}
	 6: {https://en.wikipedia.org/wiki/Data_modeling}
	 7: {https://en.wikipedia.org/wiki/Software_development_process}
	 8: {https://en.wikipedia.org/wiki/Requirements_analysis}
	 9: {https://en.wikipedia.org/wiki/Software_construction}
	 10: {https://en.wikipedia.org/wiki/Software_engineering}
	 11: {https://en.wikipedia.org/wiki/Software_testing}
	 12: {https://en.wikipedia.org/wiki/Debugging}
	 13: {https://en.wikipedia.org/wiki/Software_deployment}
	 14: {https://en.wikipedia.org/wiki/Software_maintenance}
	 15: {https://en.wikipedia.org/wiki/Agile_software_development}
	 16: {https://en.wikipedia.org/wiki/Cleanroom_software_engineering}
	 17: {https://en.wikipedia.org/wiki/Incremental_build_model}
	 18: {https://en.wikipedia.org/wiki/Software_prototyping}
	 19: {https://en.wikipedia.org/wiki/Spiral_model}
	 20: {https://en.wikipedia.org/wiki/V-model_(software_development)}
	 21: {https://en.wikipedia.org/wiki/Waterfall_model}
	 22: {https://en.wikipedia.org/wiki/Software_development_methodology}
	 23: {https://en.wikipedia.org/wiki/Adaptive_software_development}
	 24: {https://en.wikipedia.org/wiki/Disciplined_agile_delivery}
	 25: {https://en.wikipedia.org/wiki/DevOps}
	 26: {https://en.wikipedia.org/wiki/Dynamic_systems_development_method}
	 27: {https://en.wikipedia.org/wiki/Feature-driven_development}
	 28: {https://en.wikipedia.org/wiki/Iterative_and_incremental_development}
	 29: {https://en.wikipedia.org/wiki/Kanban_(development)}
	 30: {https://en.wikipedia.org/wiki/Lean_software_development}
	 31: {https://en.wikipedia.org/wiki/Scrum_(software_development)#Large-scale_Scrum}
	 32: {https://en.wikipedia.org/wiki/Model-driven_development}
	 33: {https://en.wikipedia.org/wiki/Microsoft_Solutions_Framework}
	 34: {https://en.wikipedia.org/wiki/Personal_software_process}
	 35: {https://en.wikipedia.org/wiki/Rapid_application_development}
	 36: {https://en.wikipedia.org/wiki/Rational_unified_process}
	 37: {https://en.wikipedia.org/wiki/Scaled_agile_framework}
	 38: {https://en.wikipedia.org/wiki/Scrum_(software_development)}
	 39: {https://en.wikipedia.org/wiki/SEMAT}
	 40: {https://en.wikipedia.org/wiki/Test-driven_development}
	 41: {https://en.wikipedia.org/wiki/Team_software_process}
	 42: {https://en.wikipedia.org/wiki/Unified_process}
	 43: {https://en.wikipedia.org/wiki/Extreme_programming}
	 44: {https://en.wikipedia.org/wiki/Software_configuration_management}
	 45: {https://en.wikipedia.org/wiki/Deployment_management#Computer_science}
	 46: {https://en.wikipedia.org/wiki/Software_documentation}
	 47: {https://en.wikipedia.org/wiki/Software_project_management}
	 48: {https://en.wikipedia.org/wiki/Software_quality_assurance}
	 49: {https://en.wikipedia.org/wiki/User_experience}
	 50: {https://en.wikipedia.org/wiki/Acceptance_test-driven_development}
	 51: {https://en.wikipedia.org/wiki/Behavior-driven_development}
	 52: {https://en.wikipedia.org/wiki/Extreme_programming_practices#Collective_code_ownership}
	 53: {https://en.wikipedia.org/wiki/Continuous_delivery}
	 54: {https://en.wikipedia.org/wiki/Continuous_integration}
	 55: {https://en.wikipedia.org/wiki/Domain-driven_design}
	 56: {https://en.wikipedia.org/wiki/Pair_programming}
	 57: {https://en.wikipedia.org/wiki/Specification_by_example}
	 58: {https://en.wikipedia.org/wiki/Stand-up_meeting}
	 59: {https://en.wikipedia.org/wiki/Test-driven_development}
	 60: {https://en.wikipedia.org/wiki/Programming_tool}
	 61: {https://en.wikipedia.org/wiki/Build_automation}
	 62: {https://en.wikipedia.org/wiki/Compiler}
	 63: {https://en.wikipedia.org/wiki/Debugger}
	 64: {https://en.wikipedia.org/wiki/Graphical_user_interface_builder}
	 65: {https://en.wikipedia.org/wiki/Integrated_development_environment}
	 66: {https://en.wikipedia.org/wiki/Infrastructure_as_code}
	 67: {https://en.wikipedia.org/wiki/Profiling_(computer_programming)}
	 68: {https://en.wikipedia.org/wiki/Application-release_automation}
	 69: {https://en.wikipedia.org/wiki/UML_tool}
	 70: {https://en.wikipedia.org/wiki/Capability_Maturity_Model_Integration}
	 71: {https://en.wikipedia.org/wiki/IEEE_Standards_Association}
	 72: {https://en.wikipedia.org/wiki/International_Requirements_Engineering_Board}
	 73: {https://en.wikipedia.org/wiki/ISO_9001}
	 74: {https://en.wikipedia.org/wiki/ISO/IEC_JTC_1/SC_7}
	 75: {https://en.wikipedia.org/wiki/ITIL}
	 76: {https://en.wikipedia.org/wiki/Object_Management_Group}
	 77: {https://en.wikipedia.org/wiki/Project_Management_Body_of_Knowledge}
	 78: {https://en.wikipedia.org/wiki/Software_Engineering_Body_of_Knowledge}
	 79: {https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence}
	 80: {https://en.wikipedia.org/wiki/Glossary_of_computer_science}
	 81: {https://en.wikipedia.org/wiki/Glossary_of_electrical_and_electronics_engineering}
	 82: {https://en.wikipedia.org/wiki/Outline_of_software_development}
	 83: {https://en.wikipedia.org/wiki/Software_system}
	 84: {https://en.wikipedia.org/wiki/Implementation}
	 85: {https://en.wikipedia.org/wiki/Goal}
	 86: {https://en.wikipedia.org/wiki/Software_architecture}
	 87: {https://en.wikipedia.org/wiki/Algorithm_design}
	 88: {https://en.wikipedia.org/wiki/Waterfall_model}
	 89: {https://en.wikipedia.org/wiki/Software_requirements}
	 90: {https://en.wikipedia.org/wiki/Computer_programming}
	 91: {https://en.wikipedia.org/wiki/Software_design_document}
	 92: {https://en.wikipedia.org/wiki/Computer_programming}
	 93: {https://en.wikipedia.org/wiki/Simulation}
	 94: {https://en.wikipedia.org/wiki/Prototype}
	 95: {https://en.wikipedia.org/wiki/Multidisciplinary}
	 96: {https://en.wikipedia.org/wiki/Subject-matter_expert}
	 97: {https://en.wikipedia.org/wiki/Software_requirements_analysis}
	 98: {https://en.wikipedia.org/wiki/Software_development_process}
	 99: {https://en.wikipedia.org/wiki/Specifications}
	 100: {https://en.wikipedia.org/wiki/Software_engineering}
	 101: {https://en.wikipedia.org/wiki/Software_framework}
	 102: {https://en.wikipedia.org/wiki/Design_patterns}
	 103: {https://en.wikipedia.org/wiki/Flow_chart}
	 104: {https://en.wikipedia.org/wiki/Use_case}
	 105: {https://en.wikipedia.org/wiki/Pseudocode}
	 106: {https://en.wikipedia.org/wiki/Unified_Modeling_Language}
	 107: {https://en.wikipedia.org/wiki/Fundamental_modeling_concepts}
	 108: {https://en.wikipedia.org/wiki/User_centered_design}
	 109: {https://en.wikipedia.org/wiki/User_experience_design}
	 110: {https://en.wikipedia.org/wiki/Storyboard}
	 111: {https://en.wikipedia.org/wiki/Documentation}
	 112: {https://en.wikipedia.org/wiki/Abstraction_(computer_science)}
	 113: {https://en.wikipedia.org/wiki/Program_refinement}
	 114: {https://en.wikipedia.org/wiki/Modularity}
	 115: {https://en.wikipedia.org/wiki/Software_Architecture}
	 116: {https://en.wikipedia.org/wiki/Data_Structure}
	 117: {https://en.wikipedia.org/wiki/Information_Hiding}
	 118: {https://en.wikipedia.org/wiki/Grady_Booch}
	 119: {https://en.wikipedia.org/wiki/Abstraction_(computer_science)}
	 120: {https://en.wikipedia.org/wiki/Encapsulation_(computer_programming)}
	 121: {https://en.wikipedia.org/wiki/Modularity}
	 122: {https://en.wikipedia.org/wiki/Hierarchy}
	 123: {https://en.wikipedia.org/wiki/Extensibility}
	 124: {https://en.wikipedia.org/wiki/Modularity}
	 125: {https://en.wikipedia.org/wiki/Fault-tolerance}
	 126: {https://en.wikipedia.org/wiki/Maintainability}
	 127: {https://en.wikipedia.org/wiki/Software_durability}
	 128: {https://en.wikipedia.org/wiki/Reusability}
	 129: {https://en.wikipedia.org/wiki/Fault-tolerant_system}
	 130: {https://en.wikipedia.org/wiki/Computer_security}
	 131: {https://en.wikipedia.org/wiki/Usability}
	 132: {https://en.wikipedia.org/wiki/User_interface}
	 133: {https://en.wikipedia.org/wiki/Computer_performance}
	 134: {https://en.wikipedia.org/wiki/Software_portability}
	 135: {https://en.wikipedia.org/wiki/Scalability}
	 136: {https://en.wikipedia.org/wiki/Marginal_cost}
	 137: {https://en.wikipedia.org/wiki/Serverless_computing}
	 138: {https://en.wikipedia.org/wiki/Modeling_language}
	 139: {https://en.wikipedia.org/wiki/Architecture_description_language}
	 140: {https://en.wikipedia.org/wiki/Software_architecture}
	 141: {https://en.wikipedia.org/wiki/Software_system}
	 142: {https://en.wikipedia.org/wiki/Business_Process_Modeling_Notation}
	 143: {https://en.wikipedia.org/wiki/Process_Modeling}
	 144: {https://en.wikipedia.org/wiki/EXPRESS_(data_modeling_language)}
	 145: {https://en.wikipedia.org/wiki/Data_modeling}
	 146: {https://en.wikipedia.org/wiki/Extended_Enterprise_Modeling_Language}
	 147: {https://en.wikipedia.org/wiki/Flowchart}
	 148: {https://en.wikipedia.org/wiki/Fundamental_Modeling_Concepts}
	 149: {https://en.wikipedia.org/wiki/IDEF}
	 150: {https://en.wikipedia.org/wiki/IDEF0}
	 151: {https://en.wikipedia.org/wiki/IDEF1X}
	 152: {https://en.wikipedia.org/wiki/IDEF5}
	 153: {https://en.wikipedia.org/wiki/Ontology_(information_science)}
	 154: {https://en.wikipedia.org/wiki/Jackson_Structured_Programming}
	 155: {https://en.wikipedia.org/wiki/Object-oriented}
	 156: {https://en.wikipedia.org/wiki/Formal_specification}
	 157: {https://en.wikipedia.org/wiki/Java_(programming_language)}
	 158: {https://en.wikipedia.org/wiki/C%2B%2B}
	 159: {https://en.wikipedia.org/wiki/C_Sharp_(programming_language)}
	 160: {https://en.wikipedia.org/wiki/Design_patterns}
	 161: {https://en.wikipedia.org/wiki/Unified_Modeling_Language}
	 162: {https://en.wikipedia.org/wiki/Profile_(UML)}
	 163: {https://en.wikipedia.org/wiki/Alloy_(specification_language)}
	 164: {https://en.wikipedia.org/wiki/Systems_Modeling_Language}
	 165: {https://en.wikipedia.org/wiki/General-purpose_modeling}
	 166: {https://en.wikipedia.org/wiki/Service-oriented_modeling#Service-oriented_modeling_framework}
	 167: {https://en.wikipedia.org/wiki/Design_pattern_(computer_science)}
	 168: {https://en.wikipedia.org/wiki/Edsger_W._Dijkstra}
	 169: {https://en.wikipedia.org/wiki/Donald_Knuth}
	 170: {https://en.wikipedia.org/wiki/TeX}
	 171: {https://en.wikipedia.org/wiki/Aspect-oriented_software_development}
	 172: {https://en.wikipedia.org/wiki/Design}
	 173: {https://en.wikipedia.org/wiki/Design_rationale}
	 174: {https://en.wikipedia.org/wiki/Graphic_design}
	 175: {https://en.wikipedia.org/wiki/Interaction_design}
	 176: {https://en.wikipedia.org/wiki/Icon_design}
	 177: {https://en.wikipedia.org/wiki/Outline_of_software}
	 178: {https://en.wikipedia.org/wiki/Outline_of_software_development}
	 179: {https://en.wikipedia.org/wiki/Outline_of_software_engineering}
	 180: {https://en.wikipedia.org/wiki/Search-based_software_engineering}
	 181: {https://en.wikipedia.org/wiki/Software_Design_Description}
	 182: {https://en.wikipedia.org/wiki/Software_development}
	 183: {https://en.wikipedia.org/wiki/User_experience}
	 184: {https://en.wikipedia.org/wiki/User_interface_design}
	 185: {https://en.wikipedia.org/wiki/Web_design}
	 186: {https://en.wikipedia.org/wiki/Zero_One_Infinity}
	 187: {https://en.wikipedia.org/wiki/John_Mylopoulos}
	 188: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 189: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 190: {https://en.wikipedia.org/wiki/S2CID_(identifier)}
	 191: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 192: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 193: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 194: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 195: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 196: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 197: {https://en.wikipedia.org/wiki/Edsger_Dijkstra}
	 198: {https://en.wikipedia.org/wiki/Donald_Knuth}
	 199: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 200: {https://en.wikipedia.org/wiki/Computer_science}
	 201: {https://en.wikipedia.org/wiki/ACM_Computing_Classification_System}
	 202: {https://en.wikipedia.org/wiki/Computer_hardware}
	 203: {https://en.wikipedia.org/wiki/Printed_circuit_board}
	 204: {https://en.wikipedia.org/wiki/Peripheral}
	 205: {https://en.wikipedia.org/wiki/Integrated_circuit}
	 206: {https://en.wikipedia.org/wiki/Very-large-scale_integration}
	 207: {https://en.wikipedia.org/wiki/System_on_a_chip}
	 208: {https://en.wikipedia.org/wiki/Green_computing}
	 209: {https://en.wikipedia.org/wiki/Electronic_design_automation}
	 210: {https://en.wikipedia.org/wiki/Hardware_acceleration}
	 211: {https://en.wikipedia.org/wiki/Processor_(computing)}
	 212: {https://en.wikipedia.org/wiki/List_of_computer_size_categories}
	 213: {https://en.wikipedia.org/wiki/Form_factor_(design)}
	 214: {https://en.wikipedia.org/wiki/Computer_architecture}
	 215: {https://en.wikipedia.org/wiki/Computational_complexity}
	 216: {https://en.wikipedia.org/wiki/Dependability}
	 217: {https://en.wikipedia.org/wiki/Embedded_system}
	 218: {https://en.wikipedia.org/wiki/Real-time_computing}
	 219: {https://en.wikipedia.org/wiki/Cyber-physical_system}
	 220: {https://en.wikipedia.org/wiki/Fault_tolerance}
	 221: {https://en.wikipedia.org/wiki/Wireless_sensor_network}
	 222: {https://en.wikipedia.org/wiki/Computer_network}
	 223: {https://en.wikipedia.org/wiki/Network_architecture}
	 224: {https://en.wikipedia.org/wiki/Communication_protocol}
	 225: {https://en.wikipedia.org/wiki/Networking_hardware}
	 226: {https://en.wikipedia.org/wiki/Network_scheduler}
	 227: {https://en.wikipedia.org/wiki/Network_performance}
	 228: {https://en.wikipedia.org/wiki/Network_service}
	 229: {https://en.wikipedia.org/wiki/Interpreter_(computing)}
	 230: {https://en.wikipedia.org/wiki/Middleware}
	 231: {https://en.wikipedia.org/wiki/Virtual_machine}
	 232: {https://en.wikipedia.org/wiki/Operating_system}
	 233: {https://en.wikipedia.org/wiki/Software_quality}
	 234: {https://en.wikipedia.org/wiki/Programming_language_theory}
	 235: {https://en.wikipedia.org/wiki/Programming_tool}
	 236: {https://en.wikipedia.org/wiki/Programming_paradigm}
	 237: {https://en.wikipedia.org/wiki/Programming_language}
	 238: {https://en.wikipedia.org/wiki/Compiler_construction}
	 239: {https://en.wikipedia.org/wiki/Domain-specific_language}
	 240: {https://en.wikipedia.org/wiki/Modeling_language}
	 241: {https://en.wikipedia.org/wiki/Software_framework}
	 242: {https://en.wikipedia.org/wiki/Integrated_development_environment}
	 243: {https://en.wikipedia.org/wiki/Software_configuration_management}
	 244: {https://en.wikipedia.org/wiki/Library_(computing)}
	 245: {https://en.wikipedia.org/wiki/Software_repository}
	 246: {https://en.wikipedia.org/wiki/Software_development}
	 247: {https://en.wikipedia.org/wiki/Control_flow}
	 248: {https://en.wikipedia.org/wiki/Software_development_process}
	 249: {https://en.wikipedia.org/wiki/Requirements_analysis}
	 250: {https://en.wikipedia.org/wiki/Software_construction}
	 251: {https://en.wikipedia.org/wiki/Software_deployment}
	 252: {https://en.wikipedia.org/wiki/Software_engineering}
	 253: {https://en.wikipedia.org/wiki/Software_maintenance}
	 254: {https://en.wikipedia.org/wiki/Programming_team}
	 255: {https://en.wikipedia.org/wiki/Open-source_software}
	 256: {https://en.wikipedia.org/wiki/Theory_of_computation}
	 257: {https://en.wikipedia.org/wiki/Model_of_computation}
	 258: {https://en.wikipedia.org/wiki/Stochastic_computing}
	 259: {https://en.wikipedia.org/wiki/Formal_language}
	 260: {https://en.wikipedia.org/wiki/Automata_theory}
	 261: {https://en.wikipedia.org/wiki/Computability_theory}
	 262: {https://en.wikipedia.org/wiki/Computational_complexity_theory}
	 263: {https://en.wikipedia.org/wiki/Logic_in_computer_science}
	 264: {https://en.wikipedia.org/wiki/Semantics_(computer_science)}
	 265: {https://en.wikipedia.org/wiki/Algorithm}
	 266: {https://en.wikipedia.org/wiki/Algorithm_design}
	 267: {https://en.wikipedia.org/wiki/Analysis_of_algorithms}
	 268: {https://en.wikipedia.org/wiki/Algorithmic_efficiency}
	 269: {https://en.wikipedia.org/wiki/Randomized_algorithm}
	 270: {https://en.wikipedia.org/wiki/Computational_geometry}
	 271: {https://en.wikipedia.org/wiki/Computing}
	 272: {https://en.wikipedia.org/wiki/Discrete_mathematics}
	 273: {https://en.wikipedia.org/wiki/Probability}
	 274: {https://en.wikipedia.org/wiki/Statistics}
	 275: {https://en.wikipedia.org/wiki/Mathematical_software}
	 276: {https://en.wikipedia.org/wiki/Information_theory}
	 277: {https://en.wikipedia.org/wiki/Mathematical_analysis}
	 278: {https://en.wikipedia.org/wiki/Numerical_analysis}
	 279: {https://en.wikipedia.org/wiki/Theoretical_computer_science}
	 280: {https://en.wikipedia.org/wiki/Information_system}
	 281: {https://en.wikipedia.org/wiki/Database}
	 282: {https://en.wikipedia.org/wiki/Computer_data_storage}
	 283: {https://en.wikipedia.org/wiki/Enterprise_information_system}
	 284: {https://en.wikipedia.org/wiki/Social_software}
	 285: {https://en.wikipedia.org/wiki/Geographic_information_system}
	 286: {https://en.wikipedia.org/wiki/Decision_support_system}
	 287: {https://en.wikipedia.org/wiki/Industrial_process_control}
	 288: {https://en.wikipedia.org/wiki/Multimedia_database}
	 289: {https://en.wikipedia.org/wiki/Data_mining}
	 290: {https://en.wikipedia.org/wiki/Digital_library}
	 291: {https://en.wikipedia.org/wiki/Computing_platform}
	 292: {https://en.wikipedia.org/wiki/Digital_marketing}
	 293: {https://en.wikipedia.org/wiki/World_Wide_Web}
	 294: {https://en.wikipedia.org/wiki/Information_retrieval}
	 295: {https://en.wikipedia.org/wiki/Computer_security}
	 296: {https://en.wikipedia.org/wiki/Cryptography}
	 297: {https://en.wikipedia.org/wiki/Formal_methods}
	 298: {https://en.wikipedia.org/wiki/Security_hacker}
	 299: {https://en.wikipedia.org/wiki/Security_service_(telecommunication)}
	 300: {https://en.wikipedia.org/wiki/Intrusion_detection_system}
	 301: {https://en.wikipedia.org/wiki/Hardware_security}
	 302: {https://en.wikipedia.org/wiki/Network_security}
	 303: {https://en.wikipedia.org/wiki/Information_security}
	 304: {https://en.wikipedia.org/wiki/Application_security}
	 305: {https://en.wikipedia.org/wiki/Interaction_design}
	 306: {https://en.wikipedia.org/wiki/Augmented_reality}
	 307: {https://en.wikipedia.org/wiki/Virtual_reality}
	 308: {https://en.wikipedia.org/wiki/Social_computing}
	 309: {https://en.wikipedia.org/wiki/Ubiquitous_computing}
	 310: {https://en.wikipedia.org/wiki/Visualization_(graphics)}
	 311: {https://en.wikipedia.org/wiki/Computer_accessibility}
	 312: {https://en.wikipedia.org/wiki/Human%E2%80%93computer_interaction}
	 313: {https://en.wikipedia.org/wiki/Mobile_computing}
	 314: {https://en.wikipedia.org/wiki/Concurrency_(computer_science)}
	 315: {https://en.wikipedia.org/wiki/Concurrent_computing}
	 316: {https://en.wikipedia.org/wiki/Parallel_computing}
	 317: {https://en.wikipedia.org/wiki/Distributed_computing}
	 318: {https://en.wikipedia.org/wiki/Multithreading_(computer_architecture)}
	 319: {https://en.wikipedia.org/wiki/Multiprocessing}
	 320: {https://en.wikipedia.org/wiki/Artificial_intelligence}
	 321: {https://en.wikipedia.org/wiki/Natural_language_processing}
	 322: {https://en.wikipedia.org/wiki/Knowledge_representation_and_reasoning}
	 323: {https://en.wikipedia.org/wiki/Computer_vision}
	 324: {https://en.wikipedia.org/wiki/Automated_planning_and_scheduling}
	 325: {https://en.wikipedia.org/wiki/Mathematical_optimization}
	 326: {https://en.wikipedia.org/wiki/Control_theory}
	 327: {https://en.wikipedia.org/wiki/Philosophy_of_artificial_intelligence}
	 328: {https://en.wikipedia.org/wiki/Distributed_artificial_intelligence}
	 329: {https://en.wikipedia.org/wiki/Machine_learning}
	 330: {https://en.wikipedia.org/wiki/Supervised_learning}
	 331: {https://en.wikipedia.org/wiki/Unsupervised_learning}
	 332: {https://en.wikipedia.org/wiki/Reinforcement_learning}
	 333: {https://en.wikipedia.org/wiki/Multi-task_learning}
	 334: {https://en.wikipedia.org/wiki/Cross-validation_(statistics)}
	 335: {https://en.wikipedia.org/wiki/Computer_graphics}
	 336: {https://en.wikipedia.org/wiki/Computer_animation}
	 337: {https://en.wikipedia.org/wiki/Rendering_(computer_graphics)}
	 338: {https://en.wikipedia.org/wiki/Photograph_manipulation}
	 339: {https://en.wikipedia.org/wiki/Graphics_processing_unit}
	 340: {https://en.wikipedia.org/wiki/Image_compression}
	 341: {https://en.wikipedia.org/wiki/Solid_modeling}
	 342: {https://en.wikipedia.org/wiki/Quantum_computing}
	 343: {https://en.wikipedia.org/wiki/E-commerce}
	 344: {https://en.wikipedia.org/wiki/Enterprise_software}
	 345: {https://en.wikipedia.org/wiki/Computational_mathematics}
	 346: {https://en.wikipedia.org/wiki/Computational_physics}
	 347: {https://en.wikipedia.org/wiki/Computational_chemistry}
	 348: {https://en.wikipedia.org/wiki/Computational_biology}
	 349: {https://en.wikipedia.org/wiki/Computational_social_science}
	 350: {https://en.wikipedia.org/wiki/Computational_engineering}
	 351: {https://en.wikipedia.org/wiki/Health_informatics}
	 352: {https://en.wikipedia.org/wiki/Digital_art}
	 353: {https://en.wikipedia.org/wiki/Electronic_publishing}
	 354: {https://en.wikipedia.org/wiki/Cyberwarfare}
	 355: {https://en.wikipedia.org/wiki/Electronic_voting}
	 356: {https://en.wikipedia.org/wiki/Video_game}
	 357: {https://en.wikipedia.org/wiki/Word_processor}
	 358: {https://en.wikipedia.org/wiki/Operations_research}
	 359: {https://en.wikipedia.org/wiki/Educational_technology}
	 360: {https://en.wikipedia.org/wiki/Document_management_system}
	 361: {https://en.wikipedia.org/wiki/Outline_of_computer_science}
	 362: {https://en.wikipedia.org/wiki/Software_engineering}
	 363: {https://en.wikipedia.org/wiki/Computer_programming}
	 364: {https://en.wikipedia.org/wiki/DevOps}
	 365: {https://en.wikipedia.org/wiki/Empirical_software_engineering}
	 366: {https://en.wikipedia.org/wiki/Experimental_software_engineering}
	 367: {https://en.wikipedia.org/wiki/Formal_methods}
	 368: {https://en.wikipedia.org/wiki/Requirements_engineering}
	 369: {https://en.wikipedia.org/wiki/Search-based_software_engineering}
	 370: {https://en.wikipedia.org/wiki/Site_reliability_engineering}
	 371: {https://en.wikipedia.org/wiki/Social_software_engineering}
	 372: {https://en.wikipedia.org/wiki/Software_deployment}
	 373: {https://en.wikipedia.org/wiki/Software_maintenance}
	 374: {https://en.wikipedia.org/wiki/Software_testing}
	 375: {https://en.wikipedia.org/wiki/Systems_analysis}
	 376: {https://en.wikipedia.org/wiki/Abstraction_(computer_science)}
	 377: {https://en.wikipedia.org/wiki/CI/CD}
	 378: {https://en.wikipedia.org/wiki/Computer_compatibility}
	 379: {https://en.wikipedia.org/wiki/Backward_compatibility}
	 380: {https://en.wikipedia.org/wiki/Compatibility_layer}
	 381: {https://en.wikipedia.org/wiki/Compatibility_mode}
	 382: {https://en.wikipedia.org/wiki/Forward_compatibility}
	 383: {https://en.wikipedia.org/wiki/Software_incompatibility}
	 384: {https://en.wikipedia.org/wiki/Component-based_software_engineering}
	 385: {https://en.wikipedia.org/wiki/Data_modeling}
	 386: {https://en.wikipedia.org/wiki/Enterprise_architecture}
	 387: {https://en.wikipedia.org/wiki/Functional_specification}
	 388: {https://en.wikipedia.org/wiki/Modeling_language}
	 389: {https://en.wikipedia.org/wiki/Programming_paradigm}
	 390: {https://en.wikipedia.org/wiki/Software}
	 391: {https://en.wikipedia.org/wiki/Software_archaeology}
	 392: {https://en.wikipedia.org/wiki/Software_architecture}
	 393: {https://en.wikipedia.org/wiki/Software_configuration_management}
	 394: {https://en.wikipedia.org/wiki/Software_development_process}
	 395: {https://en.wikipedia.org/wiki/Software_quality}
	 396: {https://en.wikipedia.org/wiki/Software_quality_assurance}
	 397: {https://en.wikipedia.org/wiki/Software_system}
	 398: {https://en.wikipedia.org/wiki/Software_verification_and_validation}
	 399: {https://en.wikipedia.org/wiki/Structured_analysis}
	 400: {https://en.wikipedia.org/wiki/Essential_systems_analysis}
	 401: {https://en.wikipedia.org/wiki/Agile_software_development}
	 402: {https://en.wikipedia.org/wiki/Aspect-oriented_programming}
	 403: {https://en.wikipedia.org/wiki/Object-oriented_programming}
	 404: {https://en.wikipedia.org/wiki/Ontology_(information_science)}
	 405: {https://en.wikipedia.org/wiki/Systems_development_life_cycle}
	 406: {https://en.wikipedia.org/wiki/Service-oriented_architecture}
	 407: {https://en.wikipedia.org/wiki/Agile_software_development}
	 408: {https://en.wikipedia.org/wiki/Enterprise_unified_process}
	 409: {https://en.wikipedia.org/wiki/Executable_UML}
	 410: {https://en.wikipedia.org/wiki/Incremental_build_model}
	 411: {https://en.wikipedia.org/wiki/Iterative_and_incremental_development}
	 412: {https://en.wikipedia.org/wiki/Software_prototyping}
	 413: {https://en.wikipedia.org/wiki/Rapid_application_development}
	 414: {https://en.wikipedia.org/wiki/Scrum_(software_development)}
	 415: {https://en.wikipedia.org/wiki/Spiral_model}
	 416: {https://en.wikipedia.org/wiki/Unified_process}
	 417: {https://en.wikipedia.org/wiki/V-model_(software_development)}
	 418: {https://en.wikipedia.org/wiki/Waterfall_model}
	 419: {https://en.wikipedia.org/wiki/Extreme_programming}
	 420: {https://en.wikipedia.org/wiki/Model-driven_engineering}
	 421: {https://en.wikipedia.org/wiki/Round-trip_engineering}
	 422: {https://en.wikipedia.org/wiki/Capability_Maturity_Model_Integration}
	 423: {https://en.wikipedia.org/wiki/Data_model}
	 424: {https://en.wikipedia.org/wiki/Entity%E2%80%93relationship_model}
	 425: {https://en.wikipedia.org/wiki/Function_model}
	 426: {https://en.wikipedia.org/wiki/Information_model}
	 427: {https://en.wikipedia.org/wiki/Metamodeling}
	 428: {https://en.wikipedia.org/wiki/Object_model}
	 429: {https://en.wikipedia.org/wiki/ISO/IEC_15504}
	 430: {https://en.wikipedia.org/wiki/Systems_modeling}
	 431: {https://en.wikipedia.org/wiki/View_model}
	 432: {https://en.wikipedia.org/wiki/IDEF}
	 433: {https://en.wikipedia.org/wiki/Systems_modeling_language}
	 434: {https://en.wikipedia.org/wiki/Unified_Modeling_Language}
	 435: {https://en.wikipedia.org/wiki/Universal_Systems_Language}
	 436: {https://en.wikipedia.org/wiki/Computer_engineering}
	 437: {https://en.wikipedia.org/wiki/Computer_science}
	 438: {https://en.wikipedia.org/wiki/Information_science}
	 439: {https://en.wikipedia.org/wiki/Project_management}
	 440: {https://en.wikipedia.org/wiki/Risk_management}
	 441: {https://en.wikipedia.org/wiki/Systems_engineering}
	 442: {https://en.wikipedia.org/wiki/Design}
	 443: {https://en.wikipedia.org/wiki/Outline_of_design}
	 444: {https://en.wikipedia.org/wiki/Designer}
	 445: {https://en.wikipedia.org/wiki/Communication_design}
	 446: {https://en.wikipedia.org/wiki/Advertising}
	 447: {https://en.wikipedia.org/wiki/Book_design}
	 448: {https://en.wikipedia.org/wiki/Brand}
	 449: {https://en.wikipedia.org/wiki/Exhibit_design}
	 450: {https://en.wikipedia.org/wiki/Film_title_design}
	 451: {https://en.wikipedia.org/wiki/Graphic_design}
	 452: {https://en.wikipedia.org/wiki/Motion_graphic_design}
	 453: {https://en.wikipedia.org/wiki/Postage_stamp_design}
	 454: {https://en.wikipedia.org/wiki/Print_design}
	 455: {https://en.wikipedia.org/wiki/Illustration}
	 456: {https://en.wikipedia.org/wiki/Information_design}
	 457: {https://en.wikipedia.org/wiki/Instructional_design}
	 458: {https://en.wikipedia.org/wiki/News_design}
	 459: {https://en.wikipedia.org/wiki/Photography}
	 460: {https://en.wikipedia.org/wiki/Retail_design}
	 461: {https://en.wikipedia.org/wiki/Signage}
	 462: {https://en.wikipedia.org/wiki/Traffic_sign_design}
	 463: {https://en.wikipedia.org/wiki/Typography}
	 464: {https://en.wikipedia.org/wiki/Type_design}
	 465: {https://en.wikipedia.org/wiki/Video_design}
	 466: {https://en.wikipedia.org/wiki/Visual_merchandising}
	 467: {https://en.wikipedia.org/wiki/Environmental_design}
	 468: {https://en.wikipedia.org/wiki/Architecture}
	 469: {https://en.wikipedia.org/wiki/Architectural_lighting_design}
	 470: {https://en.wikipedia.org/wiki/Building_design}
	 471: {https://en.wikipedia.org/wiki/Passive_solar_building_design}
	 472: {https://en.wikipedia.org/wiki/Ecological_design}
	 473: {https://en.wikipedia.org/wiki/Environmental_impact_design}
	 474: {https://en.wikipedia.org/wiki/Garden_design}
	 475: {https://en.wikipedia.org/wiki/Computer-aided_garden_design}
	 476: {https://en.wikipedia.org/wiki/Healthy_community_design}
	 477: {https://en.wikipedia.org/wiki/Hotel_design}
	 478: {https://en.wikipedia.org/wiki/Interior_architecture}
	 479: {https://en.wikipedia.org/wiki/Interior_design}
	 480: {https://en.wikipedia.org/wiki/Experiential_interior_design}
	 481: {https://en.wikipedia.org/wiki/Keyline_design}
	 482: {https://en.wikipedia.org/wiki/Landscape_architecture}
	 483: {https://en.wikipedia.org/wiki/Sustainable_landscape_architecture}
	 484: {https://en.wikipedia.org/wiki/Landscape_design}
	 485: {https://en.wikipedia.org/wiki/Spatial_design}
	 486: {https://en.wikipedia.org/wiki/Urban_design}
	 487: {https://en.wikipedia.org/wiki/Industrial_design}
	 488: {https://en.wikipedia.org/wiki/Automotive_design}
	 489: {https://en.wikipedia.org/wiki/Automotive_suspension_design_process}
	 490: {https://en.wikipedia.org/wiki/CMF_design}
	 491: {https://en.wikipedia.org/wiki/Corrugated_box_design}
	 492: {https://en.wikipedia.org/wiki/Electric_guitar_design}
	 493: {https://en.wikipedia.org/wiki/Furniture}
	 494: {https://en.wikipedia.org/wiki/Sustainable_furniture_design}
	 495: {https://en.wikipedia.org/wiki/Hardware_interface_design}
	 496: {https://en.wikipedia.org/wiki/Motorcycle_design}
	 497: {https://en.wikipedia.org/wiki/Packaging_and_labeling}
	 498: {https://en.wikipedia.org/wiki/Photographic_lens_design}
	 499: {https://en.wikipedia.org/wiki/Product_design}
	 500: {https://en.wikipedia.org/wiki/Production_designer}
	 501: {https://en.wikipedia.org/wiki/Sensory_design}
	 502: {https://en.wikipedia.org/wiki/Service_design}
	 503: {https://en.wikipedia.org/wiki/Interaction_design}
	 504: {https://en.wikipedia.org/wiki/Experience_design}
	 505: {https://en.wikipedia.org/wiki/Employee_experience_design}
	 506: {https://en.wikipedia.org/wiki/Game_design}
	 507: {https://en.wikipedia.org/wiki/Level_(video_games)}
	 508: {https://en.wikipedia.org/wiki/Video_game_design}
	 509: {https://en.wikipedia.org/wiki/Hardware_interface_design}
	 510: {https://en.wikipedia.org/wiki/Icon_design}
	 511: {https://en.wikipedia.org/wiki/Immersive_design}
	 512: {https://en.wikipedia.org/wiki/Information_design}
	 513: {https://en.wikipedia.org/wiki/Interactive_design}
	 514: {https://en.wikipedia.org/wiki/Sonic_interaction_design}
	 515: {https://en.wikipedia.org/wiki/User_experience_design}
	 516: {https://en.wikipedia.org/wiki/User_interface_design}
	 517: {https://en.wikipedia.org/wiki/Web_design}
	 518: {https://en.wikipedia.org/wiki/Applied_arts}
	 519: {https://en.wikipedia.org/wiki/Public_art}
	 520: {https://en.wikipedia.org/wiki/Ceramic_art}
	 521: {https://en.wikipedia.org/wiki/Glass_art}
	 522: {https://en.wikipedia.org/wiki/Fashion_design}
	 523: {https://en.wikipedia.org/wiki/Costume_design}
	 524: {https://en.wikipedia.org/wiki/Jewellery_design}
	 525: {https://en.wikipedia.org/wiki/Floral_design}
	 526: {https://en.wikipedia.org/wiki/Game_art_design}
	 527: {https://en.wikipedia.org/wiki/Property_designer}
	 528: {https://en.wikipedia.org/wiki/Scenic_design}
	 529: {https://en.wikipedia.org/wiki/Sound_design}
	 530: {https://en.wikipedia.org/wiki/Lighting_design}
	 531: {https://en.wikipedia.org/wiki/Textile_design}
	 532: {https://en.wikipedia.org/wiki/Engineering}
	 533: {https://en.wikipedia.org/wiki/Algorithm_design}
	 534: {https://en.wikipedia.org/wiki/Behavioural_design}
	 535: {https://en.wikipedia.org/wiki/Boiler_design}
	 536: {https://en.wikipedia.org/wiki/Database_design}
	 537: {https://en.wikipedia.org/wiki/Drug_design}
	 538: {https://en.wikipedia.org/wiki/Electrical_system_design}
	 539: {https://en.wikipedia.org/wiki/Design_of_experiments}
	 540: {https://en.wikipedia.org/wiki/Filter_design}
	 541: {https://en.wikipedia.org/wiki/Geometric_design}
	 542: {https://en.wikipedia.org/wiki/Work_design}
	 543: {https://en.wikipedia.org/wiki/Integrated_circuit_design}
	 544: {https://en.wikipedia.org/wiki/Circuit_design}
	 545: {https://en.wikipedia.org/wiki/Physical_design_(electronics)}
	 546: {https://en.wikipedia.org/wiki/Power_network_design_(IC)}
	 547: {https://en.wikipedia.org/wiki/Mechanism_design}
	 548: {https://en.wikipedia.org/wiki/Nuclear_weapon_design}
	 549: {https://en.wikipedia.org/wiki/Nucleic_acid_design}
	 550: {https://en.wikipedia.org/wiki/Organizational_architecture}
	 551: {https://en.wikipedia.org/wiki/Process_design}
	 552: {https://en.wikipedia.org/wiki/Processor_design}
	 553: {https://en.wikipedia.org/wiki/Protein_design}
	 554: {https://en.wikipedia.org/wiki/Research_design}
	 555: {https://en.wikipedia.org/wiki/Social_design}
	 556: {https://en.wikipedia.org/wiki/Spacecraft_design}
	 557: {https://en.wikipedia.org/wiki/Strategic_design}
	 558: {https://en.wikipedia.org/wiki/Systems_design}
	 559: {https://en.wikipedia.org/wiki/Test_design}
	 560: {https://en.wikipedia.org/wiki/Active_design}
	 561: {https://en.wikipedia.org/wiki/Activity-centered_design}
	 562: {https://en.wikipedia.org/wiki/Adaptive_web_design}
	 563: {https://en.wikipedia.org/wiki/Affective_design}
	 564: {https://en.wikipedia.org/wiki/Brainstorming}
	 565: {https://en.wikipedia.org/wiki/Design_by_committee}
	 566: {https://en.wikipedia.org/wiki/Design_by_contract}
	 567: {https://en.wikipedia.org/wiki/C-K_theory}
	 568: {https://en.wikipedia.org/wiki/Design_closure}
	 569: {https://en.wikipedia.org/wiki/Configuration_design}
	 570: {https://en.wikipedia.org/wiki/Contextual_design}
	 571: {https://en.wikipedia.org/wiki/Continuous_design}
	 572: {https://en.wikipedia.org/wiki/Cradle-to-cradle_design}
	 573: {https://en.wikipedia.org/wiki/Creative_problem-solving}
	 574: {https://en.wikipedia.org/wiki/Creativity_techniques}
	 575: {https://en.wikipedia.org/wiki/Critical_design}
	 576: {https://en.wikipedia.org/wiki/Design_fiction}
	 577: {https://en.wikipedia.org/wiki/Defensive_design}
	 578: {https://en.wikipedia.org/wiki/Design%E2%80%93bid%E2%80%93build}
	 579: {https://en.wikipedia.org/wiki/Design%E2%80%93build}
	 580: {https://en.wikipedia.org/wiki/Architect-led_design%E2%80%93build}
	 581: {https://en.wikipedia.org/wiki/Diffuse_design}
	 582: {https://en.wikipedia.org/wiki/Domain-driven_design}
	 583: {https://en.wikipedia.org/wiki/Ecological_design}
	 584: {https://en.wikipedia.org/wiki/Energy_neutral_design}
	 585: {https://en.wikipedia.org/wiki/Engineering_design_process}
	 586: {https://en.wikipedia.org/wiki/Probabilistic_design}
	 587: {https://en.wikipedia.org/wiki/Ergonomic_design}
	 588: {https://en.wikipedia.org/wiki/Error-tolerant_design}
	 589: {https://en.wikipedia.org/wiki/Evidence-based_design}
	 590: {https://en.wikipedia.org/wiki/Fault-tolerant_design}
	 591: {https://en.wikipedia.org/wiki/Feminist_design}
	 592: {https://en.wikipedia.org/wiki/Design_for_assembly}
	 593: {https://en.wikipedia.org/wiki/Behavioural_design}
	 594: {https://en.wikipedia.org/wiki/Design_for_manufacturability}
	 595: {https://en.wikipedia.org/wiki/Design_for_Six_Sigma}
	 596: {https://en.wikipedia.org/wiki/Design_for_testing}
	 597: {https://en.wikipedia.org/wiki/Design_for_the_environment}
	 598: {https://en.wikipedia.org/wiki/Design_for_X}
	 599: {https://en.wikipedia.org/wiki/Framework-oriented_design}
	 600: {https://en.wikipedia.org/wiki/Functional_design}
	 601: {https://en.wikipedia.org/wiki/Generative_design}
	 602: {https://en.wikipedia.org/wiki/Geodesign}
	 603: {https://en.wikipedia.org/wiki/Human-centered_design}
	 604: {https://en.wikipedia.org/wiki/High-level_design}
	 605: {https://en.wikipedia.org/wiki/Hostile_design}
	 606: {https://en.wikipedia.org/wiki/Inclusive_design}
	 607: {https://en.wikipedia.org/wiki/Integrated_design}
	 608: {https://en.wikipedia.org/wiki/Integrated_topside_design}
	 609: {https://en.wikipedia.org/wiki/Intelligence-based_design}
	 610: {https://en.wikipedia.org/wiki/Iterative_design}
	 611: {https://en.wikipedia.org/wiki/KISS_principle}
	 612: {https://en.wikipedia.org/wiki/Low-level_design}
	 613: {https://en.wikipedia.org/wiki/Metadesign}
	 614: {https://en.wikipedia.org/wiki/Mind_map}
	 615: {https://en.wikipedia.org/wiki/Modular_design}
	 616: {https://en.wikipedia.org/wiki/New_Wave_(design)}
	 617: {https://en.wikipedia.org/wiki/Object-oriented_design}
	 618: {https://en.wikipedia.org/wiki/Open-design_movement}
	 619: {https://en.wikipedia.org/wiki/Overengineering}
	 620: {https://en.wikipedia.org/wiki/Parametric_design}
	 621: {https://en.wikipedia.org/wiki/Participatory_design}
	 622: {https://en.wikipedia.org/wiki/Platform-based_design}
	 623: {https://en.wikipedia.org/wiki/Policy-based_design}
	 624: {https://en.wikipedia.org/wiki/Prevention_through_design}
	 625: {https://en.wikipedia.org/wiki/Process-centered_design}
	 626: {https://en.wikipedia.org/wiki/Public_interest_design}
	 627: {https://en.wikipedia.org/wiki/Opinion_poll}
	 628: {https://en.wikipedia.org/wiki/Public_opinion}
	 629: {https://en.wikipedia.org/wiki/Rational_design}
	 630: {https://en.wikipedia.org/wiki/Regenerative_design}
	 631: {https://en.wikipedia.org/wiki/Reliability_engineering}
	 632: {https://en.wikipedia.org/wiki/Research-based_design}
	 633: {https://en.wikipedia.org/wiki/Responsibility-driven_design}
	 634: {https://en.wikipedia.org/wiki/Responsive_web_design}
	 635: {https://en.wikipedia.org/wiki/Safe-life_design}
	 636: {https://en.wikipedia.org/wiki/Speculative_design}
	 637: {https://en.wikipedia.org/wiki/Sustainable_design}
	 638: {https://en.wikipedia.org/wiki/Systemic_design}
	 639: {https://en.wikipedia.org/wiki/Systems-oriented_design}
	 640: {https://en.wikipedia.org/wiki/Tableless_web_design}
	 641: {https://en.wikipedia.org/wiki/Theory_of_constraints}
	 642: {https://en.wikipedia.org/wiki/Top-down_and_bottom-up_design}
	 643: {https://en.wikipedia.org/wiki/Transformation_design}
	 644: {https://en.wikipedia.org/wiki/Transgenerational_design}
	 645: {https://en.wikipedia.org/wiki/TRIZ}
	 646: {https://en.wikipedia.org/wiki/Universal_design}
	 647: {https://en.wikipedia.org/wiki/Design_for_All_(in_ICT)}
	 648: {https://en.wikipedia.org/wiki/Usage-centered_design}
	 649: {https://en.wikipedia.org/wiki/Use-centered_design}
	 650: {https://en.wikipedia.org/wiki/User-centered_design}
	 651: {https://en.wikipedia.org/wiki/Empathic_design}
	 652: {https://en.wikipedia.org/wiki/User_innovation}
	 653: {https://en.wikipedia.org/wiki/Value-driven_design}
	 654: {https://en.wikipedia.org/wiki/Value_sensitive_design}
	 655: {https://en.wikipedia.org/wiki/Privacy_by_design}
	 656: {https://en.wikipedia.org/wiki/Quality_by_design}
	 657: {https://en.wikipedia.org/wiki/Secure_by_design}
	 658: {https://en.wikipedia.org/wiki/Design_choice}
	 659: {https://en.wikipedia.org/wiki/Design_computing}
	 660: {https://en.wikipedia.org/wiki/Design_controls}
	 661: {https://en.wikipedia.org/wiki/Design_culture}
	 662: {https://en.wikipedia.org/wiki/Design_flow_(EDA)}
	 663: {https://en.wikipedia.org/wiki/Design_justice}
	 664: {https://en.wikipedia.org/wiki/Design_leadership}
	 665: {https://en.wikipedia.org/wiki/Design_management}
	 666: {https://en.wikipedia.org/wiki/Design_marker}
	 667: {https://en.wikipedia.org/wiki/Design_methods}
	 668: {https://en.wikipedia.org/wiki/Design_pattern}
	 669: {https://en.wikipedia.org/wiki/Design_research}
	 670: {https://en.wikipedia.org/wiki/Design_science}
	 671: {https://en.wikipedia.org/wiki/Design_sprint}
	 672: {https://en.wikipedia.org/wiki/Design_strategy}
	 673: {https://en.wikipedia.org/wiki/Design_theory}
	 674: {https://en.wikipedia.org/wiki/Design_thinking}
	 675: {https://en.wikipedia.org/wiki/Design_tool}
	 676: {https://en.wikipedia.org/wiki/Algorithms-Aided_Design}
	 677: {https://en.wikipedia.org/wiki/Architectural_model}
	 678: {https://en.wikipedia.org/wiki/Blueprint}
	 679: {https://en.wikipedia.org/wiki/Comprehensive_layout}
	 680: {https://en.wikipedia.org/wiki/Computer-aided_design}
	 681: {https://en.wikipedia.org/wiki/Computer-aided_industrial_design}
	 682: {https://en.wikipedia.org/wiki/Virtual_home_design_software}
	 683: {https://en.wikipedia.org/wiki/Computer-automated_design}
	 684: {https://en.wikipedia.org/wiki/Design_quality_indicator}
	 685: {https://en.wikipedia.org/wiki/Electronic_design_automation}
	 686: {https://en.wikipedia.org/wiki/Flowchart}
	 687: {https://en.wikipedia.org/wiki/Mockup}
	 688: {https://en.wikipedia.org/wiki/Design_specification}
	 689: {https://en.wikipedia.org/wiki/Design_system}
	 690: {https://en.wikipedia.org/wiki/Prototype}
	 691: {https://en.wikipedia.org/wiki/Sketch_(drawing)}
	 692: {https://en.wikipedia.org/wiki/Storyboard}
	 693: {https://en.wikipedia.org/wiki/Technical_drawing}
	 694: {https://en.wikipedia.org/wiki/HTML_editor}
	 695: {https://en.wikipedia.org/wiki/Website_wireframe}
	 696: {https://en.wikipedia.org/wiki/Clean-room_design}
	 697: {https://en.wikipedia.org/wiki/Community_design}
	 698: {https://en.wikipedia.org/wiki/Design_around}
	 699: {https://en.wikipedia.org/wiki/Design_infringement}
	 700: {https://en.wikipedia.org/wiki/Design_patent}
	 701: {https://en.wikipedia.org/wiki/Fashion_design_copyright}
	 702: {https://en.wikipedia.org/wiki/Geschmacksmuster}
	 703: {https://en.wikipedia.org/wiki/Industrial_design_right}
	 704: {https://en.wikipedia.org/wiki/Industrial_design_rights_in_the_European_Union}
	 705: {https://en.wikipedia.org/wiki/American_Institute_of_Graphic_Arts}
	 706: {https://en.wikipedia.org/wiki/Chartered_Society_of_Designers}
	 707: {https://en.wikipedia.org/wiki/Design_and_Industries_Association}
	 708: {https://en.wikipedia.org/wiki/Design_Council}
	 709: {https://en.wikipedia.org/wiki/International_Forum_Design}
	 710: {https://en.wikipedia.org/wiki/Design_Research_Society}
	 711: {https://en.wikipedia.org/wiki/European_Design_Award}
	 712: {https://en.wikipedia.org/wiki/German_Design_Award}
	 713: {https://en.wikipedia.org/wiki/Good_Design_Award_(Museum_of_Modern_Art)}
	 714: {https://en.wikipedia.org/wiki/Good_Design_Award_(Chicago_Athenaeum)}
	 715: {https://en.wikipedia.org/wiki/Graphex}
	 716: {https://en.wikipedia.org/wiki/IF_Product_Design_Award}
	 717: {https://en.wikipedia.org/wiki/James_Dyson_Award}
	 718: {https://en.wikipedia.org/wiki/Prince_Philip_Designers_Prize}
	 719: {https://en.wikipedia.org/wiki/Agile_software_development}
	 720: {https://en.wikipedia.org/wiki/Concept_art}
	 721: {https://en.wikipedia.org/wiki/Conceptual_design}
	 722: {https://en.wikipedia.org/wiki/Creative_industries}
	 723: {https://en.wikipedia.org/wiki/Cultural_icon}
	 724: {https://en.wikipedia.org/wiki/.design}
	 725: {https://en.wikipedia.org/wiki/Dominant_design}
	 726: {https://en.wikipedia.org/wiki/Enterprise_architecture}
	 727: {https://en.wikipedia.org/wiki/Form_factor_(design)}
	 728: {https://en.wikipedia.org/wiki/Futures_studies}
	 729: {https://en.wikipedia.org/wiki/Indie_design}
	 730: {https://en.wikipedia.org/wiki/Innovation_management}
	 731: {https://en.wikipedia.org/wiki/Intelligent_design}
	 732: {https://en.wikipedia.org/wiki/Lean_startup}
	 733: {https://en.wikipedia.org/wiki/New_product_development}
	 734: {https://en.wikipedia.org/wiki/OODA_loop}
	 735: {https://en.wikipedia.org/wiki/Philosophy_of_design}
	 736: {https://en.wikipedia.org/wiki/Process_simulation}
	 737: {https://en.wikipedia.org/wiki/Reference_design}
	 738: {https://en.wikipedia.org/wiki/Slow_design}
	 739: {https://en.wikipedia.org/wiki/STEAM_fields}
	 740: {https://en.wikipedia.org/wiki/Argument_from_poor_design}
	 741: {https://en.wikipedia.org/wiki/Visualization_(graphics)}
	 742: {https://en.wikipedia.org/wiki/Wicked_problem}
	 743: {https://en.wikipedia.org/wiki/List_of_system_quality_attributes}
	 744: {https://en.wikipedia.org/wiki/Design_brief}
	 745: {https://en.wikipedia.org/wiki/Design_change}
	 746: {https://en.wikipedia.org/wiki/Design_classic}
	 747: {https://en.wikipedia.org/wiki/Design_competition}
	 748: {https://en.wikipedia.org/wiki/Architectural_design_competition}
	 749: {https://en.wikipedia.org/wiki/Student_design_competition}
	 750: {https://en.wikipedia.org/wiki/Design_director}
	 751: {https://en.wikipedia.org/wiki/Design_education}
	 752: {https://en.wikipedia.org/wiki/Design_elements}
	 753: {https://en.wikipedia.org/wiki/Design_engineer}
	 754: {https://en.wikipedia.org/wiki/Design_firm}
	 755: {https://en.wikipedia.org/wiki/Design_history}
	 756: {https://en.wikipedia.org/wiki/Design_knowledge}
	 757: {https://en.wikipedia.org/wiki/Design_language}
	 758: {https://en.wikipedia.org/wiki/Design_life}
	 759: {https://en.wikipedia.org/wiki/Design_load}
	 760: {https://en.wikipedia.org/wiki/Design_museum}
	 761: {https://en.wikipedia.org/wiki/Design_optimization}
	 762: {https://en.wikipedia.org/wiki/Design_paradigm}
	 763: {https://en.wikipedia.org/wiki/Design_principles}
	 764: {https://en.wikipedia.org/wiki/Design_rationale}
	 765: {https://en.wikipedia.org/wiki/Design_review}
	 766: {https://en.wikipedia.org/wiki/Design_specification}
	 767: {https://en.wikipedia.org/wiki/Design_studies}
	 768: {https://en.wikipedia.org/wiki/Design_studio}
	 769: {https://en.wikipedia.org/wiki/Design_technology}

{https://en.wikipedia.org/wiki/Go_(programming_language)} Refers To:
	 0: {https://en.wikipedia.org/wiki/Main_Page}
	 1: {https://en.wikipedia.org/wiki/Main_Page}
	 2: {https://en.wikipedia.org/wiki/Go_(programming_language)}
	 3: {https://en.wikipedia.org/wiki/Go_(programming_language)}
	 4: {https://en.wikipedia.org/wiki/Go_(programming_language)}
	 5: {https://en.wikipedia.org/wiki/Go!_(programming_language)}
	 6: {https://en.wikipedia.org/wiki/Programming_paradigm}
	 7: {https://en.wikipedia.org/wiki/Multi-paradigm_programming_language}
	 8: {https://en.wikipedia.org/wiki/Concurrent_programming}
	 9: {https://en.wikipedia.org/wiki/Imperative_programming}
	 10: {https://en.wikipedia.org/wiki/Functional_programming}
	 11: {https://en.wikipedia.org/wiki/Object-oriented_programming}
	 12: {https://en.wikipedia.org/wiki/Software_design}
	 13: {https://en.wikipedia.org/wiki/Robert_Griesemer}
	 14: {https://en.wikipedia.org/wiki/Rob_Pike}
	 15: {https://en.wikipedia.org/wiki/Ken_Thompson}
	 16: {https://en.wikipedia.org/wiki/Software_developer}
	 17: {https://en.wikipedia.org/wiki/Software_release_life_cycle}
	 18: {https://en.wikipedia.org/wiki/Type_system}
	 19: {https://en.wikipedia.org/wiki/Type_inference}
	 20: {https://en.wikipedia.org/wiki/Static_typing}
	 21: {https://en.wikipedia.org/wiki/Strong_typing}
	 22: {https://en.wikipedia.org/wiki/Structural_typing}
	 23: {https://en.wikipedia.org/wiki/Nominal_typing}
	 24: {https://en.wikipedia.org/wiki/Memory_management}
	 25: {https://en.wikipedia.org/wiki/Garbage_collection_(computer_science)}
	 26: {https://en.wikipedia.org/wiki/Assembly_language}
	 27: {https://en.wikipedia.org/wiki/C%2B%2B}
	 28: {https://en.wikipedia.org/wiki/Operating_system}
	 29: {https://en.wikipedia.org/wiki/DragonFly_BSD}
	 30: {https://en.wikipedia.org/wiki/FreeBSD}
	 31: {https://en.wikipedia.org/wiki/Linux}
	 32: {https://en.wikipedia.org/wiki/MacOS}
	 33: {https://en.wikipedia.org/wiki/NetBSD}
	 34: {https://en.wikipedia.org/wiki/OpenBSD}
	 35: {https://en.wikipedia.org/wiki/Plan_9_from_Bell_Labs}
	 36: {https://en.wikipedia.org/wiki/Solaris_(operating_system)}
	 37: {https://en.wikipedia.org/wiki/Windows}
	 38: {https://en.wikipedia.org/wiki/Software_license}
	 39: {https://en.wikipedia.org/wiki/3-clause_BSD}
	 40: {https://en.wikipedia.org/wiki/Software_patents}
	 41: {https://en.wikipedia.org/wiki/Filename_extension}
	 42: {https://en.wikipedia.org/wiki/Programming_language_implementation}
	 43: {https://en.wikipedia.org/wiki/C_(programming_language)}
	 44: {https://en.wikipedia.org/wiki/Oberon-2}
	 45: {https://en.wikipedia.org/wiki/Limbo_(programming_language)}
	 46: {https://en.wikipedia.org/wiki/Active_Oberon}
	 47: {https://en.wikipedia.org/wiki/Communicating_sequential_processes}
	 48: {https://en.wikipedia.org/wiki/Pascal_(programming_language)}
	 49: {https://en.wikipedia.org/wiki/Oberon_(programming_language)}
	 50: {https://en.wikipedia.org/wiki/Smalltalk}
	 51: {https://en.wikipedia.org/wiki/Newsqueak}
	 52: {https://en.wikipedia.org/wiki/Modula-2}
	 53: {https://en.wikipedia.org/wiki/Alef_(programming_language)}
	 54: {https://en.wikipedia.org/wiki/APL_(programming_language)}
	 55: {https://en.wikipedia.org/wiki/BCPL}
	 56: {https://en.wikipedia.org/wiki/Modula}
	 57: {https://en.wikipedia.org/wiki/Occam_(programming_language)}
	 58: {https://en.wikipedia.org/wiki/Crystal_(programming_language)}
	 59: {https://en.wikipedia.org/wiki/V_(programming_language)}
	 60: {https://en.wikipedia.org/wiki/High-level_programming_language}
	 61: {https://en.wikipedia.org/wiki/General_purpose_programming_language}
	 62: {https://en.wikipedia.org/wiki/Static_typing}
	 63: {https://en.wikipedia.org/wiki/Compiled_language}
	 64: {https://en.wikipedia.org/wiki/Google}
	 65: {https://en.wikipedia.org/wiki/Robert_Griesemer}
	 66: {https://en.wikipedia.org/wiki/Rob_Pike}
	 67: {https://en.wikipedia.org/wiki/Ken_Thompson}
	 68: {https://en.wikipedia.org/wiki/Syntax_(programming_languages)}
	 69: {https://en.wikipedia.org/wiki/C_(programming_language)}
	 70: {https://en.wikipedia.org/wiki/Memory_safety}
	 71: {https://en.wikipedia.org/wiki/Garbage_collection_(computer_science)}
	 72: {https://en.wikipedia.org/wiki/Structural_type_system}
	 73: {https://en.wikipedia.org/wiki/Communicating_sequential_processes}
	 74: {https://en.wikipedia.org/wiki/Concurrency_(computer_science)}
	 75: {https://en.wikipedia.org/wiki/Self-hosting_(compilers)}
	 76: {https://en.wikipedia.org/wiki/Compiler}
	 77: {https://en.wikipedia.org/wiki/Toolchain}
	 78: {https://en.wikipedia.org/wiki/C%2B%2B}
	 79: {https://en.wikipedia.org/wiki/GNU_Compiler_Collection}
	 80: {https://en.wikipedia.org/wiki/LLVM}
	 81: {https://en.wikipedia.org/wiki/Source-to-source_compiler}
	 82: {https://en.wikipedia.org/wiki/JavaScript}
	 83: {https://en.wikipedia.org/wiki/Front-end_web_development}
	 84: {https://en.wikipedia.org/wiki/Google}
	 85: {https://en.wikipedia.org/wiki/Programming_productivity}
	 86: {https://en.wikipedia.org/wiki/Multi-core_processor}
	 87: {https://en.wikipedia.org/wiki/Computer_network}
	 88: {https://en.wikipedia.org/wiki/Computer}
	 89: {https://en.wikipedia.org/wiki/Codebase}
	 90: {https://en.wikipedia.org/wiki/Static_typing}
	 91: {https://en.wikipedia.org/wiki/Run_time_(program_lifecycle_phase)}
	 92: {https://en.wikipedia.org/wiki/C_(programming_language)}
	 93: {https://en.wikipedia.org/wiki/Readability}
	 94: {https://en.wikipedia.org/wiki/Usability}
	 95: {https://en.wikipedia.org/wiki/Python_(programming_language)}
	 96: {https://en.wikipedia.org/wiki/Computer_network}
	 97: {https://en.wikipedia.org/wiki/Multiprocessing}
	 98: {https://en.wikipedia.org/wiki/Criticism_of_C%2B%2B}
	 99: {https://en.wikipedia.org/wiki/Gopher}
	 100: {https://en.wikipedia.org/wiki/Gopher}
	 101: {https://en.wikipedia.org/wiki/Mascot}
	 102: {https://en.wikipedia.org/wiki/Open_source}
	 103: {https://en.wikipedia.org/wiki/Ren%C3%A9e_French}
	 104: {https://en.wikipedia.org/wiki/WFMU}
	 105: {https://en.wikipedia.org/wiki/Charles_Bigelow_(type_designer)}
	 106: {https://en.wikipedia.org/wiki/Kris_Holmes}
	 107: {https://en.wikipedia.org/wiki/Humanist_sans-serif}
	 108: {https://en.wikipedia.org/wiki/Lucida_Grande}
	 109: {https://en.wikipedia.org/wiki/Monospaced}
	 110: {https://en.wikipedia.org/wiki/WGL4}
	 111: {https://en.wikipedia.org/wiki/X-height}
	 112: {https://en.wikipedia.org/wiki/Letterform}
	 113: {https://en.wikipedia.org/wiki/DIN}
	 114: {https://en.wikipedia.org/wiki/Generic_programming}
	 115: {https://en.wikipedia.org/wiki/Exception_handling}
	 116: {https://en.wikipedia.org/wiki/C_(programming_language)}
	 117: {https://en.wikipedia.org/wiki/Plan_9_from_Bell_Labs}
	 118: {https://en.wikipedia.org/wiki/Dialect_(computing)}
	 119: {https://en.wikipedia.org/wiki/Dynamic_programming_language}
	 120: {https://en.wikipedia.org/wiki/Type_inference}
	 121: {https://en.wikipedia.org/wiki/Light-weight_process}
	 122: {https://en.wikipedia.org/wiki/Channel_(programming)}
	 123: {https://en.wikipedia.org/wiki/Protocol_(object-oriented_programming)}
	 124: {https://en.wikipedia.org/wiki/Virtual_inheritance}
	 125: {https://en.wikipedia.org/wiki/Static_library}
	 126: {https://en.wikipedia.org/wiki/C_(programming_language)}
	 127: {https://en.wikipedia.org/wiki/Type_inference}
	 128: {https://en.wikipedia.org/wiki/Associative_array}
	 129: {https://en.wikipedia.org/wiki/Array_slicing}
	 130: {https://en.wikipedia.org/wiki/Boolean_data_type}
	 131: {https://en.wikipedia.org/wiki/UTF-8}
	 132: {https://en.wikipedia.org/wiki/Record_(computer_science)}
	 133: {https://en.wikipedia.org/wiki/Array_data_type}
	 134: {https://en.wikipedia.org/wiki/Dynamic_array}
	 135: {https://en.wikipedia.org/wiki/Pointer_(computer_programming)}
	 136: {https://en.wikipedia.org/wiki/Nominal_type_system}
	 137: {https://en.wikipedia.org/wiki/IPv4}
	 138: {https://en.wikipedia.org/wiki/Subroutine}
	 139: {https://en.wikipedia.org/wiki/Parameter_(computer_programming)}
	 140: {https://en.wikipedia.org/wiki/Return_statement}
	 141: {https://en.wikipedia.org/wiki/Method_(computer_programming)}
	 142: {https://en.wikipedia.org/wiki/Inheritance_(object-oriented_programming)}
	 143: {https://en.wikipedia.org/wiki/Object_composition}
	 144: {https://en.wikipedia.org/wiki/Protocol_(object-oriented_programming)}
	 145: {https://en.wikipedia.org/wiki/Runtime_polymorphism}
	 146: {https://en.wikipedia.org/wiki/Structural_type_system}
	 147: {https://en.wikipedia.org/wiki/C%2B%2B}
	 148: {https://en.wikipedia.org/wiki/Protocol_(object-oriented_programming)}
	 149: {https://en.wikipedia.org/wiki/Duck_typing}
	 150: {https://en.wikipedia.org/wiki/Structural_type_system}
	 151: {https://en.wikipedia.org/wiki/Nominal_type_system}
	 152: {https://en.wikipedia.org/wiki/Java_(programming_language)}
	 153: {https://en.wikipedia.org/wiki/C_Sharp_(programming_language)}
	 154: {https://en.wikipedia.org/wiki/JSON}
	 155: {https://en.wikipedia.org/wiki/YAML}
	 156: {https://en.wikipedia.org/wiki/Enumerated_type#Go}
	 157: {https://en.wikipedia.org/wiki/Concurrent_programming}
	 158: {https://en.wikipedia.org/wiki/Asynchronous_I/O}
	 159: {https://en.wikipedia.org/wiki/Green_thread}
	 160: {https://en.wikipedia.org/wiki/Thread_(computer_science)}
	 161: {https://en.wikipedia.org/wiki/Erlang_(programming_language)}
	 162: {https://en.wikipedia.org/wiki/Haskell_(programming_language)}
	 163: {https://en.wikipedia.org/wiki/Concurrency_control}
	 164: {https://en.wikipedia.org/wiki/Mutex}
	 165: {https://en.wikipedia.org/wiki/Message_passing}
	 166: {https://en.wikipedia.org/wiki/FIFO_(computing_and_electronics)}
	 167: {https://en.wikipedia.org/wiki/Actor_model}
	 168: {https://en.wikipedia.org/wiki/Thread_pool}
	 169: {https://en.wikipedia.org/wiki/Coroutine}
	 170: {https://en.wikipedia.org/wiki/Iterator}
	 171: {https://en.wikipedia.org/wiki/Channel_(programming)}
	 172: {https://en.wikipedia.org/wiki/C._A._R._Hoare}
	 173: {https://en.wikipedia.org/wiki/Communicating_sequential_processes}
	 174: {https://en.wikipedia.org/wiki/Occam_(programming_language)}
	 175: {https://en.wikipedia.org/wiki/Limbo_(programming_language)}
	 176: {https://en.wikipedia.org/wiki/Parallel_computing}
	 177: {https://en.wikipedia.org/wiki/Shared-memory_architecture}
	 178: {https://en.wikipedia.org/wiki/Multiprocessing}
	 179: {https://en.wikipedia.org/wiki/Lines_of_code}
	 180: {https://en.wikipedia.org/wiki/Chapel_(programming_language)}
	 181: {https://en.wikipedia.org/wiki/Cilk}
	 182: {https://en.wikipedia.org/wiki/Intel_Threading_Building_Blocks}
	 183: {https://en.wikipedia.org/wiki/Fork%E2%80%93join_model}
	 184: {https://en.wikipedia.org/wiki/Data_race}
	 185: {https://en.wikipedia.org/wiki/Exclusive_or}
	 186: {https://en.wikipedia.org/wiki/Inheritance_(object-oriented_programming)}
	 187: {https://en.wikipedia.org/wiki/Assertion_(software_development)}
	 188: {https://en.wikipedia.org/wiki/Pointer_arithmetic}
	 189: {https://en.wikipedia.org/wiki/Type_conversion#Implicit_type_conversion}
	 190: {https://en.wikipedia.org/wiki/Union_type#Untagged_unions}
	 191: {https://en.wikipedia.org/wiki/Tagged_union}
	 192: {https://en.wikipedia.org/wiki/Protocol_(object-oriented_programming)}
	 193: {https://en.wikipedia.org/wiki/Dynamic_dispatch}
	 194: {https://en.wikipedia.org/wiki/Composition_over_inheritance}
	 195: {https://en.wikipedia.org/wiki/Delegation_(programming)}
	 196: {https://en.wikipedia.org/wiki/Exception_handling}
	 197: {https://en.wikipedia.org/wiki/Build_automation}
	 198: {https://en.wikipedia.org/wiki/Unit_testing}
	 199: {https://en.wikipedia.org/wiki/Static_program_analysis}
	 200: {https://en.wikipedia.org/wiki/Profiling_(computer_programming)}
	 201: {https://en.wikipedia.org/wiki/Debugging}
	 202: {https://en.wikipedia.org/wiki/Fuzzing}
	 203: {https://en.wikipedia.org/wiki/Run_time_(program_lifecycle_phase)}
	 204: {https://en.wikipedia.org/wiki/Garbage_collection_(computer_science)}
	 205: {https://en.wikipedia.org/wiki/Data_race}
	 206: {https://en.wikipedia.org/wiki/Integrated_development_environment}
	 207: {https://en.wikipedia.org/wiki/Intelligent_code_completion}
	 208: {https://en.wikipedia.org/wiki/Language_Server_Protocol}
	 209: {https://en.wikipedia.org/wiki/Input/output}
	 210: {https://en.wikipedia.org/wiki/C_file_input/output}
	 211: {https://en.wikipedia.org/wiki/Caddy_(web_server)}
	 212: {https://en.wikipedia.org/wiki/Docker_(software)}
	 213: {https://en.wikipedia.org/wiki/Kubernetes}
	 214: {https://en.wikipedia.org/wiki/CockroachDB}
	 215: {https://en.wikipedia.org/wiki/Hugo_(software)}
	 216: {https://en.wikipedia.org/wiki/Standard_ML}
	 217: {https://en.wikipedia.org/wiki/Engine_Yard}
	 218: {https://en.wikipedia.org/wiki/Syntax_(programming_languages)}
	 219: {https://en.wikipedia.org/wiki/TIOBE_Programming_Community_Index}
	 220: {https://en.wikipedia.org/wiki/Pascal_(programming_language)}
	 221: {https://en.wikipedia.org/wiki/COBOL}
	 222: {https://en.wikipedia.org/wiki/Fortran}
	 223: {https://en.wikipedia.org/wiki/Bruce_Eckel}
	 224: {https://en.wikipedia.org/wiki/C%2B%2B}
	 225: {https://en.wikipedia.org/wiki/GNU_Compiler_Collection}
	 226: {https://en.wikipedia.org/wiki/Scala_(programming_language)}
	 227: {https://en.wikipedia.org/wiki/Null_pointer}
	 228: {https://en.wikipedia.org/wiki/Algebraic_types}
	 229: {https://en.wikipedia.org/wiki/Base_case_(recursion)}
	 230: {https://en.wikipedia.org/wiki/POSIX}
	 231: {https://en.wikipedia.org/wiki/Microsoft_Windows}
	 232: {https://en.wikipedia.org/wiki/Go!_(programming_language)}
	 233: {https://en.wikipedia.org/wiki/Don%27t_be_evil}
	 234: {https://en.wikipedia.org/wiki/Fat_pointer}
	 235: {https://en.wikipedia.org/wiki/Comparison_of_programming_languages}
	 236: {https://en.wikipedia.org/wiki/Semipredicate_problem#Multivalued_return}
	 237: {https://en.wikipedia.org/wiki/GitHub}
	 238: {https://en.wikipedia.org/wiki/GitHub}
	 239: {https://en.wikipedia.org/wiki/GitHub}
	 240: {https://en.wikipedia.org/wiki/Stanford_University}
	 241: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 242: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 243: {https://en.wikipedia.org/wiki/CiteSeerX_(identifier)}
	 244: {https://en.wikipedia.org/wiki/Russ_Cox}
	 245: {https://en.wikipedia.org/wiki/Rob_Pike}
	 246: {https://en.wikipedia.org/wiki/GitHub}
	 247: {https://en.wikipedia.org/wiki/Component_Developer_Magazine}
	 248: {https://en.wikipedia.org/wiki/Linux_Magazine}
	 249: {https://en.wikipedia.org/wiki/Component_Developer_Magazine}
	 250: {https://en.wikipedia.org/wiki/Component_Developer_Magazine}
	 251: {https://en.wikipedia.org/wiki/SIGMOD}
	 252: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 253: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 254: {https://en.wikipedia.org/wiki/The_Register}
	 255: {https://en.wikipedia.org/wiki/GitHub}
	 256: {https://en.wikipedia.org/wiki/Google_Inc.}
	 257: {https://en.wikipedia.org/wiki/Addison-Wesley_Professional}
	 258: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 259: {https://en.wikipedia.org/wiki/O%27Reilly_Media}
	 260: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 261: {https://en.wikipedia.org/wiki/Programming_language}
	 262: {https://en.wikipedia.org/wiki/Comparison_of_programming_languages}
	 263: {https://en.wikipedia.org/wiki/Timeline_of_programming_languages}
	 264: {https://en.wikipedia.org/wiki/History_of_programming_languages}
	 265: {https://en.wikipedia.org/wiki/Ada_(programming_language)}
	 266: {https://en.wikipedia.org/wiki/ALGOL}
	 267: {https://en.wikipedia.org/wiki/Simula}
	 268: {https://en.wikipedia.org/wiki/APL_(programming_language)}
	 269: {https://en.wikipedia.org/wiki/Assembly_language}
	 270: {https://en.wikipedia.org/wiki/BASIC}
	 271: {https://en.wikipedia.org/wiki/Visual_Basic}
	 272: {https://en.wikipedia.org/wiki/Visual_Basic_(classic)}
	 273: {https://en.wikipedia.org/wiki/Visual_Basic_(.NET)}
	 274: {https://en.wikipedia.org/wiki/C_(programming_language)}
	 275: {https://en.wikipedia.org/wiki/C%2B%2B}
	 276: {https://en.wikipedia.org/wiki/C_Sharp_(programming_language)}
	 277: {https://en.wikipedia.org/wiki/COBOL}
	 278: {https://en.wikipedia.org/wiki/Erlang_(programming_language)}
	 279: {https://en.wikipedia.org/wiki/Elixir_(programming_language)}
	 280: {https://en.wikipedia.org/wiki/Forth_(programming_language)}
	 281: {https://en.wikipedia.org/wiki/Fortran}
	 282: {https://en.wikipedia.org/wiki/Haskell}
	 283: {https://en.wikipedia.org/wiki/Java_(programming_language)}
	 284: {https://en.wikipedia.org/wiki/JavaScript}
	 285: {https://en.wikipedia.org/wiki/Julia_(programming_language)}
	 286: {https://en.wikipedia.org/wiki/Kotlin_(programming_language)}
	 287: {https://en.wikipedia.org/wiki/Lisp_(programming_language)}
	 288: {https://en.wikipedia.org/wiki/Lua}
	 289: {https://en.wikipedia.org/wiki/MATLAB}
	 290: {https://en.wikipedia.org/wiki/ML_(programming_language)}
	 291: {https://en.wikipedia.org/wiki/Caml}
	 292: {https://en.wikipedia.org/wiki/OCaml}
	 293: {https://en.wikipedia.org/wiki/Pascal_(programming_language)}
	 294: {https://en.wikipedia.org/wiki/Object_Pascal}
	 295: {https://en.wikipedia.org/wiki/Perl}
	 296: {https://en.wikipedia.org/wiki/Raku_(programming_language)}
	 297: {https://en.wikipedia.org/wiki/PHP}
	 298: {https://en.wikipedia.org/wiki/Prolog}
	 299: {https://en.wikipedia.org/wiki/Python_(programming_language)}
	 300: {https://en.wikipedia.org/wiki/R_(programming_language)}
	 301: {https://en.wikipedia.org/wiki/Ruby_(programming_language)}
	 302: {https://en.wikipedia.org/wiki/Rust_(programming_language)}
	 303: {https://en.wikipedia.org/wiki/SAS_language}
	 304: {https://en.wikipedia.org/wiki/SQL}
	 305: {https://en.wikipedia.org/wiki/Scratch_(programming_language)}
	 306: {https://en.wikipedia.org/wiki/Shell_script}
	 307: {https://en.wikipedia.org/wiki/Smalltalk}
	 308: {https://en.wikipedia.org/wiki/Swift_(programming_language)}
	 309: {https://en.wikipedia.org/wiki/List_of_programming_languages}
	 310: {https://en.wikipedia.org/wiki/List_of_programming_languages}
	 311: {https://en.wikipedia.org/wiki/List_of_programming_languages_by_type}
	 312: {https://en.wikipedia.org/wiki/Generational_list_of_programming_languages}
	 313: {https://en.wikipedia.org/wiki/Non-English-based_programming_languages}
	 314: {https://en.wikipedia.org/wiki/Google}
	 315: {https://en.wikipedia.org/wiki/Chromium_(web_browser)}
	 316: {https://en.wikipedia.org/wiki/Gemini_(language_model)}
	 317: {https://en.wikipedia.org/wiki/OpenRefine}
	 318: {https://en.wikipedia.org/wiki/Tesseract_(software)}
	 319: {https://en.wikipedia.org/wiki/Carbon_(programming_language)}
	 320: {https://en.wikipedia.org/wiki/Dart_(programming_language)}
	 321: {https://en.wikipedia.org/wiki/Sawzall_(programming_language)}
	 322: {https://en.wikipedia.org/wiki/Accelerated_Mobile_Pages}
	 323: {https://en.wikipedia.org/wiki/Angular_(web_framework)}
	 324: {https://en.wikipedia.org/wiki/AngularJS}
	 325: {https://en.wikipedia.org/wiki/Apache_Beam}
	 326: {https://en.wikipedia.org/wiki/Bazel_(software)}
	 327: {https://en.wikipedia.org/wiki/Blockly}
	 328: {https://en.wikipedia.org/wiki/Brotli}
	 329: {https://en.wikipedia.org/wiki/Google_Closure_Tools}
	 330: {https://en.wikipedia.org/wiki/Cpplint}
	 331: {https://en.wikipedia.org/wiki/FlatBuffers}
	 332: {https://en.wikipedia.org/wiki/Flutter_(software)}
	 333: {https://en.wikipedia.org/wiki/Ganeti}
	 334: {https://en.wikipedia.org/wiki/Gears_(software)}
	 335: {https://en.wikipedia.org/wiki/Gerrit_(software)}
	 336: {https://en.wikipedia.org/wiki/GLOP}
	 337: {https://en.wikipedia.org/wiki/GRPC}
	 338: {https://en.wikipedia.org/wiki/Gson}
	 339: {https://en.wikipedia.org/wiki/Google_Guava}
	 340: {https://en.wikipedia.org/wiki/Guetzli}
	 341: {https://en.wikipedia.org/wiki/Google_Guice}
	 342: {https://en.wikipedia.org/wiki/GVisor}
	 343: {https://en.wikipedia.org/wiki/Kubernetes}
	 344: {https://en.wikipedia.org/wiki/LevelDB}
	 345: {https://en.wikipedia.org/wiki/Libvpx}
	 346: {https://en.wikipedia.org/wiki/Lighthouse_(software)}
	 347: {https://en.wikipedia.org/wiki/Google_Native_Client}
	 348: {https://en.wikipedia.org/wiki/Namebench}
	 349: {https://en.wikipedia.org/wiki/Nomulus}
	 350: {https://en.wikipedia.org/wiki/OR-Tools}
	 351: {https://en.wikipedia.org/wiki/Polymer_(library)}
	 352: {https://en.wikipedia.org/wiki/Protocol_Buffers}
	 353: {https://en.wikipedia.org/wiki/TensorFlow}
	 354: {https://en.wikipedia.org/wiki/V8_(JavaScript_engine)}
	 355: {https://en.wikipedia.org/wiki/Android_(operating_system)}
	 356: {https://en.wikipedia.org/wiki/ChromiumOS}
	 357: {https://en.wikipedia.org/wiki/Fuchsia_(operating_system)}
	 358: {https://en.wikipedia.org/wiki/GLinux}
	 359: {https://en.wikipedia.org/wiki/Goobuntu}
	 360: {https://en.wikipedia.org/wiki/Google_Code-in}
	 361: {https://en.wikipedia.org/wiki/Google_LLC_v._Oracle_America,_Inc.}
	 362: {https://en.wikipedia.org/wiki/Open_Source_Security_Foundation}
	 363: {https://en.wikipedia.org/wiki/Google_Summer_of_Code}
	 364: {https://en.wikipedia.org/wiki/Rob_Pike}
	 365: {https://en.wikipedia.org/wiki/Plan_9_from_Bell_Labs}
	 366: {https://en.wikipedia.org/wiki/Inferno_(operating_system)}
	 367: {https://en.wikipedia.org/wiki/Newsqueak}
	 368: {https://en.wikipedia.org/wiki/Limbo_(programming_language)}
	 369: {https://en.wikipedia.org/wiki/Sawzall_(programming_language)}
	 370: {https://en.wikipedia.org/wiki/Acme_(text_editor)}
	 371: {https://en.wikipedia.org/wiki/Blit_(computer_terminal)}
	 372: {https://en.wikipedia.org/wiki/Sam_(text_editor)}
	 373: {https://en.wikipedia.org/wiki/Rio_(windowing_system)}
	 374: {https://en.wikipedia.org/wiki/8%C2%BD_(Plan_9)}
	 375: {https://en.wikipedia.org/wiki/The_Practice_of_Programming}
	 376: {https://en.wikipedia.org/wiki/The_Unix_Programming_Environment}
	 377: {https://en.wikipedia.org/wiki/Ren%C3%A9e_French}
	 378: {https://en.wikipedia.org/wiki/Mark_V._Shaney}
	 379: {https://en.wikipedia.org/wiki/UTF-8}
	 380: {https://en.wikipedia.org/wiki/Ken_Thompson}
	 381: {https://en.wikipedia.org/wiki/Unix}
	 382: {https://en.wikipedia.org/wiki/Plan_9_from_Bell_Labs}
	 383: {https://en.wikipedia.org/wiki/Inferno_(operating_system)}
	 384: {https://en.wikipedia.org/wiki/B_(programming_language)}
	 385: {https://en.wikipedia.org/wiki/Belle_(chess_machine)}
	 386: {https://en.wikipedia.org/wiki/Ed_(text_editor)}
	 387: {https://en.wikipedia.org/wiki/Grep}
	 388: {https://en.wikipedia.org/wiki/Sam_(text_editor)}
	 389: {https://en.wikipedia.org/wiki/Space_Travel_(video_game)}
	 390: {https://en.wikipedia.org/wiki/Thompson_shell}
	 391: {https://en.wikipedia.org/wiki/Bell_Labs}
	 392: {https://en.wikipedia.org/wiki/Google}
	 393: {https://en.wikipedia.org/wiki/UTF-8}

{https://en.wikipedia.org/wiki/Go!_(programming_language)} Refers To:
	 0: {https://en.wikipedia.org/wiki/Main_Page}
	 1: {https://en.wikipedia.org/wiki/Main_Page}
	 2: {https://en.wikipedia.org/wiki/Go!_(programming_language)}
	 3: {https://en.wikipedia.org/wiki/Go!_(programming_language)}
	 4: {https://en.wikipedia.org/wiki/Go!_(programming_language)}
	 5: {https://en.wikipedia.org/wiki/Go_(programming_language)}
	 6: {https://en.wikipedia.org/wiki/Programming_paradigm}
	 7: {https://en.wikipedia.org/wiki/Multi-paradigm_programming_language}
	 8: {https://en.wikipedia.org/wiki/Concurrent_programming_language}
	 9: {https://en.wikipedia.org/wiki/Logic_programming}
	 10: {https://en.wikipedia.org/wiki/Functional_programming}
	 11: {https://en.wikipedia.org/wiki/Imperative_programming}
	 12: {https://en.wikipedia.org/wiki/Object-based_language}
	 13: {https://en.wikipedia.org/wiki/Software_design}
	 14: {https://en.wikipedia.org/wiki/Keith_Clark_(computer_scientist)}
	 15: {https://en.wikipedia.org/wiki/Software_release_life_cycle#Beta}
	 16: {https://en.wikipedia.org/wiki/Type_system}
	 17: {https://en.wikipedia.org/wiki/Strong_typing}
	 18: {https://en.wikipedia.org/wiki/Operating_system}
	 19: {https://en.wikipedia.org/wiki/Unix-like}
	 20: {https://en.wikipedia.org/wiki/Software_license}
	 21: {https://en.wikipedia.org/wiki/GPLv2}
	 22: {https://en.wikipedia.org/wiki/Prolog}
	 23: {https://en.wikipedia.org/wiki/Agent-based_model}
	 24: {https://en.wikipedia.org/wiki/Logic_programming}
	 25: {https://en.wikipedia.org/wiki/Prolog}
	 26: {https://en.wikipedia.org/wiki/Keith_Clark_(computer_scientist)}
	 27: {https://en.wikipedia.org/wiki/Multi-paradigm_programming_language}
	 28: {https://en.wikipedia.org/wiki/Multi-threaded}
	 29: {https://en.wikipedia.org/wiki/Higher_order_function}
	 30: {https://en.wikipedia.org/wiki/Linda_(coordination_language)}
	 31: {https://en.wikipedia.org/wiki/Tuple_space}
	 32: {https://en.wikipedia.org/wiki/Ontology_(information_science)}
	 33: {https://en.wikipedia.org/wiki/Logic_programming}
	 34: {https://en.wikipedia.org/wiki/Functional_programming}
	 35: {https://en.wikipedia.org/wiki/Imperative_programming}
	 36: {https://en.wikipedia.org/wiki/Algebraic_data_type}
	 37: {https://en.wikipedia.org/wiki/Data_type}
	 38: {https://en.wikipedia.org/wiki/Google}
	 39: {https://en.wikipedia.org/wiki/Go_(programming_language)}
	 40: {https://en.wikipedia.org/wiki/Exclamation_point}
	 41: {https://en.wikipedia.org/wiki/CiteSeerX_(identifier)}
	 42: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 43: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 44: {https://en.wikipedia.org/wiki/S2CID_(identifier)}
	 45: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 46: {https://en.wikipedia.org/wiki/CiteSeerX_(identifier)}
	 47: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 48: {https://en.wikipedia.org/wiki/S2CID_(identifier)}
	 49: {https://en.wikipedia.org/wiki/CiteSeerX_(identifier)}
	 50: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 51: {https://en.wikipedia.org/wiki/S2CID_(identifier)}
	 52: {https://en.wikipedia.org/wiki/ISBN_(identifier)}

{https://en.wikipedia.org/wiki/Multi-paradigm_programming_language} Refers To:
	 0: {https://en.wikipedia.org/wiki/Main_Page}
	 1: {https://en.wikipedia.org/wiki/Main_Page}
	 2: {https://en.wikipedia.org/wiki/Comparison_of_multi-paradigm_programming_languages}
	 3: {https://en.wikipedia.org/wiki/Comparison_of_multi-paradigm_programming_languages}
	 4: {https://en.wikipedia.org/wiki/Comparison_of_multi-paradigm_programming_languages}
	 5: {https://en.wikipedia.org/wiki/Programming_language}
	 6: {https://en.wikipedia.org/wiki/Programming_paradigm}
	 7: {https://en.wikipedia.org/wiki/Concurrent_programming_language}
	 8: {https://en.wikipedia.org/wiki/Futures_and_promises}
	 9: {https://en.wikipedia.org/wiki/Actor_model}
	 10: {https://en.wikipedia.org/wiki/Constraint_programming}
	 11: {https://en.wikipedia.org/wiki/Simplex_algorithm}
	 12: {https://en.wikipedia.org/wiki/Dataflow}
	 13: {https://en.wikipedia.org/wiki/Spreadsheet}
	 14: {https://en.wikipedia.org/wiki/Declarative_programming}
	 15: {https://en.wikipedia.org/wiki/Distributed_computing}
	 16: {https://en.wikipedia.org/wiki/Functional_programming}
	 17: {https://en.wikipedia.org/wiki/Generic_programming}
	 18: {https://en.wikipedia.org/wiki/Imperative_programming}
	 19: {https://en.wikipedia.org/wiki/Logic_programming}
	 20: {https://en.wikipedia.org/wiki/Metaprogramming}
	 21: {https://en.wikipedia.org/wiki/Template_metaprogramming}
	 22: {https://en.wikipedia.org/wiki/Reflective_programming}
	 23: {https://en.wikipedia.org/wiki/Object-oriented_programming}
	 24: {https://en.wikipedia.org/wiki/Class_(computer_programming)}
	 25: {https://en.wikipedia.org/wiki/Prototype-based_programming}
	 26: {https://en.wikipedia.org/wiki/Pipeline_programming}
	 27: {https://en.wikipedia.org/wiki/Rule-based_programming}
	 28: {https://en.wikipedia.org/wiki/Visual_programming_language}
	 29: {https://en.wikipedia.org/wiki/Simulink}
	 30: {https://en.wikipedia.org/wiki/Ada_(programming_language)}
	 31: {https://en.wikipedia.org/wiki/Algebraic_Logic_Functional_programming_language}
	 32: {https://en.wikipedia.org/wiki/AmigaE}
	 33: {https://en.wikipedia.org/wiki/APL_(programming_language)}
	 34: {https://en.wikipedia.org/wiki/BETA_(programming_language)}
	 35: {https://en.wikipedia.org/wiki/C%2B%2B}
	 36: {https://en.wikipedia.org/wiki/Standard_Template_Library}
	 37: {https://en.wikipedia.org/wiki/C_Sharp_(programming_language)}
	 38: {https://en.wikipedia.org/wiki/ChucK}
	 39: {https://en.wikipedia.org/wiki/Claire_(programming_language)}
	 40: {https://en.wikipedia.org/wiki/Clojure}
	 41: {https://en.wikipedia.org/wiki/Multiple_dispatch}
	 42: {https://en.wikipedia.org/wiki/Common_Lisp}
	 43: {https://en.wikipedia.org/wiki/Curl_(programming_language)}
	 44: {https://en.wikipedia.org/wiki/Curry_(programming_language)}
	 45: {https://en.wikipedia.org/wiki/D_(programming_language)}
	 46: {https://en.wikipedia.org/wiki/Delphi_(software)}
	 47: {https://en.wikipedia.org/wiki/Dylan_(programming_language)}
	 48: {https://en.wikipedia.org/wiki/E_(programming_language)}
	 49: {https://en.wikipedia.org/wiki/ECMAScript}
	 50: {https://en.wikipedia.org/wiki/ActionScript}
	 51: {https://en.wikipedia.org/wiki/ECMAScript_for_XML}
	 52: {https://en.wikipedia.org/wiki/JavaScript}
	 53: {https://en.wikipedia.org/wiki/JScript}
	 54: {https://en.wikipedia.org/wiki/Erlang_(programming_language)}
	 55: {https://en.wikipedia.org/wiki/Elixir_(programming_language)}
	 56: {https://en.wikipedia.org/wiki/Elm_(programming_language)}
	 57: {https://en.wikipedia.org/wiki/Purely_functional_programming}
	 58: {https://en.wikipedia.org/wiki/F_Sharp_(programming_language)}
	 59: {https://en.wikipedia.org/wiki/Fortran}
	 60: {https://en.wikipedia.org/wiki/Go_(programming_language)}
	 61: {https://en.wikipedia.org/wiki/Haskell}
	 62: {https://en.wikipedia.org/wiki/Lazy_evaluation}
	 63: {https://en.wikipedia.org/wiki/Purely_functional_programming}
	 64: {https://en.wikipedia.org/wiki/Io_(programming_language)}
	 65: {https://en.wikipedia.org/wiki/J_(programming_language)}
	 66: {https://en.wikipedia.org/wiki/Java_(programming_language)}
	 67: {https://en.wikipedia.org/wiki/Julia_(programming_language)}
	 68: {https://en.wikipedia.org/wiki/Eager_evaluation}
	 69: {https://en.wikipedia.org/wiki/Multiple_dispatch}
	 70: {https://en.wikipedia.org/wiki/Lazy_evaluation}
	 71: {https://en.wikipedia.org/wiki/Kotlin_(programming_language)}
	 72: {https://en.wikipedia.org/wiki/LabVIEW}
	 73: {https://en.wikipedia.org/wiki/LispWorks}
	 74: {https://en.wikipedia.org/wiki/Prolog}
	 75: {https://en.wikipedia.org/wiki/Common_Object_Request_Broker_Architecture}
	 76: {https://en.wikipedia.org/wiki/Lua_(programming_language)}
	 77: {https://en.wikipedia.org/wiki/MATLAB}
	 78: {https://en.wikipedia.org/wiki/Nemerle}
	 79: {https://en.wikipedia.org/wiki/Object_Pascal}
	 80: {https://en.wikipedia.org/wiki/OCaml}
	 81: {https://en.wikipedia.org/wiki/Oz_(programming_language)}
	 82: {https://en.wikipedia.org/wiki/Perl}
	 83: {https://en.wikipedia.org/wiki/PHP}
	 84: {https://en.wikipedia.org/wiki/Poplog}
	 85: {https://en.wikipedia.org/wiki/Prograph}
	 86: {https://en.wikipedia.org/wiki/Python_(programming_language)}
	 87: {https://en.wikipedia.org/wiki/Structured_programming}
	 88: {https://en.wikipedia.org/wiki/R_(programming_language)}
	 89: {https://en.wikipedia.org/wiki/Racket_(programming_language)}
	 90: {https://en.wikipedia.org/wiki/Raku_(programming_language)}
	 91: {https://en.wikipedia.org/wiki/ROOP_(programming_language)}
	 92: {https://en.wikipedia.org/wiki/Ruby_(programming_language)}
	 93: {https://en.wikipedia.org/wiki/Rust_(programming_language)}
	 94: {https://en.wikipedia.org/wiki/Sather}
	 95: {https://en.wikipedia.org/wiki/Scala_(programming_language)}
	 96: {https://en.wikipedia.org/wiki/Simula}
	 97: {https://en.wikipedia.org/wiki/SISAL}
	 98: {https://en.wikipedia.org/wiki/Spreadsheet}
	 99: {https://en.wikipedia.org/wiki/Swift_(programming_language)}
	 100: {https://en.wikipedia.org/wiki/Tcl}
	 101: {https://en.wikipedia.org/wiki/Visual_Basic_.NET}
	 102: {https://en.wikipedia.org/wiki/Windows_PowerShell}
	 103: {https://en.wikipedia.org/wiki/Wolfram_Language}
	 104: {https://en.wikipedia.org/wiki/Mathematica}
	 105: {https://en.wikipedia.org/wiki/Programming_paradigm}
	 106: {https://en.wikipedia.org/wiki/List_of_programming_languages_by_type}
	 107: {https://en.wikipedia.org/wiki/Domain-specific_language}
	 108: {https://en.wikipedia.org/wiki/Domain-specific_multimodeling}
	 109: {https://en.wikipedia.org/wiki/Lambda_calculus}
	 110: {https://en.wikipedia.org/wiki/Node.js}
	 111: {https://en.wikipedia.org/wiki/Wayback_Machine}
	 112: {https://en.wikipedia.org/wiki/Institute_of_Electrical_and_Electronics_Engineers}
	 113: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 114: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 115: {https://en.wikipedia.org/wiki/S2CID_(identifier)}
	 116: {https://en.wikipedia.org/wiki/Wayback_Machine}
	 117: {https://en.wikipedia.org/wiki/Prolog}
	 118: {https://en.wikipedia.org/wiki/Common_Lisp_Object_System}
	 119: {https://en.wikipedia.org/wiki/Wayback_Machine}
	 120: {https://en.wikipedia.org/wiki/Wayback_Machine}
	 121: {https://en.wikipedia.org/wiki/GitHub}
	 122: {https://en.wikipedia.org/wiki/GitHub}
	 123: {https://en.wikipedia.org/wiki/Oregon_State_University}
	 124: {https://en.wikipedia.org/wiki/GitHub}
	 125: {https://en.wikipedia.org/wiki/GitHub}
	 126: {https://en.wikipedia.org/wiki/GitHub}
	 127: {https://en.wikipedia.org/wiki/GitHub}
	 128: {https://en.wikipedia.org/wiki/Programming_paradigm}
	 129: {https://en.wikipedia.org/wiki/Imperative_programming}
	 130: {https://en.wikipedia.org/wiki/Structured_programming}
	 131: {https://en.wikipedia.org/wiki/Jackson_structured_programming}
	 132: {https://en.wikipedia.org/wiki/Block_(programming)}
	 133: {https://en.wikipedia.org/wiki/Modular_programming}
	 134: {https://en.wikipedia.org/wiki/Non-structured_programming}
	 135: {https://en.wikipedia.org/wiki/Procedural_programming}
	 136: {https://en.wikipedia.org/wiki/Programming_in_the_large_and_programming_in_the_small}
	 137: {https://en.wikipedia.org/wiki/Design_by_contract}
	 138: {https://en.wikipedia.org/wiki/Invariant-based_programming}
	 139: {https://en.wikipedia.org/wiki/Nested_function}
	 140: {https://en.wikipedia.org/wiki/Object-oriented_programming}
	 141: {https://en.wikipedia.org/wiki/Comparison_of_programming_languages_(object-oriented_programming)}
	 142: {https://en.wikipedia.org/wiki/List_of_object-oriented_programming_languages}
	 143: {https://en.wikipedia.org/wiki/Class-based_programming}
	 144: {https://en.wikipedia.org/wiki/Prototype-based_programming}
	 145: {https://en.wikipedia.org/wiki/Object-based_language}
	 146: {https://en.wikipedia.org/wiki/Agent-oriented_programming}
	 147: {https://en.wikipedia.org/wiki/Immutable_object}
	 148: {https://en.wikipedia.org/wiki/Persistent_programming_language}
	 149: {https://en.wikipedia.org/wiki/Uniform_function_call_syntax}
	 150: {https://en.wikipedia.org/wiki/Declarative_programming}
	 151: {https://en.wikipedia.org/wiki/Functional_programming}
	 152: {https://en.wikipedia.org/wiki/Comparison_of_functional_programming_languages}
	 153: {https://en.wikipedia.org/wiki/Recursion_(computer_science)}
	 154: {https://en.wikipedia.org/wiki/Anonymous_function}
	 155: {https://en.wikipedia.org/wiki/Partial_application}
	 156: {https://en.wikipedia.org/wiki/Higher-order_programming}
	 157: {https://en.wikipedia.org/wiki/Purely_functional_programming}
	 158: {https://en.wikipedia.org/wiki/Total_functional_programming}
	 159: {https://en.wikipedia.org/wiki/Strict_programming_language}
	 160: {https://en.wikipedia.org/wiki/Generalized_algebraic_data_type}
	 161: {https://en.wikipedia.org/wiki/Dependent_type}
	 162: {https://en.wikipedia.org/wiki/Functional_logic_programming}
	 163: {https://en.wikipedia.org/wiki/Tacit_programming}
	 164: {https://en.wikipedia.org/wiki/Expression-oriented_programming_language}
	 165: {https://en.wikipedia.org/wiki/Applicative_programming_language}
	 166: {https://en.wikipedia.org/wiki/Concatenative_programming_language}
	 167: {https://en.wikipedia.org/wiki/Function-level_programming}
	 168: {https://en.wikipedia.org/wiki/Value-level_programming}
	 169: {https://en.wikipedia.org/wiki/Dataflow_programming}
	 170: {https://en.wikipedia.org/wiki/Flow-based_programming}
	 171: {https://en.wikipedia.org/wiki/Reactive_programming}
	 172: {https://en.wikipedia.org/wiki/Functional_reactive_programming}
	 173: {https://en.wikipedia.org/wiki/Signal_programming}
	 174: {https://en.wikipedia.org/wiki/Stream_processing}
	 175: {https://en.wikipedia.org/wiki/Synchronous_programming_language}
	 176: {https://en.wikipedia.org/wiki/Logic_programming}
	 177: {https://en.wikipedia.org/wiki/Abductive_logic_programming}
	 178: {https://en.wikipedia.org/wiki/Answer_set_programming}
	 179: {https://en.wikipedia.org/wiki/Constraint_programming}
	 180: {https://en.wikipedia.org/wiki/Constraint_logic_programming}
	 181: {https://en.wikipedia.org/wiki/Inductive_logic_programming}
	 182: {https://en.wikipedia.org/wiki/Nondeterministic_programming}
	 183: {https://en.wikipedia.org/wiki/Ontology_language}
	 184: {https://en.wikipedia.org/wiki/Probabilistic_logic_programming}
	 185: {https://en.wikipedia.org/wiki/Query_language}
	 186: {https://en.wikipedia.org/wiki/Domain-specific_language}
	 187: {https://en.wikipedia.org/wiki/Algebraic_modeling_language}
	 188: {https://en.wikipedia.org/wiki/Array_programming}
	 189: {https://en.wikipedia.org/wiki/Automata-based_programming}
	 190: {https://en.wikipedia.org/wiki/Action_language}
	 191: {https://en.wikipedia.org/wiki/Command_language}
	 192: {https://en.wikipedia.org/wiki/Spacecraft_command_language}
	 193: {https://en.wikipedia.org/wiki/Differentiable_programming}
	 194: {https://en.wikipedia.org/wiki/End-user_development}
	 195: {https://en.wikipedia.org/wiki/Grammar-oriented_programming}
	 196: {https://en.wikipedia.org/wiki/Interface_description_language}
	 197: {https://en.wikipedia.org/wiki/Language-oriented_programming}
	 198: {https://en.wikipedia.org/wiki/List_comprehension}
	 199: {https://en.wikipedia.org/wiki/Low-code_development_platform}
	 200: {https://en.wikipedia.org/wiki/Modeling_language}
	 201: {https://en.wikipedia.org/wiki/Natural-language_programming}
	 202: {https://en.wikipedia.org/wiki/Non-English-based_programming_languages}
	 203: {https://en.wikipedia.org/wiki/Page_description_language}
	 204: {https://en.wikipedia.org/wiki/Pipeline_(software)}
	 205: {https://en.wikipedia.org/wiki/Filter_(software)}
	 206: {https://en.wikipedia.org/wiki/Probabilistic_programming}
	 207: {https://en.wikipedia.org/wiki/Quantum_programming}
	 208: {https://en.wikipedia.org/wiki/Scientific_programming_language}
	 209: {https://en.wikipedia.org/wiki/Scripting_language}
	 210: {https://en.wikipedia.org/wiki/Set_theoretic_programming}
	 211: {https://en.wikipedia.org/wiki/Simulation_language}
	 212: {https://en.wikipedia.org/wiki/Stack-oriented_programming}
	 213: {https://en.wikipedia.org/wiki/System_programming_language}
	 214: {https://en.wikipedia.org/wiki/Tactile_programming_language}
	 215: {https://en.wikipedia.org/wiki/Template_processor}
	 216: {https://en.wikipedia.org/wiki/Transformation_language}
	 217: {https://en.wikipedia.org/wiki/Graph_rewriting}
	 218: {https://en.wikipedia.org/wiki/Production_system_(computer_science)}
	 219: {https://en.wikipedia.org/wiki/Pattern_matching}
	 220: {https://en.wikipedia.org/wiki/Visual_programming_language}
	 221: {https://en.wikipedia.org/wiki/Concurrent_computing}
	 222: {https://en.wikipedia.org/wiki/Distributed_computing}
	 223: {https://en.wikipedia.org/wiki/Parallel_computing}
	 224: {https://en.wikipedia.org/wiki/Actor_model}
	 225: {https://en.wikipedia.org/wiki/Automatic_mutual_exclusion}
	 226: {https://en.wikipedia.org/wiki/Choreographic_programming}
	 227: {https://en.wikipedia.org/wiki/Concurrent_logic_programming}
	 228: {https://en.wikipedia.org/wiki/Concurrent_constraint_logic_programming}
	 229: {https://en.wikipedia.org/wiki/Concurrent_object-oriented_programming}
	 230: {https://en.wikipedia.org/wiki/Macroprogramming}
	 231: {https://en.wikipedia.org/wiki/Multitier_programming}
	 232: {https://en.wikipedia.org/wiki/Organic_computing}
	 233: {https://en.wikipedia.org/wiki/Parallel_programming_model}
	 234: {https://en.wikipedia.org/wiki/Partitioned_global_address_space}
	 235: {https://en.wikipedia.org/wiki/Process-oriented_programming}
	 236: {https://en.wikipedia.org/wiki/Relativistic_programming}
	 237: {https://en.wikipedia.org/wiki/Service-oriented_programming}
	 238: {https://en.wikipedia.org/wiki/Structured_concurrency}
	 239: {https://en.wikipedia.org/wiki/Metaprogramming}
	 240: {https://en.wikipedia.org/wiki/Attribute-oriented_programming}
	 241: {https://en.wikipedia.org/wiki/Automatic_programming}
	 242: {https://en.wikipedia.org/wiki/Inductive_programming}
	 243: {https://en.wikipedia.org/wiki/Dynamic_programming_language}
	 244: {https://en.wikipedia.org/wiki/Extensible_programming}
	 245: {https://en.wikipedia.org/wiki/Generic_programming}
	 246: {https://en.wikipedia.org/wiki/Homoiconicity}
	 247: {https://en.wikipedia.org/wiki/Interactive_programming}
	 248: {https://en.wikipedia.org/wiki/Macro_(computer_science)}
	 249: {https://en.wikipedia.org/wiki/Hygienic_macro}
	 250: {https://en.wikipedia.org/wiki/Metalinguistic_abstraction}
	 251: {https://en.wikipedia.org/wiki/Multi-stage_programming}
	 252: {https://en.wikipedia.org/wiki/Program_synthesis}
	 253: {https://en.wikipedia.org/wiki/Bayesian_program_synthesis}
	 254: {https://en.wikipedia.org/wiki/Inferential_programming}
	 255: {https://en.wikipedia.org/wiki/Programming_by_demonstration}
	 256: {https://en.wikipedia.org/wiki/Programming_by_example}
	 257: {https://en.wikipedia.org/wiki/Reflective_programming}
	 258: {https://en.wikipedia.org/wiki/Self-modifying_code}
	 259: {https://en.wikipedia.org/wiki/Symbolic_programming}
	 260: {https://en.wikipedia.org/wiki/Template_metaprogramming}
	 261: {https://en.wikipedia.org/wiki/Separation_of_concerns}
	 262: {https://en.wikipedia.org/wiki/Aspect-oriented_programming}
	 263: {https://en.wikipedia.org/wiki/Component-based_software_engineering}
	 264: {https://en.wikipedia.org/wiki/Data-driven_programming}
	 265: {https://en.wikipedia.org/wiki/Data-oriented_design}
	 266: {https://en.wikipedia.org/wiki/Event-driven_programming}
	 267: {https://en.wikipedia.org/wiki/Feature-oriented_programming}
	 268: {https://en.wikipedia.org/wiki/Literate_programming}
	 269: {https://en.wikipedia.org/wiki/Role-oriented_programming}
	 270: {https://en.wikipedia.org/wiki/Subject-oriented_programming}
	 271: {https://en.wikipedia.org/wiki/Programming_paradigm}
	 272: {https://en.wikipedia.org/wiki/Machine_code}
	 273: {https://en.wikipedia.org/wiki/Assembly_language}
	 274: {https://en.wikipedia.org/wiki/Compiled_language}
	 275: {https://en.wikipedia.org/wiki/Interpreted_language}
	 276: {https://en.wikipedia.org/wiki/Low-level_programming_language}
	 277: {https://en.wikipedia.org/wiki/High-level_programming_language}
	 278: {https://en.wikipedia.org/wiki/Very_high-level_programming_language}
	 279: {https://en.wikipedia.org/wiki/Esoteric_programming_language}
	 280: {https://en.wikipedia.org/wiki/Programming_language_generations}
	 281: {https://en.wikipedia.org/wiki/First-generation_programming_language}
	 282: {https://en.wikipedia.org/wiki/Second-generation_programming_language}
	 283: {https://en.wikipedia.org/wiki/Third-generation_programming_language}
	 284: {https://en.wikipedia.org/wiki/Fourth-generation_programming_language}
	 285: {https://en.wikipedia.org/wiki/Fifth-generation_programming_language}

{https://en.wikipedia.org/wiki/Object-oriented_programming} Refers To:
	 0: {https://en.wikipedia.org/wiki/Main_Page}
	 1: {https://en.wikipedia.org/wiki/Main_Page}
	 2: {https://en.wikipedia.org/wiki/Object-oriented_programming}
	 3: {https://en.wikipedia.org/wiki/Object-oriented_programming}
	 4: {https://en.wikipedia.org/wiki/Object-oriented_programming}
	 5: {https://en.wikipedia.org/wiki/Object-orientation_(disambiguation)}
	 6: {https://en.wikipedia.org/wiki/UML}
	 7: {https://en.wikipedia.org/wiki/Variable_(computer_science)}
	 8: {https://en.wikipedia.org/wiki/Method_(computer_programming)}
	 9: {https://en.wikipedia.org/wiki/Programming_paradigm}
	 10: {https://en.wikipedia.org/wiki/Object_(computer_science)}
	 11: {https://en.wikipedia.org/wiki/Data}
	 12: {https://en.wikipedia.org/wiki/Field_(computer_science)}
	 13: {https://en.wikipedia.org/wiki/Attribute_(computing)}
	 14: {https://en.wikipedia.org/wiki/Property_(programming)}
	 15: {https://en.wikipedia.org/wiki/Procedure_(computer_science)}
	 16: {https://en.wikipedia.org/wiki/Method_(computing)}
	 17: {https://en.wikipedia.org/wiki/Source-code}
	 18: {https://en.wikipedia.org/wiki/Computer_program}
	 19: {https://en.wikipedia.org/wiki/C%2B%2B}
	 20: {https://en.wikipedia.org/wiki/Java_(programming_language)}
	 21: {https://en.wikipedia.org/wiki/Python_(programming_language)}
	 22: {https://en.wikipedia.org/wiki/Multi-paradigm}
	 23: {https://en.wikipedia.org/wiki/Imperative_programming}
	 24: {https://en.wikipedia.org/wiki/Declarative_programming}
	 25: {https://en.wikipedia.org/wiki/Ada_(programming_language)}
	 26: {https://en.wikipedia.org/wiki/ActionScript}
	 27: {https://en.wikipedia.org/wiki/C%2B%2B}
	 28: {https://en.wikipedia.org/wiki/Common_Lisp}
	 29: {https://en.wikipedia.org/wiki/C_Sharp_(programming_language)}
	 30: {https://en.wikipedia.org/wiki/Dart_(programming_language)}
	 31: {https://en.wikipedia.org/wiki/Eiffel_(programming_language)}
	 32: {https://en.wikipedia.org/wiki/Fortran}
	 33: {https://en.wikipedia.org/wiki/Haxe}
	 34: {https://en.wikipedia.org/wiki/Java_(programming_language)}
	 35: {https://en.wikipedia.org/wiki/JavaScript}
	 36: {https://en.wikipedia.org/wiki/Kotlin_(programming_language)}
	 37: {https://en.wikipedia.org/wiki/Logo_(programming_language)}
	 38: {https://en.wikipedia.org/wiki/MATLAB}
	 39: {https://en.wikipedia.org/wiki/Objective-C}
	 40: {https://en.wikipedia.org/wiki/Object_Pascal}
	 41: {https://en.wikipedia.org/wiki/Perl}
	 42: {https://en.wikipedia.org/wiki/PHP}
	 43: {https://en.wikipedia.org/wiki/Python_(programming_language)}
	 44: {https://en.wikipedia.org/wiki/R_(programming_language)}
	 45: {https://en.wikipedia.org/wiki/Raku_(programming_language)}
	 46: {https://en.wikipedia.org/wiki/Ruby_(programming_language)}
	 47: {https://en.wikipedia.org/wiki/Scala_(programming_language)}
	 48: {https://en.wikipedia.org/wiki/SIMSCRIPT}
	 49: {https://en.wikipedia.org/wiki/Simula}
	 50: {https://en.wikipedia.org/wiki/Smalltalk}
	 51: {https://en.wikipedia.org/wiki/Swift_(programming_language)}
	 52: {https://en.wikipedia.org/wiki/Vala_(programming_language)}
	 53: {https://en.wikipedia.org/wiki/Visual_Basic.NET}
	 54: {https://en.wikipedia.org/wiki/Artificial_intelligence}
	 55: {https://en.wikipedia.org/wiki/MIT}
	 56: {https://en.wikipedia.org/wiki/LISP}
	 57: {https://en.wikipedia.org/wiki/Sketchpad}
	 58: {https://en.wikipedia.org/wiki/Ivan_Sutherland}
	 59: {https://en.wikipedia.org/wiki/ALGOL}
	 60: {https://en.wikipedia.org/wiki/Data_abstraction}
	 61: {https://en.wikipedia.org/wiki/Modular_programming}
	 62: {https://en.wikipedia.org/wiki/Simula}
	 63: {https://en.wikipedia.org/wiki/Class_(computer_programming)}
	 64: {https://en.wikipedia.org/wiki/Dynamic_binding_(computing)}
	 65: {https://en.wikipedia.org/wiki/Physical_modelling}
	 66: {https://en.wikipedia.org/wiki/Alan_Kay}
	 67: {https://en.wikipedia.org/wiki/Smalltalk}
	 68: {https://en.wikipedia.org/wiki/Barbara_Liskov}
	 69: {https://en.wikipedia.org/wiki/Simula_67}
	 70: {https://en.wikipedia.org/wiki/CLU_(programming_language)}
	 71: {https://en.wikipedia.org/wiki/Alphard_(programming_language)}
	 72: {https://en.wikipedia.org/wiki/Smalltalk}
	 73: {https://en.wikipedia.org/wiki/Xerox_PARC}
	 74: {https://en.wikipedia.org/wiki/Alan_Kay}
	 75: {https://en.wikipedia.org/wiki/Dan_Ingalls}
	 76: {https://en.wikipedia.org/wiki/Adele_Goldberg_(computer_scientist)}
	 77: {https://en.wikipedia.org/wiki/Flavors_(programming_language)}
	 78: {https://en.wikipedia.org/wiki/Multiple_inheritance}
	 79: {https://en.wikipedia.org/wiki/Mixins}
	 80: {https://en.wikipedia.org/wiki/Byte_Magazine}
	 81: {https://en.wikipedia.org/wiki/Interlisp}
	 82: {https://en.wikipedia.org/wiki/OOPSLA}
	 83: {https://en.wikipedia.org/wiki/Common_Lisp_Object_System}
	 84: {https://en.wikipedia.org/wiki/Processor_design}
	 85: {https://en.wikipedia.org/wiki/Computer_hardware}
	 86: {https://en.wikipedia.org/wiki/Computer_memory}
	 87: {https://en.wikipedia.org/wiki/Intel_iAPX_432}
	 88: {https://en.wikipedia.org/wiki/Linn_Products}
	 89: {https://en.wikipedia.org/wiki/Rekursiv}
	 90: {https://en.wikipedia.org/wiki/Objective-C}
	 91: {https://en.wikipedia.org/wiki/C%2B%2B}
	 92: {https://en.wikipedia.org/wiki/Eiffel_language}
	 93: {https://en.wikipedia.org/wiki/Brad_Cox}
	 94: {https://en.wikipedia.org/wiki/ITT_Inc.}
	 95: {https://en.wikipedia.org/wiki/Bjarne_Stroustrup}
	 96: {https://en.wikipedia.org/wiki/C%2B%2B}
	 97: {https://en.wikipedia.org/wiki/Bertrand_Meyer}
	 98: {https://en.wikipedia.org/wiki/Eiffel_language}
	 99: {https://en.wikipedia.org/wiki/Design_by_contract}
	 100: {https://en.wikipedia.org/wiki/Visual_FoxPro}
	 101: {https://en.wikipedia.org/wiki/C%2B%2B}
	 102: {https://en.wikipedia.org/wiki/Delphi_(programming_language)}
	 103: {https://en.wikipedia.org/wiki/Graphical_user_interface}
	 104: {https://en.wikipedia.org/wiki/Cocoa_(software)}
	 105: {https://en.wikipedia.org/wiki/Mac_OS_X}
	 106: {https://en.wikipedia.org/wiki/Objective-C}
	 107: {https://en.wikipedia.org/wiki/Event-driven_programming}
	 108: {https://en.wikipedia.org/wiki/ETH_Z%C3%BCrich}
	 109: {https://en.wikipedia.org/wiki/Niklaus_Wirth}
	 110: {https://en.wikipedia.org/wiki/Modula-2}
	 111: {https://en.wikipedia.org/wiki/Oberon_(programming_language)}
	 112: {https://en.wikipedia.org/wiki/Ada_(programming_language)}
	 113: {https://en.wikipedia.org/wiki/BASIC}
	 114: {https://en.wikipedia.org/wiki/Fortran}
	 115: {https://en.wikipedia.org/wiki/Pascal_(programming_language)}
	 116: {https://en.wikipedia.org/wiki/COBOL}
	 117: {https://en.wikipedia.org/wiki/Python_(programming_language)}
	 118: {https://en.wikipedia.org/wiki/Ruby_programming_language}
	 119: {https://en.wikipedia.org/wiki/Java_(programming_language)}
	 120: {https://en.wikipedia.org/wiki/Sun_Microsystems}
	 121: {https://en.wikipedia.org/wiki/C_Sharp_(programming_language)}
	 122: {https://en.wikipedia.org/wiki/Visual_Basic.NET}
	 123: {https://en.wikipedia.org/wiki/.NET_Framework}
	 124: {https://en.wikipedia.org/wiki/Comparison_of_programming_languages_(object-oriented_programming)}
	 125: {https://en.wikipedia.org/wiki/List_of_object-oriented_programming_terms}
	 126: {https://en.wikipedia.org/wiki/Christopher_J._Date}
	 127: {https://en.wikipedia.org/wiki/Relational_programming}
	 128: {https://en.wikipedia.org/wiki/Imperative_programming}
	 129: {https://en.wikipedia.org/wiki/Structured_programming}
	 130: {https://en.wikipedia.org/wiki/Variable_(computer_science)}
	 131: {https://en.wikipedia.org/wiki/Data_type}
	 132: {https://en.wikipedia.org/wiki/Integer_(computer_science)}
	 133: {https://en.wikipedia.org/wiki/String_(computer_science)}
	 134: {https://en.wikipedia.org/wiki/List_(abstract_data_type)}
	 135: {https://en.wikipedia.org/wiki/Hash_table}
	 136: {https://en.wikipedia.org/wiki/Pointer_(computer_programming)}
	 137: {https://en.wikipedia.org/wiki/Subroutine}
	 138: {https://en.wikipedia.org/wiki/Structured_programming}
	 139: {https://en.wikipedia.org/wiki/Loop_(computing)}
	 140: {https://en.wikipedia.org/wiki/Conditional_(computer_programming)}
	 141: {https://en.wikipedia.org/wiki/Modular_programming}
	 142: {https://en.wikipedia.org/wiki/Namespace}
	 143: {https://en.wikipedia.org/wiki/Code_reuse}
	 144: {https://en.wikipedia.org/wiki/Software_maintenance}
	 145: {https://en.wikipedia.org/wiki/Thread_(computer_science)}
	 146: {https://en.wikipedia.org/wiki/Object_(computer_science)}
	 147: {https://en.wikipedia.org/wiki/Data_structure}
	 148: {https://en.wikipedia.org/wiki/Field_(computer_science)}
	 149: {https://en.wikipedia.org/wiki/Method_(computer_programming)}
	 150: {https://en.wikipedia.org/wiki/Variable_(computer_science)}
	 151: {https://en.wikipedia.org/wiki/Subroutine}
	 152: {https://en.wikipedia.org/wiki/Memory_address}
	 153: {https://en.wikipedia.org/wiki/Pointer_(computer_programming)}
	 154: {https://en.wikipedia.org/wiki/Object_composition}
	 155: {https://en.wikipedia.org/wiki/Algorithm}
	 156: {https://en.wikipedia.org/wiki/Data_structure}
	 157: {https://en.wikipedia.org/wiki/Rob_Pike}
	 158: {https://en.wikipedia.org/wiki/Roman_numerals}
	 159: {https://en.wikipedia.org/wiki/Rich_Hickey}
	 160: {https://en.wikipedia.org/wiki/Clojure}
	 161: {https://en.wikipedia.org/wiki/Alexander_Stepanov}
	 162: {https://en.wikipedia.org/wiki/Generic_programming}
	 163: {https://en.wikipedia.org/wiki/Niklaus_Wirth}
	 164: {https://en.wikipedia.org/wiki/Robert_C._Martin}
	 165: {https://en.wikipedia.org/wiki/Bertrand_Meyer}
	 166: {https://en.wikipedia.org/wiki/Object-Oriented_Software_Construction}
	 167: {https://en.wikipedia.org/wiki/Steve_Yegge}
	 168: {https://en.wikipedia.org/wiki/Noun}
	 169: {https://en.wikipedia.org/wiki/Verb}
	 170: {https://en.wikipedia.org/wiki/Functional_programming}
	 171: {https://en.wikipedia.org/wiki/Code_reuse}
	 172: {https://en.wikipedia.org/wiki/Extensibility}
	 173: {https://en.wikipedia.org/wiki/Inheritance_(object-oriented_programming)}
	 174: {https://en.wikipedia.org/wiki/Class_(computer_programming)}
	 175: {https://en.wikipedia.org/wiki/Prototype-based_programming}
	 176: {https://en.wikipedia.org/wiki/Class-based_programming}
	 177: {https://en.wikipedia.org/wiki/Instance_(computer_science)}
	 178: {https://en.wikipedia.org/wiki/Constructor_(object-oriented_programming)}
	 179: {https://en.wikipedia.org/wiki/Class_variable}
	 180: {https://en.wikipedia.org/wiki/Instance_variable}
	 181: {https://en.wikipedia.org/wiki/Member_variable}
	 182: {https://en.wikipedia.org/wiki/Multiple_inheritance}
	 183: {https://en.wikipedia.org/wiki/Mixin}
	 184: {https://en.wikipedia.org/wiki/Trait_(computer_programming)}
	 185: {https://en.wikipedia.org/wiki/Abstract_class}
	 186: {https://en.wikipedia.org/wiki/Prototype-based_programming}
	 187: {https://en.wikipedia.org/wiki/Go_(programming_language)}
	 188: {https://en.wikipedia.org/wiki/Composition_over_inheritance}
	 189: {https://en.wikipedia.org/wiki/Delegation_(object-oriented_programming)}
	 190: {https://en.wikipedia.org/wiki/Rob_Pike}
	 191: {https://en.wikipedia.org/wiki/Object-oriented_design}
	 192: {https://en.wikipedia.org/wiki/Is_a}
	 193: {https://en.wikipedia.org/wiki/Program_semantics}
	 194: {https://en.wikipedia.org/wiki/Behavioral_subtyping}
	 195: {https://en.wikipedia.org/wiki/Liskov_substitution_principle}
	 196: {https://en.wikipedia.org/wiki/Mutable}
	 197: {https://en.wikipedia.org/wiki/Subtype_polymorphism}
	 198: {https://en.wikipedia.org/wiki/Type_checker}
	 199: {https://en.wikipedia.org/wiki/Circle-ellipse_problem}
	 200: {https://en.wikipedia.org/wiki/Dynamic_dispatch}
	 201: {https://en.wikipedia.org/wiki/Message_passing}
	 202: {https://en.wikipedia.org/wiki/Multiple_dispatch}
	 203: {https://en.wikipedia.org/wiki/Delegation_(object-oriented_programming)}
	 204: {https://en.wikipedia.org/wiki/Abstraction_(computer_science)}
	 205: {https://en.wikipedia.org/wiki/Data_hiding}
	 206: {https://en.wikipedia.org/wiki/Encapsulation_(computer_programming)}
	 207: {https://en.wikipedia.org/wiki/Code_refactoring}
	 208: {https://en.wikipedia.org/wiki/Coupling_(computer_programming)}
	 209: {https://en.wikipedia.org/wiki/Information_hiding}
	 210: {https://en.wikipedia.org/wiki/Eric_S._Raymond}
	 211: {https://en.wikipedia.org/wiki/C_programming_language}
	 212: {https://en.wikipedia.org/wiki/Open/closed_principle}
	 213: {https://en.wikipedia.org/wiki/Luca_Cardelli}
	 214: {https://en.wikipedia.org/wiki/Joe_Armstrong_(programming)}
	 215: {https://en.wikipedia.org/wiki/Erlang_(programming_language)}
	 216: {https://en.wikipedia.org/wiki/Duplicate_code}
	 217: {https://en.wikipedia.org/wiki/Don%27t_repeat_yourself}
	 218: {https://en.wikipedia.org/wiki/Polymorphism_(computer_science)}
	 219: {https://en.wikipedia.org/wiki/Subtyping}
	 220: {https://en.wikipedia.org/wiki/Interface_(object-oriented_programming)}
	 221: {https://en.wikipedia.org/wiki/Separation_of_concerns}
	 222: {https://en.wikipedia.org/wiki/This_(computer_programming)}
	 223: {https://en.wikipedia.org/wiki/Open_recursion}
	 224: {https://en.wikipedia.org/wiki/Late_binding}
	 225: {https://en.wikipedia.org/wiki/List_of_object-oriented_programming_languages}
	 226: {https://en.wikipedia.org/wiki/Ruby_(programming_language)}
	 227: {https://en.wikipedia.org/wiki/Scala_(programming_language)}
	 228: {https://en.wikipedia.org/wiki/Smalltalk}
	 229: {https://en.wikipedia.org/wiki/Eiffel_(programming_language)}
	 230: {https://en.wikipedia.org/wiki/Emerald_(programming_language)}
	 231: {https://en.wikipedia.org/wiki/JADE_(programming_language)}
	 232: {https://en.wikipedia.org/wiki/Self_(programming_language)}
	 233: {https://en.wikipedia.org/wiki/Raku_(programming_language)}
	 234: {https://en.wikipedia.org/wiki/Java_(programming_language)}
	 235: {https://en.wikipedia.org/wiki/Python_(programming_language)}
	 236: {https://en.wikipedia.org/wiki/C%2B%2B}
	 237: {https://en.wikipedia.org/wiki/C_Sharp_(programming_language)}
	 238: {https://en.wikipedia.org/wiki/Delphi_(programming_language)}
	 239: {https://en.wikipedia.org/wiki/Object_Pascal}
	 240: {https://en.wikipedia.org/wiki/VB.NET}
	 241: {https://en.wikipedia.org/wiki/PHP}
	 242: {https://en.wikipedia.org/wiki/JavaScript}
	 243: {https://en.wikipedia.org/wiki/Perl}
	 244: {https://en.wikipedia.org/wiki/Visual_Basic}
	 245: {https://en.wikipedia.org/wiki/MATLAB}
	 246: {https://en.wikipedia.org/wiki/COBOL_2002}
	 247: {https://en.wikipedia.org/wiki/Fortran_2003}
	 248: {https://en.wikipedia.org/wiki/ABAP}
	 249: {https://en.wikipedia.org/wiki/Ada_95}
	 250: {https://en.wikipedia.org/wiki/Pascal_(programming_language)}
	 251: {https://en.wikipedia.org/wiki/Oberon_(programming_language)}
	 252: {https://en.wikipedia.org/wiki/BETA_(programming_language)}
	 253: {https://en.wikipedia.org/wiki/JavaScript}
	 254: {https://en.wikipedia.org/wiki/Lua_(programming_language)}
	 255: {https://en.wikipedia.org/wiki/Modula-2}
	 256: {https://en.wikipedia.org/wiki/CLU_(programming_language)}
	 257: {https://en.wikipedia.org/wiki/Go_(programming_language)}
	 258: {https://en.wikipedia.org/wiki/Tcl}
	 259: {https://en.wikipedia.org/wiki/Common_Lisp}
	 260: {https://en.wikipedia.org/wiki/Common_Lisp_Object_System}
	 261: {https://en.wikipedia.org/wiki/TIOBE_index}
	 262: {https://en.wikipedia.org/wiki/Java_(programming_language)}
	 263: {https://en.wikipedia.org/wiki/Procedural_programming}
	 264: {https://en.wikipedia.org/wiki/C_(programming_language)}
	 265: {https://en.wikipedia.org/wiki/Paul_Graham_(computer_programmer)}
	 266: {https://en.wikipedia.org/wiki/Eric_S._Raymond}
	 267: {https://en.wikipedia.org/wiki/Unix}
	 268: {https://en.wikipedia.org/wiki/Open-source_software}
	 269: {https://en.wikipedia.org/wiki/Luca_Cardelli}
	 270: {https://en.wikipedia.org/wiki/Dynamic_programming_language}
	 271: {https://en.wikipedia.org/wiki/Python_(programming_language)}
	 272: {https://en.wikipedia.org/wiki/PowerShell}
	 273: {https://en.wikipedia.org/wiki/Ruby_(programming_language)}
	 274: {https://en.wikipedia.org/wiki/Groovy_(programming_language)}
	 275: {https://en.wikipedia.org/wiki/Perl}
	 276: {https://en.wikipedia.org/wiki/PHP}
	 277: {https://en.wikipedia.org/wiki/ColdFusion}
	 278: {https://en.wikipedia.org/wiki/HTML}
	 279: {https://en.wikipedia.org/wiki/XHTML}
	 280: {https://en.wikipedia.org/wiki/XML}
	 281: {https://en.wikipedia.org/wiki/Document_Object_Model}
	 282: {https://en.wikipedia.org/wiki/JavaScript}
	 283: {https://en.wikipedia.org/wiki/Prototype-based_programming}
	 284: {https://en.wikipedia.org/wiki/Lua_(programming_language)}
	 285: {https://en.wikipedia.org/wiki/Distributed_Data_Management_Architecture}
	 286: {https://en.wikipedia.org/wiki/Smalltalk}
	 287: {https://en.wikipedia.org/wiki/Object_(IBM_i)}
	 288: {https://en.wikipedia.org/wiki/DRDA}
	 289: {https://en.wikipedia.org/wiki/Design_pattern_(computer_science)}
	 290: {https://en.wikipedia.org/wiki/Software_design_pattern}
	 291: {https://en.wikipedia.org/wiki/Function_object}
	 292: {https://en.wikipedia.org/wiki/Anonymous_function}
	 293: {https://en.wikipedia.org/wiki/Immutable_object}
	 294: {https://en.wikipedia.org/wiki/First-class_object}
	 295: {https://en.wikipedia.org/wiki/Container_object}
	 296: {https://en.wikipedia.org/wiki/Factory_object}
	 297: {https://en.wikipedia.org/wiki/Metaobject}
	 298: {https://en.wikipedia.org/wiki/Class_(computer_science)}
	 299: {https://en.wikipedia.org/wiki/Prototype_pattern}
	 300: {https://en.wikipedia.org/wiki/Singleton_pattern}
	 301: {https://en.wikipedia.org/wiki/Filter_object}
	 302: {https://en.wikipedia.org/wiki/Anti-pattern}
	 303: {https://en.wikipedia.org/wiki/God_object}
	 304: {https://en.wikipedia.org/wiki/Design_pattern_(computer_science)}
	 305: {https://en.wikipedia.org/wiki/Erich_Gamma}
	 306: {https://en.wikipedia.org/wiki/Richard_Helm}
	 307: {https://en.wikipedia.org/wiki/Ralph_Johnson_(computer_scientist)}
	 308: {https://en.wikipedia.org/wiki/John_Vlissides}
	 309: {https://en.wikipedia.org/wiki/Creational_pattern}
	 310: {https://en.wikipedia.org/wiki/Factory_method_pattern}
	 311: {https://en.wikipedia.org/wiki/Abstract_factory_pattern}
	 312: {https://en.wikipedia.org/wiki/Singleton_pattern}
	 313: {https://en.wikipedia.org/wiki/Builder_pattern}
	 314: {https://en.wikipedia.org/wiki/Prototype_pattern}
	 315: {https://en.wikipedia.org/wiki/Structural_pattern}
	 316: {https://en.wikipedia.org/wiki/Adapter_pattern}
	 317: {https://en.wikipedia.org/wiki/Bridge_pattern}
	 318: {https://en.wikipedia.org/wiki/Composite_pattern}
	 319: {https://en.wikipedia.org/wiki/Decorator_pattern}
	 320: {https://en.wikipedia.org/wiki/Facade_pattern}
	 321: {https://en.wikipedia.org/wiki/Flyweight_pattern}
	 322: {https://en.wikipedia.org/wiki/Proxy_pattern}
	 323: {https://en.wikipedia.org/wiki/Behavioral_pattern}
	 324: {https://en.wikipedia.org/wiki/Chain-of-responsibility_pattern}
	 325: {https://en.wikipedia.org/wiki/Command_pattern}
	 326: {https://en.wikipedia.org/wiki/Interpreter_pattern}
	 327: {https://en.wikipedia.org/wiki/Iterator_pattern}
	 328: {https://en.wikipedia.org/wiki/Mediator_pattern}
	 329: {https://en.wikipedia.org/wiki/Memento_pattern}
	 330: {https://en.wikipedia.org/wiki/Observer_pattern}
	 331: {https://en.wikipedia.org/wiki/State_pattern}
	 332: {https://en.wikipedia.org/wiki/Strategy_pattern}
	 333: {https://en.wikipedia.org/wiki/Template_method_pattern}
	 334: {https://en.wikipedia.org/wiki/Visitor_pattern}
	 335: {https://en.wikipedia.org/wiki/Object-relational_impedance_mismatch}
	 336: {https://en.wikipedia.org/wiki/Object-relational_mapping}
	 337: {https://en.wikipedia.org/wiki/Object_database}
	 338: {https://en.wikipedia.org/wiki/Relational_database_management_systems}
	 339: {https://en.wikipedia.org/wiki/Relational_database}
	 340: {https://en.wikipedia.org/wiki/Object-relational_impedance_mismatch}
	 341: {https://en.wikipedia.org/wiki/Object-relational_mapping}
	 342: {https://en.wikipedia.org/wiki/Visual_FoxPro}
	 343: {https://en.wikipedia.org/wiki/Java_Data_Objects}
	 344: {https://en.wikipedia.org/wiki/Ruby_on_Rails}
	 345: {https://en.wikipedia.org/wiki/Object_database}
	 346: {https://en.wikipedia.org/wiki/Data_type}
	 347: {https://en.wikipedia.org/wiki/Responsibility-driven_design}
	 348: {https://en.wikipedia.org/wiki/Data-driven_programming}
	 349: {https://en.wikipedia.org/wiki/SOLID}
	 350: {https://en.wikipedia.org/wiki/Single_responsibility_principle}
	 351: {https://en.wikipedia.org/wiki/Open/closed_principle}
	 352: {https://en.wikipedia.org/wiki/Liskov_substitution_principle}
	 353: {https://en.wikipedia.org/wiki/Interface_segregation_principle}
	 354: {https://en.wikipedia.org/wiki/Dependency_inversion_principle}
	 355: {https://en.wikipedia.org/wiki/GRASP_(object-oriented_design)}
	 356: {https://en.wikipedia.org/wiki/Craig_Larman}
	 357: {https://en.wikipedia.org/wiki/Formal_semantics_of_programming_languages}
	 358: {https://en.wikipedia.org/wiki/Record_(computer_science)}
	 359: {https://en.wikipedia.org/wiki/Function_literal}
	 360: {https://en.wikipedia.org/wiki/Inheritance_(object-oriented_programming)}
	 361: {https://en.wikipedia.org/wiki/Recursive_type}
	 362: {https://en.wikipedia.org/wiki/F-Coalgebra}
	 363: {https://en.wikipedia.org/wiki/System_F-sub}
	 364: {https://en.wikipedia.org/wiki/Subtype_polymorphism}
	 365: {https://en.wikipedia.org/wiki/Parametric_polymorphism}
	 366: {https://en.wikipedia.org/wiki/Comparison_of_programming_languages_(object-oriented_programming)}
	 367: {https://en.wikipedia.org/wiki/Component-based_software_engineering}
	 368: {https://en.wikipedia.org/wiki/Object_association}
	 369: {https://en.wikipedia.org/wiki/Object_modeling_language}
	 370: {https://en.wikipedia.org/wiki/Object-oriented_analysis_and_design}
	 371: {https://en.wikipedia.org/wiki/Object-oriented_ontology}
	 372: {https://en.wikipedia.org/wiki/CADES}
	 373: {https://en.wikipedia.org/wiki/Common_Object_Request_Broker_Architecture}
	 374: {https://en.wikipedia.org/wiki/Distributed_Component_Object_Model}
	 375: {https://en.wikipedia.org/wiki/Jeroo}
	 376: {https://en.wikipedia.org/wiki/IDEF4}
	 377: {https://en.wikipedia.org/wiki/Interface_description_language}
	 378: {https://en.wikipedia.org/wiki/UML}
	 379: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 380: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 381: {https://en.wikipedia.org/wiki/Phyllis_Fox}
	 382: {https://en.wikipedia.org/wiki/Louis_Hodes}
	 383: {https://en.wikipedia.org/wiki/David_Luckham}
	 384: {https://en.wikipedia.org/wiki/David_Park_(computer_scientist)}
	 385: {https://en.wikipedia.org/wiki/Steve_Russell_(computer_scientist)}
	 386: {https://en.wikipedia.org/wiki/Boston}
	 387: {https://en.wikipedia.org/wiki/Massachusetts}
	 388: {https://en.wikipedia.org/wiki/M.I.T._Computation_Center}
	 389: {https://en.wikipedia.org/wiki/John_McCarthy_(computer_scientist)}
	 390: {https://en.wikipedia.org/wiki/MIT_Press}
	 391: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 392: {https://en.wikipedia.org/wiki/Ivan_E._Sutherland}
	 393: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 394: {https://en.wikipedia.org/wiki/Kristen_Nygaard}
	 395: {https://en.wikipedia.org/wiki/Ole-Johan_Dahl}
	 396: {https://en.wikipedia.org/wiki/ACM_SIGPLAN_Notices}
	 397: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 398: {https://en.wikipedia.org/wiki/IEEE_Annals_of_the_History_of_Computing}
	 399: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 400: {https://en.wikipedia.org/wiki/S2CID_(identifier)}
	 401: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 402: {https://en.wikipedia.org/wiki/Bibcode_(identifier)}
	 403: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 404: {https://en.wikipedia.org/wiki/Alan_C._Kay}
	 405: {https://en.wikipedia.org/wiki/ACM_SIGPLAN_Notices}
	 406: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 407: {https://en.wikipedia.org/wiki/David_A._Moon}
	 408: {https://en.wikipedia.org/wiki/OOPSLA}
	 409: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 410: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 411: {https://en.wikipedia.org/wiki/S2CID_(identifier)}
	 412: {https://en.wikipedia.org/wiki/Visual_FoxPro}
	 413: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 414: {https://en.wikipedia.org/wiki/John_C._Mitchell}
	 415: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 416: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 417: {https://en.wikipedia.org/wiki/Types_and_Programming_Languages}
	 418: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 419: {https://en.wikipedia.org/wiki/Robert_Harper_(computer_scientist)}
	 420: {https://en.wikipedia.org/wiki/Alexander_Stepanov}
	 421: {https://en.wikipedia.org/wiki/Rob_Pike}
	 422: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 423: {https://en.wikipedia.org/wiki/Niklaus_Wirth}
	 424: {https://en.wikipedia.org/wiki/IEEE_Computer}
	 425: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 426: {https://en.wikipedia.org/wiki/S2CID_(identifier)}
	 427: {https://en.wikipedia.org/wiki/YouTube}
	 428: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 429: {https://en.wikipedia.org/wiki/Bjarne_Stroustrup}
	 430: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 431: {https://en.wikipedia.org/wiki/Apress}
	 432: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 433: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 434: {https://en.wikipedia.org/wiki/O%27Reilly_Media}
	 435: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 436: {https://en.wikipedia.org/wiki/ISSN_(identifier)}
	 437: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 438: {https://en.wikipedia.org/wiki/Luca_Cardelli}
	 439: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 440: {https://en.wikipedia.org/wiki/ISSN_(identifier)}
	 441: {https://en.wikipedia.org/wiki/S2CID_(identifier)}
	 442: {https://en.wikipedia.org/wiki/Wayback_Machine}
	 443: {https://en.wikipedia.org/wiki/Luca_Cardelli}
	 444: {https://en.wikipedia.org/wiki/Peter_Wegner_(computer_scientist)}
	 445: {https://en.wikipedia.org/wiki/ACM_Computing_Surveys}
	 446: {https://en.wikipedia.org/wiki/CiteSeerX_(identifier)}
	 447: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 448: {https://en.wikipedia.org/wiki/S2CID_(identifier)}
	 449: {https://en.wikipedia.org/wiki/Bjarne_Stroustrup}
	 450: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 451: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 452: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 453: {https://en.wikipedia.org/wiki/S2CID_(identifier)}
	 454: {https://en.wikipedia.org/wiki/Paul_Graham_(computer_programmer)}
	 455: {https://en.wikipedia.org/wiki/YouTube}
	 456: {https://en.wikipedia.org/wiki/Robert_Cecil_Martin}
	 457: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 458: {https://en.wikipedia.org/wiki/Martin_Abadi}
	 459: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 460: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 461: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 462: {https://en.wikipedia.org/wiki/Martin_Abadi}
	 463: {https://en.wikipedia.org/wiki/Luca_Cardelli}
	 464: {https://en.wikipedia.org/wiki/Springer_Verlag}
	 465: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 466: {https://en.wikipedia.org/wiki/Harold_Abelson}
	 467: {https://en.wikipedia.org/wiki/Gerald_Jay_Sussman}
	 468: {https://en.wikipedia.org/wiki/MIT_Press}
	 469: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 470: {https://en.wikipedia.org/wiki/Doi_(identifier)}
	 471: {https://en.wikipedia.org/wiki/ISSN_(identifier)}
	 472: {https://en.wikipedia.org/wiki/S2CID_(identifier)}
	 473: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 474: {https://en.wikipedia.org/wiki/Grady_Booch}
	 475: {https://en.wikipedia.org/wiki/Addison-Wesley}
	 476: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 477: {https://en.wikipedia.org/wiki/Oliver_Sims}
	 478: {https://en.wikipedia.org/wiki/John_Wiley_%26_Sons}
	 479: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 480: {https://en.wikipedia.org/wiki/Erich_Gamma}
	 481: {https://en.wikipedia.org/wiki/Richard_Helm}
	 482: {https://en.wikipedia.org/wiki/Ralph_Johnson_(computer_scientist)}
	 483: {https://en.wikipedia.org/wiki/John_Vlissides}
	 484: {https://en.wikipedia.org/wiki/Bibcode_(identifier)}
	 485: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 486: {https://en.wikipedia.org/wiki/Paul_Harmon_(management_author)}
	 487: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 488: {https://en.wikipedia.org/wiki/Ivar_Jacobson}
	 489: {https://en.wikipedia.org/wiki/Use_case}
	 490: {https://en.wikipedia.org/wiki/Bibcode_(identifier)}
	 491: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 492: {https://en.wikipedia.org/wiki/Alan_Kay}
	 493: {https://en.wikipedia.org/wiki/Bertrand_Meyer}
	 494: {https://en.wikipedia.org/wiki/Prentice_Hall}
	 495: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 496: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 497: {https://en.wikipedia.org/wiki/James_Rumbaugh}
	 498: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 499: {https://en.wikipedia.org/wiki/McGraw-Hill}
	 500: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 501: {https://en.wikipedia.org/wiki/Hdl_(identifier)}
	 502: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 503: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 504: {https://en.wikipedia.org/wiki/Addison-Wesley}
	 505: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 506: {https://en.wikipedia.org/wiki/Microsoft_Press}
	 507: {https://en.wikipedia.org/wiki/ISBN_(identifier)}
	 508: {https://en.wikipedia.org/wiki/Programming_paradigm}
	 509: {https://en.wikipedia.org/wiki/Comparison_of_multi-paradigm_programming_languages}
	 510: {https://en.wikipedia.org/wiki/Imperative_programming}
	 511: {https://en.wikipedia.org/wiki/Structured_programming}
	 512: {https://en.wikipedia.org/wiki/Jackson_structured_programming}
	 513: {https://en.wikipedia.org/wiki/Block_(programming)}
	 514: {https://en.wikipedia.org/wiki/Modular_programming}
	 515: {https://en.wikipedia.org/wiki/Non-structured_programming}
	 516: {https://en.wikipedia.org/wiki/Procedural_programming}
	 517: {https://en.wikipedia.org/wiki/Programming_in_the_large_and_programming_in_the_small}
	 518: {https://en.wikipedia.org/wiki/Design_by_contract}
	 519: {https://en.wikipedia.org/wiki/Invariant-based_programming}
	 520: {https://en.wikipedia.org/wiki/Nested_function}
	 521: {https://en.wikipedia.org/wiki/Comparison_of_programming_languages_(object-oriented_programming)}
	 522: {https://en.wikipedia.org/wiki/List_of_object-oriented_programming_languages}
	 523: {https://en.wikipedia.org/wiki/Class-based_programming}
	 524: {https://en.wikipedia.org/wiki/Prototype-based_programming}
	 525: {https://en.wikipedia.org/wiki/Object-based_language}
	 526: {https://en.wikipedia.org/wiki/Agent-oriented_programming}
	 527: {https://en.wikipedia.org/wiki/Immutable_object}
	 528: {https://en.wikipedia.org/wiki/Persistent_programming_language}
	 529: {https://en.wikipedia.org/wiki/Uniform_function_call_syntax}
	 530: {https://en.wikipedia.org/wiki/Declarative_programming}
	 531: {https://en.wikipedia.org/wiki/Functional_programming}
	 532: {https://en.wikipedia.org/wiki/Comparison_of_functional_programming_languages}
	 533: {https://en.wikipedia.org/wiki/Recursion_(computer_science)}
	 534: {https://en.wikipedia.org/wiki/Anonymous_function}
	 535: {https://en.wikipedia.org/wiki/Partial_application}
	 536: {https://en.wikipedia.org/wiki/Higher-order_programming}
	 537: {https://en.wikipedia.org/wiki/Purely_functional_programming}
	 538: {https://en.wikipedia.org/wiki/Total_functional_programming}
	 539: {https://en.wikipedia.org/wiki/Strict_programming_language}
	 540: {https://en.wikipedia.org/wiki/Generalized_algebraic_data_type}
	 541: {https://en.wikipedia.org/wiki/Dependent_type}
	 542: {https://en.wikipedia.org/wiki/Functional_logic_programming}
	 543: {https://en.wikipedia.org/wiki/Tacit_programming}
	 544: {https://en.wikipedia.org/wiki/Expression-oriented_programming_language}
	 545: {https://en.wikipedia.org/wiki/Applicative_programming_language}
	 546: {https://en.wikipedia.org/wiki/Concatenative_programming_language}
	 547: {https://en.wikipedia.org/wiki/Function-level_programming}
	 548: {https://en.wikipedia.org/wiki/Value-level_programming}
	 549: {https://en.wikipedia.org/wiki/Dataflow_programming}
	 550: {https://en.wikipedia.org/wiki/Flow-based_programming}
	 551: {https://en.wikipedia.org/wiki/Reactive_programming}
	 552: {https://en.wikipedia.org/wiki/Functional_reactive_programming}
	 553: {https://en.wikipedia.org/wiki/Signal_programming}
	 554: {https://en.wikipedia.org/wiki/Stream_processing}
	 555: {https://en.wikipedia.org/wiki/Synchronous_programming_language}
	 556: {https://en.wikipedia.org/wiki/Logic_programming}
	 557: {https://en.wikipedia.org/wiki/Abductive_logic_programming}
	 558: {https://en.wikipedia.org/wiki/Answer_set_programming}
	 559: {https://en.wikipedia.org/wiki/Constraint_programming}
	 560: {https://en.wikipedia.org/wiki/Constraint_logic_programming}
	 561: {https://en.wikipedia.org/wiki/Inductive_logic_programming}
	 562: {https://en.wikipedia.org/wiki/Nondeterministic_programming}
	 563: {https://en.wikipedia.org/wiki/Ontology_language}
	 564: {https://en.wikipedia.org/wiki/Probabilistic_logic_programming}
	 565: {https://en.wikipedia.org/wiki/Query_language}
	 566: {https://en.wikipedia.org/wiki/Domain-specific_language}
	 567: {https://en.wikipedia.org/wiki/Algebraic_modeling_language}
	 568: {https://en.wikipedia.org/wiki/Array_programming}
	 569: {https://en.wikipedia.org/wiki/Automata-based_programming}
	 570: {https://en.wikipedia.org/wiki/Action_language}
	 571: {https://en.wikipedia.org/wiki/Command_language}
	 572: {https://en.wikipedia.org/wiki/Spacecraft_command_language}
	 573: {https://en.wikipedia.org/wiki/Differentiable_programming}
	 574: {https://en.wikipedia.org/wiki/End-user_development}
	 575: {https://en.wikipedia.org/wiki/Grammar-oriented_programming}
	 576: {https://en.wikipedia.org/wiki/Interface_description_language}
	 577: {https://en.wikipedia.org/wiki/Language-oriented_programming}
	 578: {https://en.wikipedia.org/wiki/List_comprehension}
	 579: {https://en.wikipedia.org/wiki/Low-code_development_platform}
	 580: {https://en.wikipedia.org/wiki/Modeling_language}
	 581: {https://en.wikipedia.org/wiki/Natural-language_programming}
	 582: {https://en.wikipedia.org/wiki/Non-English-based_programming_languages}
	 583: {https://en.wikipedia.org/wiki/Page_description_language}
	 584: {https://en.wikipedia.org/wiki/Pipeline_(software)}
	 585: {https://en.wikipedia.org/wiki/Filter_(software)}
	 586: {https://en.wikipedia.org/wiki/Probabilistic_programming}
	 587: {https://en.wikipedia.org/wiki/Quantum_programming}
	 588: {https://en.wikipedia.org/wiki/Scientific_programming_language}
	 589: {https://en.wikipedia.org/wiki/Scripting_language}
	 590: {https://en.wikipedia.org/wiki/Set_theoretic_programming}
	 591: {https://en.wikipedia.org/wiki/Simulation_language}
	 592: {https://en.wikipedia.org/wiki/Stack-oriented_programming}
	 593: {https://en.wikipedia.org/wiki/System_programming_language}
	 594: {https://en.wikipedia.org/wiki/Tactile_programming_language}
	 595: {https://en.wikipedia.org/wiki/Template_processor}
	 596: {https://en.wikipedia.org/wiki/Transformation_language}
	 597: {https://en.wikipedia.org/wiki/Graph_rewriting}
	 598: {https://en.wikipedia.org/wiki/Production_system_(computer_science)}
	 599: {https://en.wikipedia.org/wiki/Pattern_matching}
	 600: {https://en.wikipedia.org/wiki/Visual_programming_language}
	 601: {https://en.wikipedia.org/wiki/Concurrent_computing}
	 602: {https://en.wikipedia.org/wiki/Distributed_computing}
	 603: {https://en.wikipedia.org/wiki/Parallel_computing}
	 604: {https://en.wikipedia.org/wiki/Actor_model}
	 605: {https://en.wikipedia.org/wiki/Automatic_mutual_exclusion}
	 606: {https://en.wikipedia.org/wiki/Choreographic_programming}
	 607: {https://en.wikipedia.org/wiki/Concurrent_logic_programming}
	 608: {https://en.wikipedia.org/wiki/Concurrent_constraint_logic_programming}
	 609: {https://en.wikipedia.org/wiki/Concurrent_object-oriented_programming}
	 610: {https://en.wikipedia.org/wiki/Macroprogramming}
	 611: {https://en.wikipedia.org/wiki/Multitier_programming}
	 612: {https://en.wikipedia.org/wiki/Organic_computing}
	 613: {https://en.wikipedia.org/wiki/Parallel_programming_model}
	 614: {https://en.wikipedia.org/wiki/Partitioned_global_address_space}
	 615: {https://en.wikipedia.org/wiki/Process-oriented_programming}
	 616: {https://en.wikipedia.org/wiki/Relativistic_programming}
	 617: {https://en.wikipedia.org/wiki/Service-oriented_programming}
	 618: {https://en.wikipedia.org/wiki/Structured_concurrency}
	 619: {https://en.wikipedia.org/wiki/Metaprogramming}
	 620: {https://en.wikipedia.org/wiki/Attribute-oriented_programming}
	 621: {https://en.wikipedia.org/wiki/Automatic_programming}
	 622: {https://en.wikipedia.org/wiki/Inductive_programming}
	 623: {https://en.wikipedia.org/wiki/Dynamic_programming_language}
	 624: {https://en.wikipedia.org/wiki/Extensible_programming}
	 625: {https://en.wikipedia.org/wiki/Generic_programming}
	 626: {https://en.wikipedia.org/wiki/Homoiconicity}
	 627: {https://en.wikipedia.org/wiki/Interactive_programming}
	 628: {https://en.wikipedia.org/wiki/Macro_(computer_science)}
	 629: {https://en.wikipedia.org/wiki/Hygienic_macro}
	 630: {https://en.wikipedia.org/wiki/Metalinguistic_abstraction}
	 631: {https://en.wikipedia.org/wiki/Multi-stage_programming}
	 632: {https://en.wikipedia.org/wiki/Program_synthesis}
	 633: {https://en.wikipedia.org/wiki/Bayesian_program_synthesis}
	 634: {https://en.wikipedia.org/wiki/Inferential_programming}
	 635: {https://en.wikipedia.org/wiki/Programming_by_demonstration}
	 636: {https://en.wikipedia.org/wiki/Programming_by_example}
	 637: {https://en.wikipedia.org/wiki/Reflective_programming}
	 638: {https://en.wikipedia.org/wiki/Self-modifying_code}
	 639: {https://en.wikipedia.org/wiki/Symbolic_programming}
	 640: {https://en.wikipedia.org/wiki/Template_metaprogramming}
	 641: {https://en.wikipedia.org/wiki/Separation_of_concerns}
	 642: {https://en.wikipedia.org/wiki/Aspect-oriented_programming}
	 643: {https://en.wikipedia.org/wiki/Component-based_software_engineering}
	 644: {https://en.wikipedia.org/wiki/Data-driven_programming}
	 645: {https://en.wikipedia.org/wiki/Data-oriented_design}
	 646: {https://en.wikipedia.org/wiki/Event-driven_programming}
	 647: {https://en.wikipedia.org/wiki/Feature-oriented_programming}
	 648: {https://en.wikipedia.org/wiki/Literate_programming}
	 649: {https://en.wikipedia.org/wiki/Role-oriented_programming}
	 650: {https://en.wikipedia.org/wiki/Subject-oriented_programming}
	 651: {https://en.wikipedia.org/wiki/Programming_paradigm}
	 652: {https://en.wikipedia.org/wiki/Machine_code}
	 653: {https://en.wikipedia.org/wiki/Assembly_language}
	 654: {https://en.wikipedia.org/wiki/Compiled_language}
	 655: {https://en.wikipedia.org/wiki/Interpreted_language}
	 656: {https://en.wikipedia.org/wiki/Low-level_programming_language}
	 657: {https://en.wikipedia.org/wiki/High-level_programming_language}
	 658: {https://en.wikipedia.org/wiki/Very_high-level_programming_language}
	 659: {https://en.wikipedia.org/wiki/Esoteric_programming_language}
	 660: {https://en.wikipedia.org/wiki/Programming_language_generations}
	 661: {https://en.wikipedia.org/wiki/First-generation_programming_language}
	 662: {https://en.wikipedia.org/wiki/Second-generation_programming_language}
	 663: {https://en.wikipedia.org/wiki/Third-generation_programming_language}
	 664: {https://en.wikipedia.org/wiki/Fourth-generation_programming_language}
	 665: {https://en.wikipedia.org/wiki/Fifth-generation_programming_language}
	 666: {https://en.wikipedia.org/wiki/Software_engineering}
	 667: {https://en.wikipedia.org/wiki/Computer_programming}
	 668: {https://en.wikipedia.org/wiki/DevOps}
	 669: {https://en.wikipedia.org/wiki/Empirical_software_engineering}
	 670: {https://en.wikipedia.org/wiki/Experimental_software_engineering}
	 671: {https://en.wikipedia.org/wiki/Formal_methods}
	 672: {https://en.wikipedia.org/wiki/Requirements_engineering}
	 673: {https://en.wikipedia.org/wiki/Search-based_software_engineering}
	 674: {https://en.wikipedia.org/wiki/Site_reliability_engineering}
	 675: {https://en.wikipedia.org/wiki/Social_software_engineering}
	 676: {https://en.wikipedia.org/wiki/Software_deployment}
	 677: {https://en.wikipedia.org/wiki/Software_design}
	 678: {https://en.wikipedia.org/wiki/Software_maintenance}
	 679: {https://en.wikipedia.org/wiki/Software_testing}
	 680: {https://en.wikipedia.org/wiki/Systems_analysis}
	 681: {https://en.wikipedia.org/wiki/Abstraction_(computer_science)}
	 682: {https://en.wikipedia.org/wiki/CI/CD}
	 683: {https://en.wikipedia.org/wiki/Computer_compatibility}
	 684: {https://en.wikipedia.org/wiki/Backward_compatibility}
	 685: {https://en.wikipedia.org/wiki/Compatibility_layer}
	 686: {https://en.wikipedia.org/wiki/Compatibility_mode}
	 687: {https://en.wikipedia.org/wiki/Forward_compatibility}
	 688: {https://en.wikipedia.org/wiki/Software_incompatibility}
	 689: {https://en.wikipedia.org/wiki/Component-based_software_engineering}
	 690: {https://en.wikipedia.org/wiki/Data_modeling}
	 691: {https://en.wikipedia.org/wiki/Enterprise_architecture}
	 692: {https://en.wikipedia.org/wiki/Functional_specification}
	 693: {https://en.wikipedia.org/wiki/Modeling_language}
	 694: {https://en.wikipedia.org/wiki/Programming_paradigm}
	 695: {https://en.wikipedia.org/wiki/Software}
	 696: {https://en.wikipedia.org/wiki/Software_archaeology}
	 697: {https://en.wikipedia.org/wiki/Software_architecture}
	 698: {https://en.wikipedia.org/wiki/Software_configuration_management}
	 699: {https://en.wikipedia.org/wiki/Software_development_process}
	 700: {https://en.wikipedia.org/wiki/Software_quality}
	 701: {https://en.wikipedia.org/wiki/Software_quality_assurance}
	 702: {https://en.wikipedia.org/wiki/Software_system}
	 703: {https://en.wikipedia.org/wiki/Software_verification_and_validation}
	 704: {https://en.wikipedia.org/wiki/Structured_analysis}
	 705: {https://en.wikipedia.org/wiki/Essential_systems_analysis}
	 706: {https://en.wikipedia.org/wiki/Agile_software_development}
	 707: {https://en.wikipedia.org/wiki/Aspect-oriented_programming}
	 708: {https://en.wikipedia.org/wiki/Ontology_(information_science)}
	 709: {https://en.wikipedia.org/wiki/Systems_development_life_cycle}
	 710: {https://en.wikipedia.org/wiki/Service-oriented_architecture}
	 711: {https://en.wikipedia.org/wiki/Agile_software_development}
	 712: {https://en.wikipedia.org/wiki/Enterprise_unified_process}
	 713: {https://en.wikipedia.org/wiki/Executable_UML}
	 714: {https://en.wikipedia.org/wiki/Incremental_build_model}
	 715: {https://en.wikipedia.org/wiki/Iterative_and_incremental_development}
	 716: {https://en.wikipedia.org/wiki/Software_prototyping}
	 717: {https://en.wikipedia.org/wiki/Rapid_application_development}
	 718: {https://en.wikipedia.org/wiki/Scrum_(software_development)}
	 719: {https://en.wikipedia.org/wiki/Spiral_model}
	 720: {https://en.wikipedia.org/wiki/Unified_process}
	 721: {https://en.wikipedia.org/wiki/V-model_(software_development)}
	 722: {https://en.wikipedia.org/wiki/Waterfall_model}
	 723: {https://en.wikipedia.org/wiki/Extreme_programming}
	 724: {https://en.wikipedia.org/wiki/Model-driven_engineering}
	 725: {https://en.wikipedia.org/wiki/Round-trip_engineering}
	 726: {https://en.wikipedia.org/wiki/Capability_Maturity_Model_Integration}
	 727: {https://en.wikipedia.org/wiki/Data_model}
	 728: {https://en.wikipedia.org/wiki/Entity%E2%80%93relationship_model}
	 729: {https://en.wikipedia.org/wiki/Function_model}
	 730: {https://en.wikipedia.org/wiki/Information_model}
	 731: {https://en.wikipedia.org/wiki/Metamodeling}
	 732: {https://en.wikipedia.org/wiki/Object_model}
	 733: {https://en.wikipedia.org/wiki/ISO/IEC_15504}
	 734: {https://en.wikipedia.org/wiki/Systems_modeling}
	 735: {https://en.wikipedia.org/wiki/View_model}
	 736: {https://en.wikipedia.org/wiki/IDEF}
	 737: {https://en.wikipedia.org/wiki/Systems_modeling_language}
	 738: {https://en.wikipedia.org/wiki/Unified_Modeling_Language}
	 739: {https://en.wikipedia.org/wiki/Universal_Systems_Language}
	 740: {https://en.wikipedia.org/wiki/Computer_engineering}
	 741: {https://en.wikipedia.org/wiki/Computer_science}
	 742: {https://en.wikipedia.org/wiki/Information_science}
	 743: {https://en.wikipedia.org/wiki/Project_management}
	 744: {https://en.wikipedia.org/wiki/Risk_management}
	 745: {https://en.wikipedia.org/wiki/Systems_engineering}
